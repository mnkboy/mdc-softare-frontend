{"version":3,"sources":["redux/PersonaActivistaDucks.js","redux/CasillasDucks.js","redux/InfoAdicionalCasillasDucks.js","redux/ReportesRgsDucks.js","redux/EleccionesDucks.js","redux/store.js","components/Navbar.jsx","components/ListIcons.jsx","components/DrawerCustom.jsx","components/utils/ContextMenuCpt.jsx","components/pages/Home.jsx","components/utils/DataGridCpt.jsx","components/pages/Promovidos.jsx","components/pages/Casillas.jsx","components/pages/Graficas.jsx","components/pages/IncidentesCasillas.jsx","components/pages/ReportesRgs.jsx","components/pages/Elecciones.jsx","components/utils/AccordionCpt.jsx","components/pages/Promovidos/PromovidoDetalle.jsx","components/Container.jsx","themeConfig.js","App.jsx","index.js"],"names":["dataInicial","array","reload","GET_PERSONA_ACTIVISTA","UPDATE_PERSONA_ACTIVISTA_VOTADA","obtenerPersonaActivistaAccion","persona","dispatch","getState","a","query","id","isofetch","process","method","headers","body","JSON","stringify","then","res","json","result","type","payload","data","findPersonasActivistas","reaload","error","console","log","GET_CASILLA","UPDATE_CASILLA","GET_INFO_ADICIONAL_CASILLA","UPDATE_INFO_ADICIONAL_CASILLA","GET_REPORTES_RGS","UPDATE_REPORTES_RGS","GET_ELECCIONES","UPDATE_ELECCIONES","rootReducer","combineReducers","personasActivistas","state","action","casillas","infoAdicionalCasillas","reportesRgs","elecciones","composeEnhacers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","styles","makeStyles","theme","menuButton","marginRight","spacing","breakpoints","up","display","title","flexGrow","appBar","width","margiLeft","Navbar","props","classes","AppBar","className","Toolbar","IconButton","color","onClick","openAction","Menu","Typography","variant","Button","ListIcons","List","activeStyle","fontWeight","style","textDecoration","to","ListItem","button","ListItemIcon","ListItemText","primary","Divider","AccountBox","AccountBalance","Error","FindInPage","BorderColor","BarChart","drawer","flexShrink","drawerPaper","toolbar","mixins","DrawerCustom","Drawer","paper","anchor","open","onClose","initialState","mouseX","mouseY","ContextMenu","React","useState","setState","handleClose","onContextMenu","event","preventDefault","clientX","clientY","cursor","keepMounted","anchorReference","anchorPosition","top","left","undefined","MenuItem","Home","DataGridCpt","height","sortingOrder","showToolbar","disableMultipleSelection","disableColumnMenu","loading","sortModel","field","sort","rows","actArray","columns","map","column","disableClickEventBubbling","pageSize","checkboxSelection","Promovidos","useDispatch","activistas","useSelector","store","history","useHistory","votado","useEffect","handleVotado","actualizarPersonaActivistaVotadaAccion","headerName","hide","renderCell","params","aria-label","component","fields","api","getAllColumns","c","filter","thisRow","forEach","f","getValue","path","push","routeChange","Input","value","Casillas","findCasillas","Graficas","xs","chartType","loader","options","chartArea","hAxis","minValue","vAxis","legendToggle","titleTextStyle","bubble","textStyle","fontSize","label","role","intervals","legend","IncidentesCasillas","findInfoAdicionalCasilla","ReportesRgs","findReportesRgs","Elecciones","findTablaElecciones","root","heading","typography","pxToRem","fontWeightRegular","PromovidoDetalle","activista","useParams","verify","idcasilla","seccion","idlistanom","puesto","nombre","claveelector","idjefe","subactivistas","content","backgroundColor","palette","background","default","padding","Container","setOpen","Hidden","xsDown","smUp","exact","createMuiTheme","main","purple","secondary","lime","App","createStore","applyMiddleware","thunk","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7921b494.chunk.js","sourcesContent":["import isofetch from 'isomorphic-fetch'\n\n//constantes\nconst dataInicial = {\n    array: [],\n    reload: false\n}\n//Obtener datos de persona activista\nconst GET_PERSONA_ACTIVISTA = 'GET_PERSONA_ACTIVISTA';\nconst UPDATE_PERSONA_ACTIVISTA_VOTADA = 'UPDATE_PERSONA_ACTIVISTA_VOTADA';\n\n//reducer //PersonaActivistaReducer = paReducer\nexport default function personaActivistaReducer(state = dataInicial, action) {\n    switch (action.type) {\n        case GET_PERSONA_ACTIVISTA:\n            return { ...state, array: action.payload, reload: action.reload }\n        case UPDATE_PERSONA_ACTIVISTA_VOTADA:\n            return { ...state, array: action.payload, reload: action.reload }\n        default:\n            return state\n    }\n}\n\n//acciones\nexport const obtenerPersonaActivistaAccion = (persona) => async (dispatch, getState) => {\n    //Intentamos accion\n    try {\n\n        const query = `\n        query{\n            findPersonasActivistas(id: \"${persona.id}\"){\n                ...PersonaActivista\n                subactivistas{\n                    ...PersonaActivista\n                        subactivistas{\n                            ...PersonaActivista\n                    }        \n                }        \n            }\n        }\n        \n        fragment PersonaActivista on PersonaActivista {\n                id:idpersonaactivista\n                idcasilla\n                seccion\n                idlistanom\n                puesto\n                nombre\n                claveelector\n                idjefe\n                votado        \n            }`;\n\n        isofetch(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query }),\n        })\n            .then(res => res.json())\n            .then((result) => {\n                try {\n                    return dispatch({\n                        type: GET_PERSONA_ACTIVISTA,\n                        payload: result.data.findPersonasActivistas,\n                        reaload: false,\n                    })\n\n                } catch (error) {\n                    console.log(error)\n                }\n\n            });\n\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}\n\nexport const actualizarPersonaActivistaVotadaAccion = (persona) => async (dispatch, getState) => {\n    //Intentamos accion\n    try {\n\n        const query = `\n        mutation {  \n            updatePersonaActivista(input: \n            {\n                idpersonaactivista: \"${persona.id}\", votado: ${persona.votado}\n              })\n          }`;\n\n        const { array } = getState().personasActivistas;\n\n        isofetch(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query }),\n        })\n            .then(res => res.json())\n            .then((result) => {\n                try {\n                    return dispatch({\n                        type: UPDATE_PERSONA_ACTIVISTA_VOTADA,\n                        payload: array,\n                        reload: true\n                    })\n\n                } catch (error) {\n                    console.log(error)\n                }\n\n            });\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}","import isofetch from 'isomorphic-fetch'\n\n//constantes\nconst dataInicial = {\n    array: [],\n    reload: false\n}\n//Obtener datos de persona activista\nconst GET_CASILLA = 'GET_CASILLA';\nconst UPDATE_CASILLA = 'UPDATE_CASILLA';\n\n//reducer //casillaReducer = paReducer\nexport default function casillaReducer(state = dataInicial, action) {\n    switch (action.type) {\n        case GET_CASILLA:\n            return { ...state, array: action.payload }\n        case UPDATE_CASILLA:\n            return { ...state, array: action.payload }\n        default:\n            return state\n    }\n}\n\n//acciones\nexport const obtenerCasillaAccion = () => async (dispatch, getState) => {\n    //Intentamos accion\n    try {\n\n        const query = `\n        query {\n            findCasillas(id: \"\"){\n                ...Casilla               \n            }\n        }\n        \n        fragment Casilla on Casilla {\n                id:idcasilla\n                seccionasignada\n                padronelectoral\n                listanominal\n                cargo\n                flujo10am\n                promovidos10am\n                flujo12pm\n                promovidos12pm\n                flujo2pm\n                promovidos2pm\n                flujo4pm\n                promovidos4pm\n                flujo6pm\n                promovidos6pm\n                nombreinformatico\n                telefono \n            }`;\n\n\n        isofetch(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query }),\n        })\n            .then(res => res.json())\n            .then((result) => {\n                try {\n                    return dispatch({\n                        type: GET_CASILLA,\n                        payload: result.data.findCasillas,\n                        reaload: false,\n                    })\n\n                } catch (error) {\n                    console.log(error)\n                }\n            });\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}\n\nexport const actualizarCasillaVotadaAccion = (persona, setreReload) => async (dispatch, getState) => {\n    //Intentamos accion\n    try {\n\n        const query = `\n        mutation {  \n            updatecasilla(input: \n            {\n                idcasilla: \"${persona.id}\", votado: ${persona.votado}\n              })\n          }`;\n\n        const { array } = getState().personasActivistas;\n\n        isofetch(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query }),\n        })\n            .then(res => res.json())\n            .then(result => dispatch({\n                type: UPDATE_CASILLA,\n                payload: array,\n                reload: true\n            }))\n            .then(() => {\n                setreReload(true)\n            })\n\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}","import isofetch from 'isomorphic-fetch'\n\n//constantes\nconst dataInicial = {\n    array: [],\n    reload: false\n}\n//Obtener datos de persona activista\nconst GET_INFO_ADICIONAL_CASILLA = 'GET_INFO_ADICIONAL_CASILLA';\nconst UPDATE_INFO_ADICIONAL_CASILLA = 'UPDATE_INFO_ADICIONAL_CASILLA';\n\n//reducer \nexport default function infoAdicionalCasillaReducer(state = dataInicial, action) {\n    switch (action.type) {\n        case GET_INFO_ADICIONAL_CASILLA:\n            return { ...state, array: action.payload }\n        case UPDATE_INFO_ADICIONAL_CASILLA:\n            return { ...state, array: action.payload }\n        default:\n            return state\n    }\n}\n\n//acciones\nexport const obtenerinfoAdicionalCasillaAccion = (persona) => async (dispatch, getState) => {\n    //Intentamos accion\n    try {\n\n        const query = `\n        query {\n            findInfoAdicionalCasilla(id: \"\"){\n                ...InfoAdicionalCasilla               \n            }\n        }\n        \n        fragment InfoAdicionalCasilla on InfoAdicionalCasilla {\n            id:idinfoadicionalcasilla\n            idcasilla\n            seccionasignada\n            horaapertura\n            horacierre\n            incidenteuno\n            horaincidenteuno\n            incidentedos\n            horaincidentedos\n            incidentetres\n            horaincidentetres\n            incidentecuatro\n            horaincidentecuatro\n            incidentecinco\n            horaincidentecinco\n            prip1\n            prip2\n            pris1\n            pris2\n            presidente\n            sec1\n            sec2\n            esc1\n            esc2\n            esc3\n            sup1\n            sup2\n            sup3\n        }`;\n\n\n        isofetch(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query }),\n        })\n            .then(res => res.json())\n            .then((result) => {\n                try {\n                    return dispatch({\n                        type: GET_INFO_ADICIONAL_CASILLA,\n                        payload: result.data.findInfoAdicionalCasilla,\n                        reaload: false,\n                    })\n\n                } catch (error) {\n                    console.log(error)\n                }\n            });\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}\n\nexport const actualizarinfoAdicionalCasillaVotadaAccion = (persona, setreReload) => async (dispatch, getState) => {\n    //Intentamos accion\n    try {\n\n        const query = `\n        mutation {  \n            updateinfoAdicionalinfoAdicionalCasilla(input: \n            {\n                idinfoAdicionalinfoAdicionalCasilla: \"${persona.id}\", votado: ${persona.votado}\n              })\n          }`;\n\n        const { array } = getState().personasActivistas;\n\n        isofetch(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query }),\n        })\n            .then(res => res.json())\n            .then(result => dispatch({\n                type: UPDATE_INFO_ADICIONAL_CASILLA,\n                payload: array,\n                reload: true\n            }))\n            .then(() => {\n                setreReload(true)\n            })\n\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}","import isofetch from 'isomorphic-fetch'\n\n//constantes\nconst dataInicial = {\n    array: [],\n    reload: false\n}\n//Obtener datos de reportes activista\nconst GET_REPORTES_RGS = 'GET_REPORTES_RGS';\nconst UPDATE_REPORTES_RGS = 'UPDATE_REPORTES_RGS';\n\n//reducer \nexport default function reportesRgsReducer(state = dataInicial, action) {\n    switch (action.type) {\n        case GET_REPORTES_RGS:\n            return { ...state, array: action.payload }\n        case UPDATE_REPORTES_RGS:\n            return { ...state, array: action.payload }\n        default:\n            return state\n    }\n}\n\n//acciones\nexport const obtenerReportesRgsAccion = () => async (dispatch, getState) => {\n    //Intentamos accion\n    try {\n\n        const query = `\n        query {\n            findReportesRgs(id: \"\"){\n                ...ReportesRgs               \n            }\n        }\n        \n        fragment ReportesRgs on ReportesRgs {\n            id: idreportesrgs\n            seccion\n            idlistanom\n            puesto\n            nombre\n            telefono\n            claveelector\n            observaciones\n        }`;\n\n\n        isofetch(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query }),\n        })\n            .then(res => res.json())\n            .then((result) => {\n                try {\n                    return dispatch({\n                        type: GET_REPORTES_RGS,\n                        payload: result.data.findReportesRgs,\n                        reaload: false,\n                    })\n\n                } catch (error) {\n                    console.log(error)\n                }\n            });\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}\n\nexport const actualizarReportesRgsVotadaAccion = (setreReload) => async (dispatch, getState) => {\n    //Intentamos accion\n    try {\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}","import isofetch from 'isomorphic-fetch'\n\n//constantes\nconst dataInicial = {\n    array: [],\n    reload: false\n}\n//Obtener datos de elecciones activista\nconst GET_ELECCIONES = 'GET_ELECCIONES';\nconst UPDATE_ELECCIONES = 'UPDATE_ELECCIONES';\n\n//reducer \nexport default function eleccionesReducer(state = dataInicial, action) {\n    switch (action.type) {\n        case GET_ELECCIONES:\n            return { ...state, array: action.payload }\n        case UPDATE_ELECCIONES:\n            return { ...state, array: action.payload }\n        default:\n            return state\n    }\n}\n\n//acciones\nexport const obtenerEleccionesAccion = () => async (dispatch, getState) => {\n    //Intentamos accion\n    try {\n\n        const query = `\n        query {\n            findTablaElecciones(id: \"\"){\n                ...TablaElecciones               \n            }\n        }\n        \n        fragment TablaElecciones on TablaElecciones {\n            id:idtablaelecciones\n            idcasilla\n            idrepcasilla\n            seccion\n            tipocasilla\n            pan\n            pri\n            prd\n            pvem\n            pt\n            movciudadano\n            nuevaalianza\n            morena\n            encuentrosocial\n            panprdmovciudadano\n            panprd\n            panmovciudadano\n            prdmovciudadano\n            pripvemnuevaalianza\n            pripvem\n            prinuevaalianza\n            pvemnuevaalianza\n            ptmorenaencuentrosocial\n            ptmorena\n            ptencuentrosocial\n            morenaencuentrosocial\n            candidatoindependiente\n            noregistrados\n            candidatosnoregistrados\n            nulos\n            total\n            listanominal\n        }`;\n\n\n        isofetch(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ query }),\n        })\n            .then(res => res.json())\n            .then((result) => {\n                try {\n                    return dispatch({\n                        type: GET_ELECCIONES,\n                        payload: result.data.findTablaElecciones,\n                        reaload: false,\n                    })\n\n                } catch (error) {\n                    console.log(error)\n                }\n            });\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}\n\nexport const actualizarEleccionesVotadaAccion = (setreReload) => async (dispatch, getState) => {\n    //Intentamos accion\n    try {\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport personaActivistaReducer from './PersonaActivistaDucks';\nimport casillaReducer from './CasillasDucks';\nimport infoAdicionalCasillaReducer from './InfoAdicionalCasillasDucks';\nimport reportesRgsReducer from './ReportesRgsDucks';\nimport eleccionesReducer from './EleccionesDucks';\n\nconst rootReducer = combineReducers({\n    personasActivistas: personaActivistaReducer,\n    casillas: casillaReducer,\n    infoAdicionalCasillas: infoAdicionalCasillaReducer,\n    reportesRgs: reportesRgsReducer,\n    elecciones: eleccionesReducer,\n})\n\nconst composeEnhacers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function generateStore() {\n    const store = createStore(rootReducer, composeEnhacers(applyMiddleware(thunk)))\n    return store;\n}","import React from 'react'\nimport { AppBar, IconButton, makeStyles, Toolbar, Typography, Button } from '@material-ui/core'\nimport { Menu } from '@material-ui/icons';\nconst drawerWidth = 240;\n\nconst styles = makeStyles(theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    title: {\n        flexGrow: 1\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            margiLeft: drawerWidth\n        }\n    }\n\n}))\n\nconst Navbar = (props) => {\n    const classes = styles()\n    return (\n        <div>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        className={classes.menuButton}\n                        color='inherit'\n                        onClick={() => props.openAction()}\n                    >\n                        <Menu />\n                    </IconButton>\n                    <Typography variant='h6' className={classes.title}>\n                        MDC Software\n                    </Typography>\n                    <Button color='inherit'>Login</Button>\n                    <Button color='inherit'>Logout</Button>\n                </Toolbar>\n\n            </AppBar>\n        </div >\n    )\n}\n\nexport default Navbar\n","import React, { Fragment } from 'react'\nimport { List, ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core'\nimport { Home, AccountBox, BarChart, AccountBalance, Error, FindInPage, BorderColor } from '@material-ui/icons/'\n\nimport { NavLink } from \"react-router-dom\";\nconst ListIcons = () => {\n    return (\n        <Fragment>\n            <List>\n                <NavLink\n                    className=\"tags\"\n                    activeStyle={{ color: \"#1e88e5\", fontWeight: \"bold\", }}\n                    style={{ color: \"#424242\", textDecoration: 'none' }}\n                    to={\"/home\"}\n                >\n                    <ListItem button>\n                        <ListItemIcon>\n                            <Home />\n                        </ListItemIcon>\n                        <ListItemText primary='Home' />\n                    </ListItem>\n                </NavLink>\n                <Divider />\n                <NavLink\n                    className=\"tags\"\n                    activeStyle={{ color: \"#1e88e5\" }}\n                    style={{ color: \"#424242\", textDecoration: 'none' }}\n                    to={\"/promovidos\"}\n                >\n                    <ListItem button>\n                        <ListItemIcon>\n                            <AccountBox />\n                        </ListItemIcon>\n                        <ListItemText primary='Promovidos' />\n                    </ListItem>\n                </NavLink>\n                <Divider />\n                <NavLink\n                    className=\"tags\"\n                    activeStyle={{ color: \"#1e88e5\" }}\n                    style={{ color: \"#424242\", textDecoration: 'none' }}\n                    to={\"/casillas\"}\n                >\n                    <ListItem button>\n                        <ListItemIcon>\n                            <AccountBalance />\n                        </ListItemIcon>\n                        <ListItemText primary='Casillas' />\n                    </ListItem>\n                </NavLink>\n                <Divider />\n                <NavLink\n                    className=\"tags\"\n                    activeStyle={{ color: \"#1e88e5\" }}\n                    style={{ color: \"#424242\", textDecoration: 'none' }}\n                    to={\"/incidentes\"}\n                >\n                    <ListItem button>\n                        <ListItemIcon>\n                            <Error />\n                        </ListItemIcon>\n                        <ListItemText primary='Incidentes Casillas' />\n                    </ListItem>\n                </NavLink>\n                <Divider />\n                <NavLink\n                    className=\"tags\"\n                    activeStyle={{ color: \"#1e88e5\" }}\n                    style={{ color: \"#424242\", textDecoration: 'none' }}\n                    to={\"/reportesrgs\"}\n                >\n                    <ListItem button>\n                        <ListItemIcon>\n                            <FindInPage />\n                        </ListItemIcon>\n                        <ListItemText primary='ReportesRGS' />\n                    </ListItem>\n                </NavLink>\n                <Divider />\n                <NavLink\n                    className=\"tags\"\n                    activeStyle={{ color: \"#1e88e5\" }}\n                    style={{ color: \"#424242\", textDecoration: 'none' }}\n                    to={\"/elecciones\"}\n                >\n                    <ListItem button>\n                        <ListItemIcon>\n                            <BorderColor />\n                        </ListItemIcon>\n                        <ListItemText primary='Elecciones' />\n                    </ListItem>\n                </NavLink>\n                <Divider />\n                <NavLink\n                    className=\"tags\"\n                    activeStyle={{ color: \"#1e88e5\" }}\n                    style={{ color: \"#424242\", textDecoration: 'none' }}\n                    to={\"/graficas\"}\n                >\n                    <ListItem button>\n                        <ListItemIcon>\n                            <BarChart />\n                        </ListItemIcon>\n                        <ListItemText primary='Graficas' />\n                    </ListItem>\n                </NavLink>\n            </List>\n        </Fragment>\n    )\n}\n\nexport default ListIcons\n","import React, { Fragment } from 'react'\nimport { makeStyles, Drawer, Divider } from '@material-ui/core'\nimport ListIcons from './ListIcons';\n\nconst drawerWidth = 240;\n\nconst styles = makeStyles(theme => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0\n    },\n    drawerPaper: {\n        width: drawerWidth\n    },\n    toolbar: theme.mixins.toolbar,\n\n}))\n\nconst DrawerCustom = (props) => {\n    const classes = styles()\n    return (\n        <Fragment>\n            <Drawer\n                className={classes.drawer}\n                classes={{\n                    paper: classes.drawerPaper\n                }}\n                anchor='left'\n                variant={props.variant}\n                open={props.open}\n                onClose={props.onClose ? props.onClose : null}\n            >\n                <div className={classes.toolbar}></div>\n                <Divider />\n                <ListIcons />\n            </Drawer>\n        </Fragment >\n    )\n}\n\nexport default DrawerCustom\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\n\nconst initialState = {\n    mouseX: null,\n    mouseY: null,\n};\n\nexport default function ContextMenu() {\n    const [state, setState] = React.useState(initialState);\n\n    const handleClick = (event) => {\n        event.preventDefault();\n        setState({\n            mouseX: event.clientX - 2,\n            mouseY: event.clientY - 4,\n        });\n    };\n\n    const handleClose = () => {\n        setState(initialState);\n    };\n\n    return (\n        <div onContextMenu={handleClick} style={{ cursor: 'context-menu' }}>\n            <Typography>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam ipsum purus, bibendum sit\n                amet vulputate eget, porta semper ligula. Donec bibendum vulputate erat, ac fringilla mi\n                finibus nec. Donec ac dolor sed dolor porttitor blandit vel vel purus. Fusce vel malesuada\n                ligula. Nam quis vehicula ante, eu finibus est. Proin ullamcorper fermentum orci, quis\n                finibus massa. Nunc lobortis, massa ut rutrum ultrices, metus metus finibus ex, sit amet\n                facilisis neque enim sed neque. Quisque accumsan metus vel maximus consequat. Suspendisse\n                lacinia tellus a libero volutpat maximus.\n      </Typography>\n            <Menu\n                keepMounted\n                open={state.mouseY !== null}\n                onClose={handleClose}\n                anchorReference=\"anchorPosition\"\n                anchorPosition={\n                    state.mouseY !== null && state.mouseX !== null\n                        ? { top: state.mouseY, left: state.mouseX }\n                        : undefined\n                }\n            >\n                <MenuItem onClick={handleClose}>Copy</MenuItem>\n                <MenuItem onClick={handleClose}>Print</MenuItem>\n                <MenuItem onClick={handleClose}>Highlight</MenuItem>\n                <MenuItem onClick={handleClose}>Email</MenuItem>\n            </Menu>\n        </div>\n    );\n}\n","import React from 'react'\nimport ContextMenu from '../utils/ContextMenuCpt';\n\nconst Home = () => {\n    return (\n        <div>\n            <h3>home</h3>\n            <ContextMenu />\n        </div>\n    )\n}\n\nexport default Home\n","import React, { Fragment } from 'react'\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst DataGridCpt = (props) => {\n    return (\n        <Fragment>\n            <div style={{ height: 400, width: '100%' }}>\n                <DataGrid sortingOrder={['desc', 'asc']}\n                    showToolbar\n                    disableMultipleSelection={true}\n                    disableColumnMenu\n                    loading={props.reload}\n                    sortModel={[\n                        {\n                            field: 'id',\n                            sort: 'asc',\n                        },\n                    ]}\n                    rows={props.actArray}\n                    columns={props.columns.map((column) => ({\n                        ...column,\n                        disableClickEventBubbling: true,\n                    }))}\n                    pageSize={5}\n                    checkboxSelection={false}\n                />\n            </div>\n        </Fragment>\n    )\n}\n\nexport default DataGridCpt\n","import React, { useEffect, useState } from \"react\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, IconButton } from '@material-ui/core'\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { obtenerPersonaActivistaAccion, actualizarPersonaActivistaVotadaAccion } from \"../../redux/PersonaActivistaDucks\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport { Input } from '@material-ui/icons/'\n\nconst Promovidos = () => {\n\tconst dispatch = useDispatch();\n\tconst activistas = useSelector((store) => store.personasActivistas.array);\n\tconst reload = useSelector((store) => store.personasActivistas.reload);\n\tconst history = useHistory();\n\n\t//States\n\tconst [anchorEl, setAnchorEl] = useState(null);\n\n\tconst handleClick = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\t//Persona\n\tconst persona = {\n\t\tid: \"\",\n\t\tvotado: 0,\n\t};\n\n\t//Hacemos carga inicial\n\tuseEffect(() => {\n\t\tdispatch(obtenerPersonaActivistaAccion(persona));\n\t}, []);\n\n\t//Verificamos si hubo cambios\n\tif (reload) {\n\t\tpersona.id = \"\";\n\t\tdispatch(obtenerPersonaActivistaAccion(persona));\n\t}\n\n\t//Realizamos\n\tconst performAction = (id) => {\n\t\tconsole.log(\"vota\");\n\t\thandleVotado(id);\n\t};\n\n\t//Handle votado\n\tconst handleVotado = (id) => {\n\t\tpersona.id = id;\n\t\tpersona.votado = 1;\n\t\tdispatch(actualizarPersonaActivistaVotadaAccion(persona));\n\t};\n\n\n\n\t// Columnas\n\tconst columns = [\n\t\t{\n\t\t\tfield: \"id\",\n\t\t\theaderName: \"ID\",\n\t\t\twidth: 180,\n\t\t\thide: true,\n\t\t},\t\t\n\t\t{\n\t\t\tfield: \"acciones\",\n\t\t\theaderName: \"Ir\",\n\t\t\twidth: 120,\n\t\t\tdisableClickEventBubbling: true,\n\t\t\trenderCell: (params: CellParams) => {\n\t\t\t\tconst routeChange = (id) =>{ \n\t\t\t\t\tlet path = `/promovidos/promovidodetalle/${id}`; \n\t\t\t\t\thistory.push(path);\n\t\t\t\t  }\n\t\t\t\t  \n\t\t\t\tconst onClick = () => {\n\t\t\t\t\tconst api: GridApi = params.api;\n\t\t\t\t\tconst fields = api\n\t\t\t\t\t\t.getAllColumns()\n\t\t\t\t\t\t.map((c) => c.field)\n\t\t\t\t\t\t.filter((c) => c !== \"__check__\" && !!c);\n\t\t\t\t\tconst thisRow = {};\n\n\t\t\t\t\tfields.forEach((f) => {\n\t\t\t\t\t\tthisRow[f] = params.getValue(f);\n\t\t\t\t\t});\n\n\t\t\t\t\trouteChange(thisRow.id);\n\t\t\t\t};\t\t\t\t\n\t\t\t\t\treturn <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={onClick}>\n\t\t\t\t\t<Input />\n\t\t\t\t  </IconButton>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tfield: \"idcasilla\",\n\t\t\theaderName: \"IDCASILLA\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"votado\",\n\t\t\theaderName: \"VOTADO\",\n\t\t\twidth: 120,\n\t\t\trenderCell: (params: CellParams) => {\n\t\t\t\tif (params.value == 1) {\n\t\t\t\t\treturn <DoneAllIcon\n\t\t\t\t\t\tstyle={{ color: '#03a9f4' }}\n\t\t\t\t\t/>;\n\t\t\t\t} else {\n\t\t\t\t\tconst onClick = () => {\n\t\t\t\t\t\tconst api: GridApi = params.api;\n\t\t\t\t\t\tconst fields = api\n\t\t\t\t\t\t\t.getAllColumns()\n\t\t\t\t\t\t\t.map((c) => c.field)\n\t\t\t\t\t\t\t.filter((c) => c !== \"__check__\" && !!c);\n\t\t\t\t\t\tconst thisRow = {};\n\n\t\t\t\t\t\tfields.forEach((f) => {\n\t\t\t\t\t\t\tthisRow[f] = params.getValue(f);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tperformAction(thisRow.id);\n\t\t\t\t\t};\n\t\t\t\t\treturn <RadioButtonUncheckedIcon\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t/>;\n\t\t\t\t}\n\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tfield: \"seccion\",\n\t\t\theaderName: \"SECCION\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"idlistanom\",\n\t\t\theaderName: \"IDLISTANOM\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"puesto\",\n\t\t\theaderName: \"PUESTO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"nombre\",\n\t\t\theaderName: \"NOMBRE\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"claveelector\",\n\t\t\theaderName: \"CLAVEELECTOR\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"idjefe\",\n\t\t\theaderName: \"IDJEFE\",\n\t\t\twidth: 180,\n\t\t},\n\n\t];\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>Lista</h3>\n\t\t\t<DataGridCpt columns={columns} actArray={activistas} reload={reload} />\n\t\t</div>\n\t);\n};\n\nexport default Promovidos;\n","import React, { useEffect, useState } from \"react\";\nimport { obtenerCasillaAccion } from \"../../redux/CasillasDucks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\n\nconst Casillas = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n    const casillas = useSelector((store) => store.casillas.array);\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerCasillaAccion());\n    }, []);\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccionasignada\",\n            headerName: \"SECCIONASIGNADA\",\n            width: 180,\n        },\n        {\n            field: \"padronelectoral\",\n            headerName: \"PADRONELECTORAL\",\n            width: 180,\n        },\n        {\n            field: \"listanominal\",\n            headerName: \"LISTANOMINAL\",\n            width: 180,\n        },\n        {\n            field: \"cargo\",\n            headerName: \"CARGO\",\n            width: 180,\n        },\n        {\n            field: \"flujo10am\",\n            headerName: \"FLUJO10AM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos10am\",\n            headerName: \"PROMOVIDOS10AM\",\n            width: 180,\n        },\n        {\n            field: \"flujo12pm\",\n            headerName: \"FLUJO12PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos12pm\",\n            headerName: \"PROMOVIDOS12PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo2pm\",\n            headerName: \"FLUJO2PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos2pm\",\n            headerName: \"PROMOVIDOS2PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo4pm\",\n            headerName: \"FLUJO4PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos4pm\",\n            headerName: \"PROMOVIDOS4PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo6pm\",\n            headerName: \"FLUJO6PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos6pm\",\n            headerName: \"PROMOVIDOS6PM\",\n            width: 180,\n        },\n        {\n            field: \"nombreinformatico\",\n            headerName: \"NOMBREINFORMATICO\",\n            width: 180,\n        },\n        {\n            field: \"telefono\",\n            headerName: \"TELEFONO\",\n            width: 180,\n        },\n    ];\n\n    return (\n        <div>\n            <h3>Casillas</h3>\n            <DataGridCpt columns={columns} actArray={casillas} />\n        </div>\n    )\n}\n\nexport default Casillas\n","import React from 'react'\nimport { Chart } from \"react-google-charts\";\nimport { Divider } from '@material-ui/core'\nconst Graficas = () => {\n    return (\n        <div >\n            <div xs={12} >\n\n                <Chart\n                    width={800}\n                    height={600}\n                    chartType=\"ColumnChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                        ['City', '2010 Population', '2000 Population'],\n                        ['New York City, NY', 8175000, 8008000],\n                        ['Los Angeles, CA', 3792000, 3694000],\n                        ['Chicago, IL', 2695000, 2896000],\n                        ['Houston, TX', 2099000, 1953000],\n                        ['Philadelphia, PA', 1526000, 1517000],\n                    ]}\n                    options={{\n                        title: 'Population of Largest U.S. Cities',\n                        chartArea: { width: '30%' },\n                        hAxis: {\n                            title: 'Total Population',\n                            minValue: 0,\n                        },\n                        vAxis: {\n                            title: 'City',\n                        },\n                    }}\n                    legendToggle\n                />\n                <Divider />\n                <Chart\n                    width={800}\n                    height={'600px'}\n                    chartType=\"AreaChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                        ['Year', 'Sales', 'Expenses'],\n                        ['2013', 1000, 400],\n                        ['2014', 1170, 460],\n                        ['2015', 660, 1120],\n                        ['2016', 1030, 540],\n                    ]}\n                    options={{\n                        title: 'Company Performance',\n                        hAxis: { title: 'Year', titleTextStyle: { color: '#333' } },\n                        vAxis: { minValue: 0 },\n                        // For the legend to fit, we make the chart area smaller\n                        chartArea: { width: '50%', height: '70%' },\n                        // lineWidth: 25\n                    }}\n                />\n                <Divider />\n            </div>\n            <div xs={12} >\n                <Chart\n                    width={800}\n                    height={'600px'}\n                    chartType=\"BubbleChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                        ['ID', 'Life Expectancy', 'Fertility Rate', 'Region', 'Population'],\n                        ['CAN', 80.66, 1.67, 'North America', 33739900],\n                        ['DEU', 79.84, 1.36, 'Europe', 81902307],\n                        ['DNK', 78.6, 1.84, 'Europe', 5523095],\n                        ['EGY', 72.73, 2.78, 'Middle East', 79716203],\n                        ['GBR', 80.05, 2, 'Europe', 61801570],\n                        ['IRN', 72.49, 1.7, 'Middle East', 73137148],\n                        ['IRQ', 68.09, 4.77, 'Middle East', 31090763],\n                        ['ISR', 81.55, 2.96, 'Middle East', 7485600],\n                        ['RUS', 68.6, 1.54, 'Europe', 141850000],\n                        ['USA', 78.09, 2.05, 'North America', 307007000],\n                    ]}\n                    options={{\n                        title:\n                            'Correlation between life expectancy, fertility rate ' +\n                            'and population of some world countries (2010)',\n                        hAxis: { title: 'Life Expectancy' },\n                        vAxis: { title: 'Fertility Rate' },\n                        bubble: { textStyle: { fontSize: 11 } },\n                    }}\n                />\n                <Divider />\n                <Chart\n\n                    width={800}\n                    height={600}\n                    chartType=\"LineChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                        [\n                            { type: 'number', label: 'x' },\n                            { type: 'number', label: 'values' },\n                            { id: 'i0', type: 'number', role: 'interval' },\n                            { id: 'i1', type: 'number', role: 'interval' },\n                            { id: 'i2', type: 'number', role: 'interval' },\n                            { id: 'i2', type: 'number', role: 'interval' },\n                            { id: 'i2', type: 'number', role: 'interval' },\n                            { id: 'i2', type: 'number', role: 'interval' },\n                        ],\n                        [1, 100, 90, 110, 85, 96, 104, 120],\n                        [2, 120, 95, 130, 90, 113, 124, 140],\n                        [3, 130, 105, 140, 100, 117, 133, 139],\n                        [4, 90, 85, 95, 85, 88, 92, 95],\n                        [5, 70, 74, 63, 67, 69, 70, 72],\n                        [6, 30, 39, 22, 21, 28, 34, 40],\n                        [7, 80, 77, 83, 70, 77, 85, 90],\n                        [8, 100, 90, 110, 85, 95, 102, 110],\n                    ]}\n                    options={{\n                        intervals: { style: 'sticks' },\n                        legend: 'none',\n                    }}\n                />\n                <Divider />\n            </div>\n        </div>\n    )\n}\n\nexport default Graficas\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerinfoAdicionalCasillaAccion } from \"../../redux/InfoAdicionalCasillasDucks\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\n\nconst IncidentesCasillas = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n    const infoAdicionalCasillas = useSelector((store) => store.infoAdicionalCasillas.array);\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDINFOADICIONALCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"idcasilla\",\n            headerName: \"IDCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccionasignada\",\n            headerName: \"SECCIONASIGNADA\",\n            width: 180,\n        },\n        {\n            field: \"horaapertura\",\n            headerName: \"HORAAPERTURA\",\n            width: 180,\n        },\n        {\n            field: \"horacierre\",\n            headerName: \"HORACIERRE\",\n            width: 180,\n        },\n        {\n            field: \"incidenteuno\",\n            headerName: \"INCIDENTEUNO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidenteuno\",\n            headerName: \"HORAINCIDENTEUNO\",\n            width: 180,\n        },\n        {\n            field: \"incidentedos\",\n            headerName: \"INCIDENTEDOS\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentedos\",\n            headerName: \"HORAINCIDENTEDOS\",\n            width: 180,\n        },\n        {\n            field: \"incidentetres\",\n            headerName: \"INCIDENTETRES\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentetres\",\n            headerName: \"HORAINCIDENTETRES\",\n            width: 180,\n        },\n        {\n            field: \"incidentecuatro\",\n            headerName: \"INCIDENTECUATRO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentecuatro\",\n            headerName: \"HORAINCIDENTECUATRO\",\n            width: 180,\n        },\n        {\n            field: \"incidentecinco\",\n            headerName: \"INCIDENTECINCO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentecinco\",\n            headerName: \"HORAINCIDENTECINCO\",\n            width: 180,\n        },\n        {\n            field: \"prip1\",\n            headerName: \"PRIP1\",\n            width: 180,\n        },\n        {\n            field: \"prip2\",\n            headerName: \"PRIP2\",\n            width: 180,\n        },\n        {\n            field: \"pris1\",\n            headerName: \"PRIS1\",\n            width: 180,\n        },\n        {\n            field: \"pris2\",\n            headerName: \"PRIS2\",\n            width: 180,\n        },\n        {\n            field: \"presidente\",\n            headerName: \"PRESIDENTE\",\n            width: 180,\n        },\n        {\n            field: \"sec1\",\n            headerName: \"SEC1\",\n            width: 180,\n        },\n        {\n            field: \"sec2\",\n            headerName: \"SEC2\",\n            width: 180,\n        },\n        {\n            field: \"esc1\",\n            headerName: \"ESC1\",\n            width: 180,\n        },\n        {\n            field: \"esc2\",\n            headerName: \"ESC2\",\n            width: 180,\n        },\n        {\n            field: \"esc3\",\n            headerName: \"ESC3\",\n            width: 180,\n        },\n        {\n            field: \"sup1\",\n            headerName: \"SUP1\",\n            width: 180,\n        },\n        {\n            field: \"sup2\",\n            headerName: \"SUP2\",\n            width: 180,\n        },\n        {\n            field: \"sup3\",\n            headerName: \"SUP3\",\n            width: 180,\n        },\n    ];\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerinfoAdicionalCasillaAccion());\n    }, []);\n\n    return (\n        <div>\n            <h3>Incidentes Casillas</h3>\n            <DataGridCpt columns={columns} actArray={infoAdicionalCasillas} />\n        </div>\n    )\n}\n\nexport default IncidentesCasillas\n","import React, { useEffect, useState } from \"react\";\nimport { obtenerReportesRgsAccion, actualizarReportesRgsVotadaAccion } from \"../../redux/ReportesRgsDucks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\n\nconst ReportesRgs = () => {\n    //Configuraciones iniciales\n    const dispatch = useDispatch();\n    const reportesRgs = useSelector((store) => store.reportesRgs.array);\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerReportesRgsAccion());\n    }, []);\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDREPORTESRGS\",\n            width: 180,\n        },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 180,\n        },\n        {\n            field: \"idlistanom\",\n            headerName: \"IDLISTANOM\",\n            width: 180,\n        },\n        {\n            field: \"puesto\",\n            headerName: \"PUESTO\",\n            width: 180,\n        },\n        {\n            field: \"nombre\",\n            headerName: \"NOMBRE\",\n            width: 180,\n        },\n        {\n            field: \"telefono\",\n            headerName: \"TELEFONO\",\n            width: 180,\n        },\n        {\n            field: \"claveelector\",\n            headerName: \"CLAVEELECTOR\",\n            width: 180,\n        },\n        {\n            field: \"observaciones\",\n            headerName: \"OBSERVACIONES\",\n            width: 180,\n        }\n    ];\n\n    return (\n        <div>\n            <h1>ReportesRgs</h1>\n            <DataGridCpt columns={columns} actArray={reportesRgs} />\n        </div>\n    )\n}\n\nexport default ReportesRgs","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerEleccionesAccion } from \"../../redux/EleccionesDucks\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\n\nconst Elecciones = () => {\n    //Datos iniciales\n    const dispatch = useDispatch();\n    const elecciones = useSelector((store) => store.elecciones.array);\n\n    //Carga iniciales\n    useEffect(() => {\n        dispatch(obtenerEleccionesAccion());\n    }, []);\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDTABLAELECCIONES\",\n            width: 180,\n        },\n        {\n            field: \"idcasilla\",\n            headerName: \"IDCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"idrepcasilla\",\n            headerName: \"IDREPCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 180,\n        },\n        {\n            field: \"tipocasilla\",\n            headerName: \"TIPOCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"pan\",\n            headerName: \"PAN\",\n            width: 180,\n        },\n        {\n            field: \"pri\",\n            headerName: \"PRI\",\n            width: 180,\n        },\n        {\n            field: \"prd\",\n            headerName: \"PRD\",\n            width: 180,\n        },\n        {\n            field: \"pvem\",\n            headerName: \"PVEM\",\n            width: 180,\n        },\n        {\n            field: \"pt\",\n            headerName: \"PT\",\n            width: 180,\n        },\n        {\n            field: \"movciudadano\",\n            headerName: \"MOVCIUDADANO\",\n            width: 180,\n        },\n        {\n            field: \"nuevaalianza\",\n            headerName: \"NUEVAALIANZA\",\n            width: 180,\n        },\n        {\n            field: \"morena\",\n            headerName: \"MORENA\",\n            width: 180,\n        },\n        {\n            field: \"encuentrosocial\",\n            headerName: \"ENCUENTROSOCIAL\",\n            width: 180,\n        },\n        {\n            field: \"panprdmovciudadano\",\n            headerName: \"PANPRDMOVCIUDADANO\",\n            width: 180,\n        },\n        {\n            field: \"panprd\",\n            headerName: \"PANPRD\",\n            width: 180,\n        },\n        {\n            field: \"panmovciudadano\",\n            headerName: \"PANMOVCIUDADANO\",\n            width: 180,\n        },\n        {\n            field: \"prdmovciudadano\",\n            headerName: \"PRDMOVCIUDADANO\",\n            width: 180,\n        },\n        {\n            field: \"pripvemnuevaalianza\",\n            headerName: \"PRIPVEMNUEVAALIANZA\",\n            width: 180,\n        },\n        {\n            field: \"pripvem\",\n            headerName: \"PRIPVEM\",\n            width: 180,\n        },\n        {\n            field: \"prinuevaalianza\",\n            headerName: \"PRINUEVAALIANZA\",\n            width: 180,\n        },\n        {\n            field: \"pvemnuevaalianza\",\n            headerName: \"PVEMNUEVAALIANZA\",\n            width: 180,\n        },\n        {\n            field: \"ptmorenaencuentrosocial\",\n            headerName: \"PTMORENAENCUENTROSOCIAL\",\n            width: 180,\n        },\n        {\n            field: \"ptmorena\",\n            headerName: \"PTMORENA\",\n            width: 180,\n        },\n        {\n            field: \"ptencuentrosocial\",\n            headerName: \"PTENCUENTROSOCIAL\",\n            width: 180,\n        },\n        {\n            field: \"morenaencuentrosocial\",\n            headerName: \"MORENAENCUENTROSOCIAL\",\n            width: 180,\n        },\n        {\n            field: \"candidatoindependiente\",\n            headerName: \"CANDIDATOINDEPENDIENTE\",\n            width: 180,\n        },\n        {\n            field: \"noregistrados\",\n            headerName: \"NOREGISTRADOS\",\n            width: 180,\n        },\n        {\n            field: \"candidatosnoregistrados\",\n            headerName: \"CANDIDATOSNOREGISTRADOS\",\n            width: 180,\n        },\n        {\n            field: \"nulos\",\n            headerName: \"NULOS\",\n            width: 180,\n        },\n        {\n            field: \"total\",\n            headerName: \"TOTAL\",\n            width: 180,\n        },\n        {\n            field: \"listanominal\",\n            headerName: \"LISTANOMINAL\",\n            width: 180,\n        },\n    ];\n\n\n    return (\n        <div>\n            <h1>Elecciones</h1>\n            <DataGridCpt columns={columns} actArray={elecciones} />\n        </div>\n    )\n}\n\nexport default Elecciones    ","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nexport default function AccordionCpt() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Accordion 1</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n            sit amet blandit leo lobortis eget.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography className={classes.heading}>Accordion 2</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n            sit amet blandit leo lobortis eget.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion disabled>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3a-content\"\n          id=\"panel3a-header\"\n        >\n          <Typography className={classes.heading}>Disabled Accordion</Typography>\n        </AccordionSummary>\n      </Accordion>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerPersonaActivistaAccion, actualizarPersonaActivistaVotadaAccion } from \"../../../redux/PersonaActivistaDucks\";\nimport AccordionCpt from \"../../utils/AccordionCpt\"\n\nconst PromovidoDetalle = () => {\n    //Store y configuracion REDUX\n    const dispatch = useDispatch();\n    const activistas = useSelector((store) => store.personasActivistas.array);\n    const activista = activistas[0];\n\n    //Recibimos parametros\n    const { id } = useParams()\n\n    //Persona\n    const persona = {\n        id: id,\n        votado: 0,\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        persona.id = id;\n        dispatch(obtenerPersonaActivistaAccion(persona));\n    }, []);\n\n    //Verificamos si hay elementos en el array\n    const renderSubActivistas = (verify) => {\n        \n        if(!verify ) {\n          return <div>No hay elementos</div>;\n        } else {\n          return (\n              <p>\n                Si hay elementos en el arreglo\n              </p>\n          );\n        }\n      }\n\n    return (\n        <div>\n            <h1>Promovido detalle:  </h1>\n            <h4>IDPERSONAACTIVISTA: {id}</h4>\n            <h4>IDCASILLA: {activista.idcasilla}</h4>\n            <h4>SECCION: {activista.seccion}</h4>\n            <h4>IDLISTANOM: {activista.idlistanom}</h4>\n            <h4>PUESTO: {activista.puesto}</h4>\n            <h4>NOMBRE: {activista.nombre}</h4>\n            <h4>CLAVEELECTOR: {activista.claveelector}</h4>\n            <h4>IDJEFE: {activista.idjefe}</h4>\n            <h4>VOTADO: {activista.votado}</h4>\n           \n            {renderSubActivistas(activista.subactivistas === null)}\n\n        </div>\n    )\n}\n\nexport default PromovidoDetalle\n\n","import React, { useState } from 'react'\nimport { makeStyles, Hidden } from '@material-ui/core'\nimport Navbar from './Navbar';\nimport DrawerCustom from './DrawerCustom';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from './pages/Home';\nimport Promovidos from './pages/Promovidos';\nimport Casillas from './pages/Casillas';\nimport Graficas from './pages/Graficas';\nimport IncidentesCasillas from './pages/IncidentesCasillas';\nimport ReportesRgs from './pages/ReportesRgs';\nimport Elecciones from './pages/Elecciones';\nimport PromovidoDetalle from './pages/Promovidos/PromovidoDetalle';\n\nconst styles = makeStyles(theme => ({\n    root: {\n        display: 'flex'\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing(3)\n    }\n\n}))\n\nconst Container = () => {\n    const classes = styles()\n    //open y cerrar menu\n    const [open, setOpen] = useState(false)\n    const openAction = () => {\n        setOpen(!open)\n    }\n\n    return (\n        <div className={classes.root}>\n            <Router>\n                <Navbar openAction={openAction} />\n                <Hidden xsDown>\n                    <DrawerCustom variant='permanent' open={true} />\n                </Hidden>\n                <Hidden smUp>\n                    <DrawerCustom variant='temporary'\n                        open={open}\n                        onClose={openAction}\n                    />\n                </Hidden>\n                <div className={classes.content}>\n                    <div className={classes.toolbar}>\n                    </div>\n                    <Switch>\n                        <Route path=\"/reportesrgs\" >\n                            <ReportesRgs />\n                        </Route>\n                        <Route path=\"/elecciones\" >\n                            <Elecciones />\n                        </Route>\n                        <Route path=\"/graficas\" >\n                            <Graficas />\n                        </Route>\n                        <Route path=\"/incidentes\" >\n                            <IncidentesCasillas />\n                        </Route>\n                        <Route path=\"/casillas\" >\n                            <Casillas />\n                        </Route>\n                        <Route exact path=\"/promovidos\">\n                            <Promovidos />\n                        </Route>\n                        <Route path=\"/promovidos/promovidodetalle/:id\">\n                            <PromovidoDetalle />\n                        </Route>\n                        <Route exact path=\"/home\">\n                            <HomePage />\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n\n        </div>\n    )\n}\n\nexport default Container\n","import { createMuiTheme } from '@material-ui/core/styles'\nimport { lime, purple } from '@material-ui/core/colors'\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: purple[800]\n\n        },\n        secondary: {\n            main: lime[500]\n        },\n\n    }\n})\nexport default theme","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport generateStore from './redux/store';\nimport Container from './components/Container';\nimport theme from './themeConfig'\n\nfunction App() {\n  const store = generateStore()\n  return (\n    <h1>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Container />\n        </Provider>\n      </ThemeProvider>\n    </h1>\n  );\n}\n\nexport default App;\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Fragment>\n    <App />\n  </Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}