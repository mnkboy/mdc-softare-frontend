[{"/home/node/aplicacion/mdc-softare-frontend/src/index.js":"1","/home/node/aplicacion/mdc-softare-frontend/src/App.jsx":"2","/home/node/aplicacion/mdc-softare-frontend/src/themeConfig.js":"3","/home/node/aplicacion/mdc-softare-frontend/src/redux/store.js":"4","/home/node/aplicacion/mdc-softare-frontend/src/components/Container.jsx":"5","/home/node/aplicacion/mdc-softare-frontend/src/redux/CasillasDucks.js":"6","/home/node/aplicacion/mdc-softare-frontend/src/redux/PersonaActivistaDucks.js":"7","/home/node/aplicacion/mdc-softare-frontend/src/redux/InfoAdicionalCasillasDucks.js":"8","/home/node/aplicacion/mdc-softare-frontend/src/redux/ReportesRgsDucks.js":"9","/home/node/aplicacion/mdc-softare-frontend/src/redux/EleccionesDucks.js":"10","/home/node/aplicacion/mdc-softare-frontend/src/components/DrawerCustom.jsx":"11","/home/node/aplicacion/mdc-softare-frontend/src/components/Navbar.jsx":"12","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Home.jsx":"13","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas.jsx":"14","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ReportesRgs.jsx":"15","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Graficas.jsx":"16","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/IncidentesCasillas.jsx":"17","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones.jsx":"18","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos.jsx":"19","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos/PromovidoDetalle.jsx":"20","/home/node/aplicacion/mdc-softare-frontend/src/components/ListIcons.jsx":"21","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/DataGridCpt.jsx":"22","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/ContextMenuCpt.jsx":"23","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/AccordionCpt.jsx":"24","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCpt.jsx":"25","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/PieChart.jsx":"26","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MenuButtonListCpt.jsx":"27","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCrudCpt.jsx":"28","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/CreateCasilla.jsx":"29","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/UpdateCasilla.jsx":"30"},{"size":217,"mtime":1611516282426,"results":"31","hashOfConfig":"32"},{"size":492,"mtime":1613872164623,"results":"33","hashOfConfig":"32"},{"size":311,"mtime":1611550280894,"results":"34","hashOfConfig":"32"},{"size":872,"mtime":1612133864541,"results":"35","hashOfConfig":"32"},{"size":3297,"mtime":1614153409786,"results":"36","hashOfConfig":"32"},{"size":5626,"mtime":1614152149310,"results":"37","hashOfConfig":"32"},{"size":3407,"mtime":1613416634952,"results":"38","hashOfConfig":"32"},{"size":3450,"mtime":1612025334489,"results":"39","hashOfConfig":"32"},{"size":2034,"mtime":1612133676311,"results":"40","hashOfConfig":"32"},{"size":2286,"mtime":1614098171031,"results":"41","hashOfConfig":"32"},{"size":997,"mtime":1612148591425,"results":"42","hashOfConfig":"32"},{"size":1369,"mtime":1612927824435,"results":"43","hashOfConfig":"32"},{"size":783,"mtime":1614014471415,"results":"44","hashOfConfig":"32"},{"size":6731,"mtime":1614152300288,"results":"45","hashOfConfig":"32"},{"size":2266,"mtime":1614014471415,"results":"46","hashOfConfig":"32"},{"size":6085,"mtime":1614014471415,"results":"47","hashOfConfig":"32"},{"size":4658,"mtime":1614014471415,"results":"48","hashOfConfig":"32"},{"size":5164,"mtime":1614098758497,"results":"49","hashOfConfig":"32"},{"size":4327,"mtime":1614149714191,"results":"50","hashOfConfig":"32"},{"size":3629,"mtime":1614147149382,"results":"51","hashOfConfig":"32"},{"size":4659,"mtime":1614047562437,"results":"52","hashOfConfig":"32"},{"size":985,"mtime":1614014471415,"results":"53","hashOfConfig":"32"},{"size":2145,"mtime":1612148775691,"results":"54","hashOfConfig":"32"},{"size":3836,"mtime":1613891645340,"results":"55","hashOfConfig":"32"},{"size":683,"mtime":1614146911871,"results":"56","hashOfConfig":"32"},{"size":930,"mtime":1614014471415,"results":"57","hashOfConfig":"32"},{"size":1603,"mtime":1614152238571,"results":"58","hashOfConfig":"32"},{"size":1894,"mtime":1614146930379,"results":"59","hashOfConfig":"32"},{"size":6385,"mtime":1614162390772,"results":"60","hashOfConfig":"32"},{"size":6385,"mtime":1614162510526,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1wh7eu1",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/node/aplicacion/mdc-softare-frontend/src/index.js",[],["132","133"],"/home/node/aplicacion/mdc-softare-frontend/src/App.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/themeConfig.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/store.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/Container.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/CasillasDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/PersonaActivistaDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/InfoAdicionalCasillasDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/ReportesRgsDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/EleccionesDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/DrawerCustom.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/Navbar.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Home.jsx",["134"],"import React from 'react'\nimport ContextMenu from '../utils/ContextMenuCpt';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { Divider } from '@material-ui/core';\n//BreadCums\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\nconst Home = () => {\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/home\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Home\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <ContextMenu />\n        </div>\n    )\n}\n\nexport default Home\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas.jsx",["135"],"import React, { useEffect } from \"react\";\nimport {\n    getCasillaAccion, createCasillaAccion,\n    updateCasillaAccion, deleteCasillaAccion\n} from \"../../redux/CasillasDucks\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MenuButtonListCpt from '../utils/MenuButtonListCpt';\n\nconst Casillas = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n    const casillas = useSelector((store) => store.casillas.array);\n    const reload = useSelector((store) => store.casillas.reload);\n\n    //Nombre modelo\n    const modelo = \"casillas\";\n\n    //Acciones repository    \n    const handleCreate = (casilla) => {\n        dispatch(createCasillaAccion(casilla));\n    };\n\n    const handleUpdate = (casilla) => {\n        dispatch(updateCasillaAccion(casilla));\n    };\n\n    const handleDelete = (casilla) => {\n        console.log(\"handleDelete:\" + casilla.id)\n        dispatch(deleteCasillaAccion(casilla));\n    };\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(getCasillaAccion());\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        console.log(\"Se puede recargar casillas\")\n        dispatch(getCasillaAccion());\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"ID\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"actions\",\n            headerName: \"ACCIONES\",\n            width: 140,\n            disableClickEventBubbling: true,\n            renderCell: (params: CellParams) => {\n                const api: GridApi = params.api;\n                const fields = api\n                    .getAllColumns()\n                    .map((c) => c.field)\n                    .filter((c) => c !== \"__check__\" && !!c);\n                const thisRow = {};\n\n                fields.forEach((f) => {\n                    thisRow[f] = params.getValue(f);\n                });\n\n                const acciones = [\n                    {\n                        id: thisRow.id,\n                        action: \"get\",\n                        title: \"ver\",\n                        handle: null,\n                        rowdata: thisRow,\n                        path: `/${modelo}/get/${thisRow.id}`,\n                    },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"create\",\n                        title: \"crear\",\n                        handle: handleCreate,\n                        rowdata: thisRow,\n                        path: `${modelo}/create`\n                    },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"update\",\n                        title: \"actualizar\",\n                        handle: handleUpdate,\n                        rowdata: thisRow,\n                        path: `${modelo}/update`\n                    },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"delete\",\n                        title: \"eliminar\",\n                        handle: handleDelete,\n                        rowdata: thisRow,\n                        path: `${modelo}`\n                    },\n\n                ]\n                return <MenuButtonListCpt acciones={acciones} create={handleCreate} actualizar={handleUpdate} delete={handleDelete} />\n            },\n        },\n        {\n            field: \"idrepresentantecasilla\",\n            headerName: \"IDREPRESENTANTECASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccionasignada\",\n            headerName: \"SECCIONASIGNADA\",\n            width: 180,\n        },\n        {\n            field: \"cargo\",\n            headerName: \"CARGO\",\n            width: 180,\n        },\n        {\n            field: \"apertura\",\n            headerName: \"APERTURA\",\n            width: 180,\n        },\n        {\n            field: \"horaapertura\",\n            headerName: \"HORAAPERTURA\",\n            width: 180,\n        },\n        {\n            field: \"flujo1230pm\",\n            headerName: \"FLUJO1230PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos1230pm\",\n            headerName: \"PROMOVIDOS1230PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo430pm\",\n            headerName: \"FLUJO430PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos430pm\",\n            headerName: \"PROMOVIDOS430PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo6pm\",\n            headerName: \"FLUJO6PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos6pm\",\n            headerName: \"PROMOVIDOS6PM\",\n            width: 180,\n        },\n        {\n            field: \"cierre6pm\",\n            headerName: \"CIERRE6PM\",\n            width: 180,\n        },\n        {\n            field: \"horacierre\",\n            headerName: \"HORACIERRE\",\n            width: 180,\n        },\n        {\n            field: \"rpp1\",\n            headerName: \"RPP1\",\n            width: 180,\n        },\n        {\n            field: \"rpp2\",\n            headerName: \"RPP2\",\n            width: 180,\n        },\n        {\n            field: \"rps1\",\n            headerName: \"RPS1\",\n            width: 180,\n        },\n        {\n            field: \"incidente\",\n            headerName: \"INCIDENTE\",\n            width: 180,\n        },\n        {\n            field: \"nombre\",\n            headerName: \"NOMBRE\",\n            width: 180,\n        },\n        {\n            field: \"municipio\",\n            headerName: \"MUNICIPIO\",\n            width: 180,\n        },\n        {\n            field: \"localidad\",\n            headerName: \"LOCALIDAD\",\n            width: 180,\n        },\n        {\n            field: \"distrito \",\n            headerName: \"DISTRITO\",\n            width: 180,\n        },\n    ];\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Casillas\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={casillas} reload={reload} />\n        </div>\n    )\n}\n\nexport default Casillas\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ReportesRgs.jsx",["136"],"import React, { useEffect } from \"react\";\nimport { obtenerReportesRgsAccion } from \"../../redux/ReportesRgsDucks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nconst ReportesRgs = () => {\n    //Configuraciones iniciales\n    const dispatch = useDispatch();\n    const reportesRgs = useSelector((store) => store.reportesRgs.array);\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerReportesRgsAccion());\n    }, []);\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDREPORTESRGS\",\n            width: 180,\n        },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 180,\n        },\n        {\n            field: \"idlistanom\",\n            headerName: \"IDLISTANOM\",\n            width: 180,\n        },\n        {\n            field: \"puesto\",\n            headerName: \"PUESTO\",\n            width: 180,\n        },\n        {\n            field: \"nombre\",\n            headerName: \"NOMBRE\",\n            width: 180,\n        },\n        {\n            field: \"telefono\",\n            headerName: \"TELEFONO\",\n            width: 180,\n        },\n        {\n            field: \"claveelector\",\n            headerName: \"CLAVEELECTOR\",\n            width: 180,\n        },\n        {\n            field: \"observaciones\",\n            headerName: \"OBSERVACIONES\",\n            width: 180,\n        }\n    ];\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Reportes rgs\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <DataGridCpt columns={columns} actArray={reportesRgs} />\n        </div >\n    )\n}\n\nexport default ReportesRgs","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Graficas.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/IncidentesCasillas.jsx",["137"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerinfoAdicionalCasillaAccion } from \"../../redux/InfoAdicionalCasillasDucks\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nconst IncidentesCasillas = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n    const infoAdicionalCasillas = useSelector((store) => store.infoAdicionalCasillas.array);\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDINFOADICIONALCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"idcasilla\",\n            headerName: \"IDCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccionasignada\",\n            headerName: \"SECCIONASIGNADA\",\n            width: 180,\n        },\n        {\n            field: \"horaapertura\",\n            headerName: \"HORAAPERTURA\",\n            width: 180,\n        },\n        {\n            field: \"horacierre\",\n            headerName: \"HORACIERRE\",\n            width: 180,\n        },\n        {\n            field: \"incidenteuno\",\n            headerName: \"INCIDENTEUNO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidenteuno\",\n            headerName: \"HORAINCIDENTEUNO\",\n            width: 180,\n        },\n        {\n            field: \"incidentedos\",\n            headerName: \"INCIDENTEDOS\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentedos\",\n            headerName: \"HORAINCIDENTEDOS\",\n            width: 180,\n        },\n        {\n            field: \"incidentetres\",\n            headerName: \"INCIDENTETRES\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentetres\",\n            headerName: \"HORAINCIDENTETRES\",\n            width: 180,\n        },\n        {\n            field: \"incidentecuatro\",\n            headerName: \"INCIDENTECUATRO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentecuatro\",\n            headerName: \"HORAINCIDENTECUATRO\",\n            width: 180,\n        },\n        {\n            field: \"incidentecinco\",\n            headerName: \"INCIDENTECINCO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentecinco\",\n            headerName: \"HORAINCIDENTECINCO\",\n            width: 180,\n        },\n        {\n            field: \"prip1\",\n            headerName: \"PRIP1\",\n            width: 180,\n        },\n        {\n            field: \"prip2\",\n            headerName: \"PRIP2\",\n            width: 180,\n        },\n        {\n            field: \"pris1\",\n            headerName: \"PRIS1\",\n            width: 180,\n        },\n        {\n            field: \"pris2\",\n            headerName: \"PRIS2\",\n            width: 180,\n        },\n        {\n            field: \"presidente\",\n            headerName: \"PRESIDENTE\",\n            width: 180,\n        },\n        {\n            field: \"sec1\",\n            headerName: \"SEC1\",\n            width: 180,\n        },\n        {\n            field: \"sec2\",\n            headerName: \"SEC2\",\n            width: 180,\n        },\n        {\n            field: \"esc1\",\n            headerName: \"ESC1\",\n            width: 180,\n        },\n        {\n            field: \"esc2\",\n            headerName: \"ESC2\",\n            width: 180,\n        },\n        {\n            field: \"esc3\",\n            headerName: \"ESC3\",\n            width: 180,\n        },\n        {\n            field: \"sup1\",\n            headerName: \"SUP1\",\n            width: 180,\n        },\n        {\n            field: \"sup2\",\n            headerName: \"SUP2\",\n            width: 180,\n        },\n        {\n            field: \"sup3\",\n            headerName: \"SUP3\",\n            width: 180,\n        },\n    ];\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerinfoAdicionalCasillaAccion());\n    }, []);\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Incidentes Casillas\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={infoAdicionalCasillas} />\n        </div>\n    )\n}\n\nexport default IncidentesCasillas\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones.jsx",["138"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerEleccionesAccion } from \"../../redux/EleccionesDucks\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MenuButtonListCpt from '../utils/MenuButtonListCpt';\n\nconst Elecciones = () => {\n    //Datos iniciales\n    const dispatch = useDispatch();\n    const elecciones = useSelector((store) => store.elecciones.array);\n\n    //Nombre modelo\n    const modelo = \"elecciones\";\n\n    //Carga iniciales\n    useEffect(() => {\n        dispatch(obtenerEleccionesAccion());\n    }, []);\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"ID\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"actions\",\n            headerName: \"ACCION\",\n            width: 120,\n            disableClickEventBubbling: true,\n            renderCell: (params: CellParams) => {\n\n                const api: GridApi = params.api;\n                const fields = api\n                    .getAllColumns()\n                    .map((c) => c.field)\n                    .filter((c) => c !== \"__check__\" && !!c);\n                const thisRow = {};\n\n                fields.forEach((f) => {\n                    thisRow[f] = params.getValue(f);\n                });\n\n                const acciones = [\n                    {\n                        id: thisRow.id,\n                        action: \"ver\",\n                        path: `/${modelo}/ver/${thisRow.id}`,\n                    },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"crear\",\n                        path: `${modelo}/crear`\n                    },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"editar\",\n                        path: `${modelo}/editar`\n                    },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"eliminar\",\n                        path: `${modelo}/eliminar`\n                    },\n\n                ]\n                return <MenuButtonListCpt acciones={acciones} />\n            },\n        },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 180,\n\n        },\n        {\n            field: \"pan\",\n            headerName: \"PAN\",\n            width: 180,\n\n        },\n        {\n            field: \"pri\",\n            headerName: \"PRI\",\n            width: 180,\n\n        },\n        {\n            field: \"prd\",\n            headerName: \"PRD\",\n            width: 180,\n\n        },\n        {\n            field: \"pvem\",\n            headerName: \"PVEM\",\n            width: 180,\n\n        },\n        {\n            field: \"pt\",\n            headerName: \"PT\",\n            width: 180,\n\n        },\n        {\n            field: \"movciudadano\",\n            headerName: \"MOVCIUDADANO\",\n            width: 180,\n\n        },\n        {\n            field: \"nuevaalianza\",\n            headerName: \"NUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"morena\",\n            headerName: \"MORENA\",\n            width: 180,\n\n        },\n        {\n            field: \"encuentrosocial\",\n            headerName: \"ENCUENTROSOCIAL\",\n            width: 180,\n\n        },\n        {\n            field: \"panprd\",\n            headerName: \"PANPRD\",\n            width: 180,\n\n        },\n        {\n            field: \"pripvemnuevaalianza\",\n            headerName: \"PRIPVEMNUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"pripvem\",\n            headerName: \"PRIPVEM\",\n            width: 180,\n\n        },\n        {\n            field: \"prinuevaalianza\",\n            headerName: \"PRINUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"pvemnuevaalianza\",\n            headerName: \"PVEMNUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"candidatosnoregistrados\",\n            headerName: \"CANDIDATOSNOREGISTRADOS\",\n            width: 180,\n\n        },\n        {\n            field: \"nulos\",\n            headerName: \"NULOS\",\n            width: 180,\n\n        },\n        {\n            field: \"total\",\n            headerName: \"TOTAL\",\n            width: 180,\n\n        },\n    ];\n\n\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/promovidos\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Elecciones\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={elecciones} />\n        </div>\n    )\n}\n\nexport default Elecciones    ","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos.jsx",["139","140"],"import React, { useEffect } from \"react\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { obtenerPersonaActivistaAccion, actualizarPersonaActivistaVotadaAccion } from \"../../redux/PersonaActivistaDucks\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MenuButtonListCpt from '../utils/MenuButtonListCpt';\nimport MaterialTableCrudCpt from '../utils/MaterialTableCrudCpt';\n\nconst Promovidos = () => {\n\tconst dispatch = useDispatch();\n\tconst activistas = useSelector((store) => store.personasActivistas.array);\n\tconst reload = useSelector((store) => store.personasActivistas.reload);\n\n\n\t//Nombre modelo\n\tconst modelo = \"promovidos\";\n\n\t//BreadCums\n\tfunction handleClick(event) {\n\t\tevent.preventDefault();\n\t\tconsole.info('You clicked a breadcrumb.');\n\t}\n\n\t//Persona\n\tconst persona = {\n\t\tid: \"\",\n\t\tvotado: 0,\n\t};\n\n\t//Hacemos carga inicial\n\tuseEffect(() => {\n\t\tdispatch(obtenerPersonaActivistaAccion(persona));\n\t}, []);\n\n\t//Verificamos si hubo cambios\n\tif (reload) {\n\t\tpersona.id = \"\";\n\t\tdispatch(obtenerPersonaActivistaAccion(persona));\n\t}\n\n\t//Realizamos\n\tconst performAction = (id) => {\n\t\tconsole.log(\"vota\");\n\t\thandleVotado(id);\n\t};\n\n\t//Handle votado\n\tconst handleVotado = (id) => {\n\t\tpersona.id = id;\n\t\tpersona.votado = 1;\n\t\tdispatch(actualizarPersonaActivistaVotadaAccion(persona));\n\t};\n\n\n\n\t// Columnas\n\tconst columns = [\n\t\t{\n\t\t\tfield: \"id\",\n\t\t\theaderName: \"ID\",\n\t\t\twidth: 180,\n\t\t\thide: true,\n\t\t},\n\t\t{\n\t\t\tfield: \"actions\",\n\t\t\theaderName: \"ACCION\",\n\t\t\twidth: 120,\n\t\t\tdisableClickEventBubbling: true,\n\t\t\trenderCell: (params: CellParams) => {\n\n\t\t\t\tconst api: GridApi = params.api;\n\t\t\t\tconst fields = api\n\t\t\t\t\t.getAllColumns()\n\t\t\t\t\t.map((c) => c.field)\n\t\t\t\t\t.filter((c) => c !== \"__check__\" && !!c);\n\t\t\t\tconst thisRow = {};\n\n\t\t\t\tfields.forEach((f) => {\n\t\t\t\t\tthisRow[f] = params.getValue(f);\n\t\t\t\t});\n\n\t\t\t\tconst acciones = [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: thisRow.id,\n\t\t\t\t\t\taction: \"ver\",\n\t\t\t\t\t\tpath: `/${modelo}/ver/${thisRow.id}`,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n\t\t\t\t\t\taction: \"crear\",\n\t\t\t\t\t\tpath: `${modelo}/crear`\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n\t\t\t\t\t\taction: \"editar\",\n\t\t\t\t\t\tpath: `${modelo}/editar`\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n\t\t\t\t\t\taction: \"eliminar\",\n\t\t\t\t\t\tpath: `${modelo}/eliminar`\n\t\t\t\t\t},\n\n\t\t\t\t]\n\t\t\t\treturn <MenuButtonListCpt acciones={acciones} />\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tfield: \"votado\",\n\t\t\theaderName: \"VOTADO\",\n\t\t\twidth: 120,\n\t\t\trenderCell: (params: CellParams) => {\n\t\t\t\tif (params.value === 1) {\n\t\t\t\t\treturn <DoneAllIcon\n\t\t\t\t\t\tstyle={{ color: '#03a9f4' }}\n\t\t\t\t\t/>;\n\t\t\t\t} else {\n\t\t\t\t\tconst onClick = () => {\n\t\t\t\t\t\tconst api: GridApi = params.api;\n\t\t\t\t\t\tconst fields = api\n\t\t\t\t\t\t\t.getAllColumns()\n\t\t\t\t\t\t\t.map((c) => c.field)\n\t\t\t\t\t\t\t.filter((c) => c !== \"__check__\" && !!c);\n\t\t\t\t\t\tconst thisRow = {};\n\n\t\t\t\t\t\tfields.forEach((f) => {\n\t\t\t\t\t\t\tthisRow[f] = params.getValue(f);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tperformAction(thisRow.id);\n\t\t\t\t\t};\n\t\t\t\t\treturn <RadioButtonUncheckedIcon\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t/>;\n\t\t\t\t}\n\n\t\t\t},\n\t\t},\n\n\t\t{\n\t\t\tfield: \"idpuesto\",\n\t\t\theaderName: \"IDPUESTO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"idrol\",\n\t\t\theaderName: \"IDROL\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"idjefe\",\n\t\t\theaderName: \"IDJEFE\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"zona\",\n\t\t\theaderName: \"ZONA\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"puesto\",\n\t\t\theaderName: \"PUESTO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"nombre\",\n\t\t\theaderName: \"NOMBRE\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"telefono\",\n\t\t\theaderName: \"TELEFONO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"domicilio\",\n\t\t\theaderName: \"DOMICILIO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"claveelector\",\n\t\t\theaderName: \"CLAVEELECTOR\",\n\t\t\twidth: 180,\n\t\t},\n\n\t];\n\n\treturn (\n\t\t<div>\n\t\t\t<Breadcrumbs aria-label=\"breadcrumb\">\n\t\t\t\t<Link color=\"inherit\" href=\"/home\" >\n\t\t\t\t\tHome\n      \t\t\t</Link>\n\t\t\t\t<Link\n\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\thref=\"/promovidos\"\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\taria-current=\"page\"\n\t\t\t\t>\n\t\t\t\t\tPromovidos\n      \t\t\t</Link>\n\t\t\t</Breadcrumbs><br />\n\t\t\t<DataGridCpt columns={columns} actArray={activistas} reload={reload} />\n\t\t</div>\n\t);\n};\n\nexport default Promovidos;\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos/PromovidoDetalle.jsx",["141","142"],"import React, { useEffect } from \"react\";\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerPersonaActivistaAccion } from \"../../../redux/PersonaActivistaDucks\";\nimport MaterialTableCpt from '../../utils/MaterialTableCpt';\nimport PieChart from '../../charts/PieChart';\nimport { ResizableBox } from 'react-resizable';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\n\nconst PromovidoDetalle = () => {\n\t//Store y configuracion REDUX\n\tconst dispatch = useDispatch();\n\tconst activistas = useSelector((store) => store.personasActivistas.array);\n\n\t//BreadCums\n\tfunction handleClick(event) {\n\t\tevent.preventDefault();\n\t\tconsole.info('You clicked a breadcrumb.');\n\t}\n\n\t//Recibimos parametros\n\tconst { id } = useParams()\n\n\t//Persona\n\tconst persona = {\n\t\tid: id,\n\t\tvotado: 0,\n\t};\n\n\t//Hacemos carga inicial\n\tuseEffect(() => {\n\t\tpersona.id = id;\n\t\tdispatch(obtenerPersonaActivistaAccion(persona));\n\t}, []);\n\n\t//Reasignamos datos id para mapear tipo arbol\n\tconst preparaDatos = () => {\n\t\t//reasignamos id\n\t\tactivistas.map(\n\t\t\titem => {\n\t\t\t\titem.id = item.idpuesto\n\t\t\t}\n\t\t)\n\t}\n\n\tconst imprimeDatosActivista = () => {\n\t\tif (activistas[0] === undefined) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t< h5 > Nombre: </h5 >\n\t\t\t\t\t< h5 > Telefono: </h5 >\n\t\t\t\t\t< h5 > Domicilio: </h5 >\n\t\t\t\t</div>\n\t\t\t)\n\t\t} return (\n\t\t\t<div>\n\t\t\t\t< h5 > Nombre: {activistas[0].nombre}</h5 >\n\t\t\t\t< h5 > Telefono: {activistas[0].telefono}</h5 >\n\t\t\t\t< h5 > Domicilio: {activistas[0].domicilio}</h5 >\n\t\t\t</div>\n\t\t)\n\n\t}\n\n\tconst suma = () => {\n\t\tlet suma = 0;\n\t\tactivistas.forEach(item =>\n\t\t\tsuma = suma + item.votado,\n\t\t);\n\t\treturn suma;\n\t}\n\t//Columnas\n\tconst columns = [\n\t\t{ title: 'VOTADO', field: 'votado', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'IDPUESTO', field: 'idpuesto', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'IDROL', field: 'idrol', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'IDJEFE', field: 'idjefe', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'ZONA', field: 'zona', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'PUESTO', field: 'puesto', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t\t{ title: 'NOMBRE', field: 'nombre', headerStyle: { minWidth: 380 }, cellStyle: { minWidth: 380 }, },\n\t\t{ title: 'TELEFONO', field: 'telefono', headerStyle: { minWidth: 140 }, cellStyle: { minWidth: 140 }, },\n\t\t{ title: 'DOMICILIO', field: 'domicilio', headerStyle: { minWidth: 280 }, cellStyle: { minWidth: 280 }, },\n\t\t{ title: 'CLAVEELECTOR', field: 'claveelector', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t];\n\n\treturn (\n\n\n\n\t\t<div >\n\t\t\t<Breadcrumbs aria-label=\"breadcrumb\">\n\t\t\t\t<Link color=\"inherit\" href=\"/home\" >\n\t\t\t\t\tHome\n      \t\t\t</Link>\n\t\t\t\t<Link color=\"inherit\" href=\"/promovidos\" >\n\t\t\t\t\tPromovidos\n      \t\t\t</Link>\n\t\t\t\t<Link\n\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\thref=\"/promovidos/promovidosdetalle/\"\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\taria-current=\"page\"\n\t\t\t\t>\n\t\t\t\t\tDetalle\n      \t\t\t</Link>\n\n\t\t\t</Breadcrumbs><br />\n\t\t\t{preparaDatos()}\n\t\t\t{imprimeDatosActivista()}\n\t\t\t<ResizableBox width={600} height={400}\n\t\t\t\tminConstraints={[100, 100]} maxConstraints={[600, 400]}>\n\t\t\t\t<PieChart data={[suma(), (activistas.length - suma())]} />\n\t\t\t</ResizableBox>\n\n\t\t\t<MaterialTableCpt title={\"Detalles promovido\"} columns={columns} data={activistas} parentChildData={(row, rows) => rows.find(a => a.id === row.idjefe)} />\n\n\t\t</div>\n\n\t)\n}\n\nexport default PromovidoDetalle\n\n","/home/node/aplicacion/mdc-softare-frontend/src/components/ListIcons.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/DataGridCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/ContextMenuCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/AccordionCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/charts/PieChart.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MenuButtonListCpt.jsx",["143"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useHistory } from \"react-router-dom\";\n\nconst MenuButtonListCpt = (props) => {\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\tconst history = useHistory();\n\n\tconst handleClick = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleAction = (path) => {\n\t\thistory.push(path);\n\t\thandleClose();\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n\t\t\t\tOpen Menu\n\t\t\t</Button>\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tprops.acciones.map(function (item, index) {\n\t\t\t\t\t\tif (item.action === \"get\") {\n\t\t\t\t\t\t\treturn <MenuItem key={index} onClick={() => handleAction(item.path)} > {item.title}</MenuItem>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (item.action === \"create\") {\n\t\t\t\t\t\t\treturn <MenuItem key={index} onClick={() => handleAction(item.path)} > {item.title}</MenuItem>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (item.action === \"update\") {\n\t\t\t\t\t\t\treturn <MenuItem key={index} onClick={() => handleAction(item.path)} > {item.title}</MenuItem>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (item.action === \"delete\") {\n\t\t\t\t\t\t\treturn <MenuItem key={index} onClick={() => item.handle(item.rowdata)}>{item.title}</MenuItem>;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t<MenuItem key=\"id-close\" onClick={handleClose}>cerrar</MenuItem>\n\t\t\t</Menu>\n\t\t</div >\n\t);\n}\n\nexport default MenuButtonListCpt\n","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCrudCpt.jsx",["144","145"],"import React, { Fragment } from 'react'\nimport MaterialTable from \"material-table\";\n\n\nconst MaterialTableCrudCpt = (props) => {\n    const { useState } = React;\n\n    const [columns, setColumns] = useState(props.columns);\n\n    const [data, setData] = useState(props.data);\n\n    return (\n        <MaterialTable\n            title=\"Editable Preview\"\n            options={{\n                rowStyle: {\n                    fontSize: 12,\n                },\n            }}\n            columns={columns}\n            data={data}\n\n            editable={{\n                onRowAdd: newData =>\n                    new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            setData([...data, newData]);\n\n                            resolve(alert(\"add\"));\n\n                        }, 1000)\n                    }),\n                onRowUpdate: (newData, oldData) =>\n                    new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            const dataUpdate = [...data];\n                            const index = oldData.tableData.id;\n                            dataUpdate[index] = newData;\n                            setData([...dataUpdate]);\n\n                            resolve(alert(\"update\"));\n                        }, 1000)\n                    }),\n                onRowDelete: oldData =>\n                    new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            const dataDelete = [...data];\n                            const index = oldData.tableData.id;\n                            dataDelete.splice(index, 1);\n                            setData([...dataDelete]);\n\n                            resolve(alert(\"add\"));\n                        }, 1000)\n                    }),\n            }}\n        />\n    )\n}\n\n\nexport default MaterialTableCrudCpt\n\n\n\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/CreateCasilla.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/UpdateCasilla.jsx",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":45,"column":8,"nodeType":"156","endLine":45,"endColumn":10,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"155","line":22,"column":8,"nodeType":"156","endLine":22,"endColumn":10,"suggestions":"158"},{"ruleId":"154","severity":1,"message":"155","line":166,"column":8,"nodeType":"156","endLine":166,"endColumn":10,"suggestions":"159"},{"ruleId":"154","severity":1,"message":"155","line":20,"column":8,"nodeType":"156","endLine":20,"endColumn":10,"suggestions":"160"},{"ruleId":"150","severity":1,"message":"161","line":10,"column":8,"nodeType":"152","messageId":"153","endLine":10,"endColumn":28},{"ruleId":"154","severity":1,"message":"162","line":36,"column":5,"nodeType":"156","endLine":36,"endColumn":7,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"164","line":36,"column":5,"nodeType":"156","endLine":36,"endColumn":7,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":42,"column":9,"nodeType":"168","messageId":"169","endLine":42,"endColumn":11},{"ruleId":"166","severity":1,"message":"170","line":37,"column":25,"nodeType":"171","messageId":"172","endLine":37,"endColumn":34},{"ruleId":"150","severity":1,"message":"173","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"174","line":8,"column":21,"nodeType":"152","messageId":"153","endLine":8,"endColumn":31},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["177"],["178"],["179"],["180"],"'MaterialTableCrudCpt' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'persona'. Either include them or remove the dependency array.",["181"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'persona'. Either include them or remove the dependency array.",["182"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'Fragment' is defined but never used.","'setColumns' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"183","fix":"185"},{"desc":"183","fix":"186"},{"desc":"183","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [dispatch]",{"range":"192","text":"193"},{"range":"194","text":"193"},{"range":"195","text":"193"},{"range":"196","text":"193"},"Update the dependencies array to be: [dispatch, persona]",{"range":"197","text":"198"},"Update the dependencies array to be: [dispatch, id, persona]",{"range":"199","text":"200"},[1311,1313],"[dispatch]",[733,735],[4054,4056],[685,687],[1166,1168],"[dispatch, persona]",[1009,1011],"[dispatch, id, persona]"]