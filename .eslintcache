[{"/home/node/aplicacion/mdc-softare-frontend/src/index.js":"1","/home/node/aplicacion/mdc-softare-frontend/src/App.jsx":"2","/home/node/aplicacion/mdc-softare-frontend/src/themeConfig.js":"3","/home/node/aplicacion/mdc-softare-frontend/src/redux/store.js":"4","/home/node/aplicacion/mdc-softare-frontend/src/components/Container.jsx":"5","/home/node/aplicacion/mdc-softare-frontend/src/redux/PersonaActivistaDucks.js":"6","/home/node/aplicacion/mdc-softare-frontend/src/redux/InfoAdicionalCasillasDucks.js":"7","/home/node/aplicacion/mdc-softare-frontend/src/redux/CasillasDucks.js":"8","/home/node/aplicacion/mdc-softare-frontend/src/redux/ReportesRgsDucks.js":"9","/home/node/aplicacion/mdc-softare-frontend/src/redux/VotosHoraDucks.js":"10","/home/node/aplicacion/mdc-softare-frontend/src/redux/LoginDucks.js":"11","/home/node/aplicacion/mdc-softare-frontend/src/redux/EleccionesDucks.js":"12","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasGeneroDucks.js":"13","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasEdadDucks.js":"14","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasSeccionDucks.js":"15","/home/node/aplicacion/mdc-softare-frontend/src/components/Navbar.jsx":"16","/home/node/aplicacion/mdc-softare-frontend/src/components/DrawerCustom.jsx":"17","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Home.jsx":"18","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos.jsx":"19","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/CapturaDeVotos.jsx":"20","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Graficas.jsx":"21","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas.jsx":"22","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/GestionarPromovidos.jsx":"23","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/IncidentesCasillas.jsx":"24","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones.jsx":"25","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/SignIn.jsx":"26","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos/PromovidoDetalle.jsx":"27","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/CreateCasilla.jsx":"28","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/UpdateCasilla.jsx":"29","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones/CreateEleccion.jsx":"30","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones/UpdateEleccion.jsx":"31","/home/node/aplicacion/mdc-softare-frontend/src/components/ListIcons.jsx":"32","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/PieChart.jsx":"33","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCpt.jsx":"34","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MenuButtonListCpt.jsx":"35","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/DataGridCpt.jsx":"36","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableEditableCpt.jsx":"37","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/PolarChart.jsx":"38","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/MultiAxisChart.jsx":"39","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/HorizontalChart.jsx":"40","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/ComboChart.jsx":"41","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ReportesRgs.jsx":"42","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasPorRolDucks.js":"43","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasTotalSeccionDucks.js":"44","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasEstructuraDucks.js":"45","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Progreso.jsx":"46"},{"size":217,"mtime":1611516282426,"results":"47","hashOfConfig":"48"},{"size":492,"mtime":1617556044541,"results":"49","hashOfConfig":"48"},{"size":311,"mtime":1611550280894,"results":"50","hashOfConfig":"48"},{"size":1671,"mtime":1618772778760,"results":"51","hashOfConfig":"48"},{"size":4646,"mtime":1618765848680,"results":"52","hashOfConfig":"48"},{"size":8746,"mtime":1618772163355,"results":"53","hashOfConfig":"48"},{"size":3696,"mtime":1616986183627,"results":"54","hashOfConfig":"48"},{"size":7841,"mtime":1616036055787,"results":"55","hashOfConfig":"48"},{"size":2157,"mtime":1616036055787,"results":"56","hashOfConfig":"48"},{"size":1172,"mtime":1616987286645,"results":"57","hashOfConfig":"48"},{"size":2154,"mtime":1617770974290,"results":"58","hashOfConfig":"48"},{"size":9314,"mtime":1616036055787,"results":"59","hashOfConfig":"48"},{"size":1566,"mtime":1616988059437,"results":"60","hashOfConfig":"48"},{"size":1550,"mtime":1616988328252,"results":"61","hashOfConfig":"48"},{"size":1574,"mtime":1616988333316,"results":"62","hashOfConfig":"48"},{"size":2990,"mtime":1617476337193,"results":"63","hashOfConfig":"48"},{"size":997,"mtime":1615522578225,"results":"64","hashOfConfig":"48"},{"size":6214,"mtime":1618766228468,"results":"65","hashOfConfig":"48"},{"size":4937,"mtime":1618773413861,"results":"66","hashOfConfig":"48"},{"size":7845,"mtime":1618769419569,"results":"67","hashOfConfig":"48"},{"size":4851,"mtime":1616996497629,"results":"68","hashOfConfig":"48"},{"size":6765,"mtime":1618167716344,"results":"69","hashOfConfig":"48"},{"size":4277,"mtime":1618169277612,"results":"70","hashOfConfig":"48"},{"size":4658,"mtime":1614014471415,"results":"71","hashOfConfig":"48"},{"size":6459,"mtime":1616978283757,"results":"72","hashOfConfig":"48"},{"size":5027,"mtime":1617770970642,"results":"73","hashOfConfig":"48"},{"size":5281,"mtime":1618769959552,"results":"74","hashOfConfig":"48"},{"size":8431,"mtime":1615521914127,"results":"75","hashOfConfig":"48"},{"size":10484,"mtime":1615521914127,"results":"76","hashOfConfig":"48"},{"size":6796,"mtime":1615521914127,"results":"77","hashOfConfig":"48"},{"size":8751,"mtime":1615996898472,"results":"78","hashOfConfig":"48"},{"size":7267,"mtime":1618765956829,"results":"79","hashOfConfig":"48"},{"size":680,"mtime":1616992543224,"results":"80","hashOfConfig":"48"},{"size":2887,"mtime":1618166474978,"results":"81","hashOfConfig":"48"},{"size":1598,"mtime":1616086085665,"results":"82","hashOfConfig":"48"},{"size":1108,"mtime":1618773840843,"results":"83","hashOfConfig":"48"},{"size":4770,"mtime":1618168706124,"results":"84","hashOfConfig":"48"},{"size":716,"mtime":1616996078943,"results":"85","hashOfConfig":"48"},{"size":3714,"mtime":1616995647345,"results":"86","hashOfConfig":"48"},{"size":4004,"mtime":1616996853197,"results":"87","hashOfConfig":"48"},{"size":1311,"mtime":1616996994871,"results":"88","hashOfConfig":"48"},{"size":2266,"mtime":1618164765034,"results":"89","hashOfConfig":"48"},{"size":1742,"mtime":1618763098093,"results":"90","hashOfConfig":"48"},{"size":1674,"mtime":1618381801615,"results":"91","hashOfConfig":"48"},{"size":1675,"mtime":1618772704551,"results":"92","hashOfConfig":"48"},{"size":5907,"mtime":1618773963824,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1wh7eu1",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/node/aplicacion/mdc-softare-frontend/src/index.js",[],["204","205"],"/home/node/aplicacion/mdc-softare-frontend/src/App.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/themeConfig.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/store.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/Container.jsx",["206","207","208"],"/home/node/aplicacion/mdc-softare-frontend/src/redux/PersonaActivistaDucks.js",["209","210","211","212"],"/home/node/aplicacion/mdc-softare-frontend/src/redux/InfoAdicionalCasillasDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/CasillasDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/ReportesRgsDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/VotosHoraDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/LoginDucks.js",["213"],"import isofetch from 'isomorphic-fetch'\n\n//constantes\nconst dataInicial = {\n    array: [],\n    reload: false\n}\n//Obtener datos de reportes activista\nconst GET_LOGIN = 'GET_LOGIN';\nconst UPDATE_LOGIN = 'UPDATE_LOGIN';\n\n//reducer \nexport default function loginReducer(state = dataInicial, action) {\n    switch (action.type) {\n        case GET_LOGIN:\n            return { ...state, array: action.payload }\n        case UPDATE_LOGIN:\n            return { ...state, array: action.payload }\n        default:\n            return state\n    }\n}\n\n//acciones\nexport const getLoginAccion = (login) => async (dispatch, getState) => {\n    console.log(login)\n\n    //Intentamos accion\n    try {\n        const query = `\n        mutation login{\n            login(input: {username: \"${login.usuario}\", password: \"${login.password}\"})\n          }`;\n\n\n        isofetch(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n            method: 'POST',\n            headers: {\n                'Authorization': '',\n                'Content-Type': 'application/json',\n                'QueryName': 'login',\n            },\n            body: JSON.stringify({ query }),\n        })\n            .then(res => res.json())\n            .then((result) => {\n                try {\n                    //Establecemos el token\n                    localStorage.setItem(`${process.env.REACT_APP_TOKEN_NAME}`, result.data.login);\n\n                    //Establecemos en el store del redux las variables\n                    return dispatch({\n                        type: GET_LOGIN,\n                        payload: result.data.login,\n                        reaload: false,\n                    }),\n                        //Recargamos por completo la pagina\n                        window.location.reload();\n                } catch (error) {\n                    console.log(error)\n                }\n            });\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}\n\nexport const updateLoginAccion = (setreReload) => async (dispatch, getState) => {\n    //Intentamos accion\n    try {\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}","/home/node/aplicacion/mdc-softare-frontend/src/redux/EleccionesDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasGeneroDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasEdadDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasSeccionDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/Navbar.jsx",["214"],"import React from 'react'\nimport { AppBar, IconButton, makeStyles, Toolbar, Typography, Button } from '@material-ui/core'\nimport { Menu } from '@material-ui/icons';\nimport { useHistory } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst styles = makeStyles(theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    title: {\n        flexGrow: 1\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            margiLeft: drawerWidth\n        }\n    }\n\n}))\n\nconst Navbar = (props) => {\n\n    const classes = styles()\n\n    const history = useHistory();\n\n    //Login\n    const handleLogin = (path) => {\n        history.push(\"/\");\n    };\n\n    //Logout\n    const handleLogout = (path) => {\n        localStorage.removeItem(`${process.env.REACT_APP_TOKEN_NAME}`);\n        history.push(\"/\");\n        window.location.reload();\n    };\n\n    const imprimeLoginLogout = () => {\n        if (localStorage.getItem(\"token-centinela\") === null) {\n            return (\n                <div>\n                    <Button color='inherit' onClick={handleLogin}>Entrar</Button>\n                </div>\n            )\n        }\n        return (\n            <div>\n                <Button color='inherit' onClick={handleLogout}>Salir</Button>\n            </div>\n        )\n    }\n\n    const imprimeNombreBienvenido = () => {\n        if (localStorage.getItem(\"token-centinela\") != null && localStorage.getItem(\"token-centinela\") != \"undefined\") {\n            console.log(localStorage.getItem(\"token-centinela\"))\n            const token = localStorage.getItem(`${process.env.REACT_APP_TOKEN_NAME}`);\n            const base64Url = token.split('.')[1];\n            const decodedValue = JSON.parse(window.atob(base64Url));\n\n            return (\n                <div>\n                    <Typography variant='h6' className={classes.title}>\n                        {decodedValue.name.toLowerCase()}\n                    </Typography>\n                </div>\n            )\n        }\n    }\n\n\n    return (\n        <div>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        className={classes.menuButton}\n                        color='inherit'\n                        onClick={() => props.openAction()}\n                    >\n                        <Menu />\n                    </IconButton>\n                    <img src={\"https://res.cloudinary.com/dti7elyha/image/upload/v1617369536/simbolo-centinela_tx0rms.png\"} alt=\"centinel logo\" width=\"35\" height=\"35\" />\n                    <Typography variant='h6' className={classes.title}>\n                        CENTINELA\n                    </Typography>\n                    {imprimeNombreBienvenido()}\n                    {imprimeLoginLogout()}\n                </Toolbar>\n\n            </AppBar>\n        </div >\n    )\n}\n\nexport default Navbar\n","/home/node/aplicacion/mdc-softare-frontend/src/components/DrawerCustom.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Home.jsx",["215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232"],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos.jsx",["233"],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/CapturaDeVotos.jsx",["234","235","236"],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Graficas.jsx",["237","238","239","240","241","242","243","244","245","246","247","248","249","250"],"import React, { useEffect, Component } from \"react\";\nimport { Divider } from '@material-ui/core'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGraficasGeneroAccion, } from \"../../redux/GraficasGeneroDucks\";\nimport { getGraficasEdadAccion, } from \"../../redux/GraficasEdadDucks\";\nimport { getGraficasSeccionAccion, } from \"../../redux/GraficasSeccionDucks\";\nimport PieChart from '../charts/PieChart';\nimport MultiAxisChart from '../charts/MultiAxisChart';\nimport PolarChart from '../charts/PolarChart';\n\n//BreadCums\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\nconst Graficas = () => {\n    const dispatch = useDispatch();\n    const genero = useSelector((store) => store.graficasGenero.array);\n    const edad = useSelector((store) => store.graficasEdad.array);\n    const seccion = useSelector((store) => store.graficasSeccion.array);\n\n\n\n    useEffect(() => {\n        dispatch(getGraficasGeneroAccion());\n        dispatch(getGraficasEdadAccion());\n        dispatch(getGraficasSeccionAccion());\n\n\n        const idgenero = setInterval(() => {\n            dispatch(getGraficasGeneroAccion());\n\n        }, 30000);\n\n        return () => clearInterval(idgenero);\n\n        const idedad = setInterval(() => {\n            dispatch(getGraficasEdadAccion());\n\n        }, 30000);\n\n        return () => clearInterval(idedad);\n\n        const idseccion = setInterval(() => {\n            dispatch(getGraficasSeccionAccion());\n\n        }, 30000);\n\n        return () => clearInterval(idseccion);\n    }, []);\n\n    //============== GENERO ==============\n    const getTagsGenero = () => {\n        const tagsGenero = [];\n        genero.map(item => {\n            tagsGenero.push(item.genero === 'F' ? 'Mujeres' : 'Hombres')\n        });\n        return tagsGenero;\n    }\n\n    const getVotosGenero = () => {\n        const votos = [];\n        genero.map(item => {\n            votos.push(item.votos)\n        });\n        return votos;\n    }\n\n    const getColoresGenero = () => {\n        const colores = [];\n        let color = '';\n        genero.map(item => {\n            color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n            colores.push(color)\n        });\n        return colores;\n    }\n    //============== GENERO ==============\n\n    //============== EDAD ==============\n    const getTagsEdad = () => {\n        const tagsEdad = [];\n        edad.map(item => {\n            tagsEdad.push(item.edad)\n        });\n        return tagsEdad;\n    }\n\n    const getVotosEdad = () => {\n        const votos = [];\n        edad.map(item => {\n            votos.push(item.votos)\n        });\n        return votos;\n    }\n\n    const getColoresEdad = () => {\n        const colores = [];\n        let color = '';\n        edad.map(item => {\n            color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n            colores.push(color)\n        });\n        return colores;\n    }\n    //============== EDAD ==============\n\n    //============== SECCION ==============\n    const getTagsSeccion = () => {\n        const tagsSeccion = [];\n        seccion.map(item => {\n            tagsSeccion.push(item.seccion)\n        });\n        return tagsSeccion;\n    }\n\n    const getVotosSeccion = () => {\n        const votos = [];\n        seccion.map(item => {\n            votos.push(item.votos)\n        });\n        return votos;\n    }\n\n    const getColoresSeccion = () => {\n        const colores = [];\n        let color = '';\n        seccion.map(item => {\n            color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n            colores.push(color)\n        });\n        return colores;\n    }\n    //============== SECCION ==============\n\n\n\n\n    return (\n        <div >\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/promovidos\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Graficas\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            Hombres / Mujeres\n            <PieChart data={getVotosGenero()} tags={getTagsGenero()} colors={getColoresGenero()} />\n            <Divider />\n            Votos / Edades\n            <Divider />\n            <MultiAxisChart data={getVotosEdad()} tags={getTagsEdad()} colors={getColoresEdad()} label={\"Votos por edad\"} />\n            <Divider />\n                Votos / Seccion\n            <PolarChart data={getVotosSeccion()} tags={getTagsSeccion()} colors={getColoresSeccion()} label={\"Votos por seccion\"} />\n            <Divider />\n\n        </div>\n    )\n}\n\nexport default Graficas\n\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas.jsx",["251"],"import React, { useEffect } from \"react\";\nimport {\n    getCasillaAccion, createCasillaAccion,\n    updateCasillaAccion, deleteCasillaAccion\n} from \"../../redux/CasillasDucks\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MenuButtonListCpt from '../utils/MenuButtonListCpt';\n\nconst Casillas = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n    const casillas = useSelector((store) => store.casillas.array);\n    const reload = useSelector((store) => store.casillas.reload);\n\n    //Nombre modelo\n    const modelo = \"casillas\";\n\n    //Acciones repository    \n    const handleCreate = (casilla) => {\n        dispatch(createCasillaAccion(casilla));\n    };\n\n    const handleUpdate = (casilla) => {\n        dispatch(updateCasillaAccion(casilla));\n    };\n\n    const handleDelete = (casilla) => {\n        dispatch(deleteCasillaAccion(casilla));\n    };\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Casilla\n    const casilla = {\n        id: \"\",\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(getCasillaAccion(casilla));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        dispatch(getCasillaAccion(casilla));\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"ID\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"actions\",\n            headerName: \"ACCION\",\n            width: 140,\n            disableClickEventBubbling: true,\n            renderCell: (params: CellParams) => {\n                const api: GridApi = params.api;\n                const fields = api\n                    .getAllColumns()\n                    .map((c) => c.field)\n                    .filter((c) => c !== \"__check__\" && !!c);\n                const thisRow = {};\n\n                fields.forEach((f) => {\n                    thisRow[f] = params.getValue(f);\n                });\n\n                const acciones = [\n                    // {\n                    //     id: thisRow.id,\n                    //     action: \"get\",\n                    //     title: \"ver\",\n                    //     handle: null,\n                    //     rowdata: thisRow,\n                    //     path: `/${modelo}/get/${thisRow.id}`,\n                    // },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"create\",\n                        title: \"crear\",\n                        handle: handleCreate,\n                        rowdata: thisRow,\n                        path: `${modelo}/create`\n                    },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"update\",\n                        title: \"actualizar\",\n                        handle: handleUpdate,\n                        rowdata: thisRow,\n                        path: `${modelo}/update/${thisRow.id}`\n                    },\n                    // {\n                    //     id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                    //     action: \"delete\",\n                    //     title: \"eliminar\",\n                    //     handle: handleDelete,\n                    //     rowdata: thisRow,\n                    //     path: `${modelo}`\n                    // },\n\n                ]\n                return <MenuButtonListCpt acciones={acciones} create={handleCreate} actualizar={handleUpdate} delete={handleDelete} />\n            },\n        },\n        {\n            field: \"idrepresentantecasilla\",\n            headerName: \"IDREPRESENTANTECASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccionasignada\",\n            headerName: \"SECCIONASIGNADA\",\n            width: 180,\n        },\n        {\n            field: \"cargo\",\n            headerName: \"CARGO\",\n            width: 180,\n        },\n        {\n            field: \"apertura\",\n            headerName: \"APERTURA\",\n            width: 180,\n        },\n        {\n            field: \"horaapertura\",\n            headerName: \"HORAAPERTURA\",\n            width: 180,\n        },\n        {\n            field: \"flujo1230pm\",\n            headerName: \"FLUJO1230PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos1230pm\",\n            headerName: \"PROMOVIDOS1230PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo430pm\",\n            headerName: \"FLUJO430PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos430pm\",\n            headerName: \"PROMOVIDOS430PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo6pm\",\n            headerName: \"FLUJO6PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos6pm\",\n            headerName: \"PROMOVIDOS6PM\",\n            width: 180,\n        },\n        {\n            field: \"cierre6pm\",\n            headerName: \"CIERRE6PM\",\n            width: 180,\n        },\n        {\n            field: \"horacierre\",\n            headerName: \"HORACIERRE\",\n            width: 180,\n        },\n        {\n            field: \"rpp1\",\n            headerName: \"RPP1\",\n            width: 180,\n        },\n        {\n            field: \"rpp2\",\n            headerName: \"RPP2\",\n            width: 180,\n        },\n        {\n            field: \"rps1\",\n            headerName: \"RPS1\",\n            width: 180,\n        },\n        {\n            field: \"incidente\",\n            headerName: \"INCIDENTE\",\n            width: 180,\n        },\n        {\n            field: \"nombre\",\n            headerName: \"NOMBRE\",\n            width: 180,\n        },\n        {\n            field: \"municipio\",\n            headerName: \"MUNICIPIO\",\n            width: 180,\n        },\n        {\n            field: \"localidad\",\n            headerName: \"LOCALIDAD\",\n            width: 180,\n        },\n        {\n            field: \"distrito \",\n            headerName: \"DISTRITO\",\n            width: 180,\n        },\n    ];\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Casillas\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={casillas} reload={reload} />\n        </div>\n    )\n}\n\nexport default Casillas\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/GestionarPromovidos.jsx",["252","253","254"],"import React, { useEffect, useState } from \"react\";\nimport {\n    retrievePersonaActivistaAccion,\n    updateVotoAccion,\n    createPersonaActivistaAccion,\n    updatePersonaActivistaAccion,\n    deletePersonaActivistaAccion\n} from \"../../redux/PersonaActivistaDucks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MaterialTableEditableCpt from '../utils/MaterialTableEditableCpt';\n\n\nconst GestionarPromovidos = () => {\n    const dispatch = useDispatch();\n    const activistas = useSelector((store) => store.personasActivistas.array);\n    const reload = useSelector((store) => store.personasActivistas.reload);\n\n\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Create\n    const handleCreate = (data) => {\n        console.log(\"handleCreate\" + data)\n        dispatch(createPersonaActivistaAccion(data));\n    }\n    //Update\n    const handleUpdate = (data) => {\n        console.log(\"handleUpdate\" + data)\n        dispatch(updatePersonaActivistaAccion(data));\n    }\n    //Delete\n    const handleDelete = (data) => {\n        console.log(\"handleDelete\" + data)\n        dispatch(deletePersonaActivistaAccion(data));\n    }\n\n    //Persona\n    const persona = {\n        id: \"\",\n        votado: 0,\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(retrievePersonaActivistaAccion(persona));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        dispatch(retrievePersonaActivistaAccion(persona));\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"idpuesto\",\n            title: \"IDPUESTO\",\n            width: 120,\n        },\n        {\n            field: \"idrol\",\n            title: \"IDROL\",\n            width: 100,\n        },\n        {\n            field: \"idjefe\",\n            title: \"IDJEFE\",\n            width: 100,\n        },\n        {\n            field: \"puesto\",\n            title: \"PUESTO\",\n            lookup: { 'COORDINADOR': 'COORDINADOR', 'ACTIVISTA': 'ACTIVISTA', 'PROMOVIDO': 'PROMOVIDO' },\n\n        },\n        {\n            field: \"nombre\",\n            title: \"NOMBRE\",\n            width: 200,\n        },\n        {\n            field: \"apellidos\",\n            title: \"APELLIDOS\",\n            width: 200,\n        },\n        {\n            field: \"telefono\",\n            title: \"TELEFONO\",\n            width: 180,\n        },\n        {\n            field: \"domicilio\",\n            title: \"DOMICILIO\",\n            width: 100,\n        },\n        {\n            field: \"seccion\",\n            title: \"SECCION\",\n            width: 100,\n        },\n        {\n            field: \"ocupacion\",\n            title: \"OCUPACION\",\n            width: 200,\n        },\n        {\n            field: \"edad\",\n            title: \"EDAD\",\n            width: 100,\n        },\n        {\n            field: \"genero\",\n            title: \"GENERO\",\n            width: 100,\n            lookup: { F: 'F', M: 'M' },\n        },\n        {\n            field: \"claveelector\",\n            title: \"CLAVEELECTOR\",\n            width: 180,\n        },\n        {\n            field: \"localidad\",\n            title: \"LOCALIDAD\",\n            width: 180,\n        },\n        {\n            field: \"municipio\",\n            title: \"MUNICIPIO\",\n            width: 180,\n        },\n    ];\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Gestionar promovidos\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <MaterialTableEditableCpt\n                columns={columns}\n                data={activistas}\n                handleCreate={handleCreate}\n                handleUpdate={handleUpdate}\n                handleDelete={handleDelete}\n            >\n            </MaterialTableEditableCpt>\n            {/* <AlertMessagesCpt></AlertMessagesCpt> */}\n        </div >\n    )\n}\n\nexport default GestionarPromovidos","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/IncidentesCasillas.jsx",["255"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerinfoAdicionalCasillaAccion } from \"../../redux/InfoAdicionalCasillasDucks\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nconst IncidentesCasillas = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n    const infoAdicionalCasillas = useSelector((store) => store.infoAdicionalCasillas.array);\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDINFOADICIONALCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"idcasilla\",\n            headerName: \"IDCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccionasignada\",\n            headerName: \"SECCIONASIGNADA\",\n            width: 180,\n        },\n        {\n            field: \"horaapertura\",\n            headerName: \"HORAAPERTURA\",\n            width: 180,\n        },\n        {\n            field: \"horacierre\",\n            headerName: \"HORACIERRE\",\n            width: 180,\n        },\n        {\n            field: \"incidenteuno\",\n            headerName: \"INCIDENTEUNO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidenteuno\",\n            headerName: \"HORAINCIDENTEUNO\",\n            width: 180,\n        },\n        {\n            field: \"incidentedos\",\n            headerName: \"INCIDENTEDOS\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentedos\",\n            headerName: \"HORAINCIDENTEDOS\",\n            width: 180,\n        },\n        {\n            field: \"incidentetres\",\n            headerName: \"INCIDENTETRES\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentetres\",\n            headerName: \"HORAINCIDENTETRES\",\n            width: 180,\n        },\n        {\n            field: \"incidentecuatro\",\n            headerName: \"INCIDENTECUATRO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentecuatro\",\n            headerName: \"HORAINCIDENTECUATRO\",\n            width: 180,\n        },\n        {\n            field: \"incidentecinco\",\n            headerName: \"INCIDENTECINCO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentecinco\",\n            headerName: \"HORAINCIDENTECINCO\",\n            width: 180,\n        },\n        {\n            field: \"prip1\",\n            headerName: \"PRIP1\",\n            width: 180,\n        },\n        {\n            field: \"prip2\",\n            headerName: \"PRIP2\",\n            width: 180,\n        },\n        {\n            field: \"pris1\",\n            headerName: \"PRIS1\",\n            width: 180,\n        },\n        {\n            field: \"pris2\",\n            headerName: \"PRIS2\",\n            width: 180,\n        },\n        {\n            field: \"presidente\",\n            headerName: \"PRESIDENTE\",\n            width: 180,\n        },\n        {\n            field: \"sec1\",\n            headerName: \"SEC1\",\n            width: 180,\n        },\n        {\n            field: \"sec2\",\n            headerName: \"SEC2\",\n            width: 180,\n        },\n        {\n            field: \"esc1\",\n            headerName: \"ESC1\",\n            width: 180,\n        },\n        {\n            field: \"esc2\",\n            headerName: \"ESC2\",\n            width: 180,\n        },\n        {\n            field: \"esc3\",\n            headerName: \"ESC3\",\n            width: 180,\n        },\n        {\n            field: \"sup1\",\n            headerName: \"SUP1\",\n            width: 180,\n        },\n        {\n            field: \"sup2\",\n            headerName: \"SUP2\",\n            width: 180,\n        },\n        {\n            field: \"sup3\",\n            headerName: \"SUP3\",\n            width: 180,\n        },\n    ];\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerinfoAdicionalCasillaAccion());\n    }, []);\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Incidentes Casillas\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={infoAdicionalCasillas} />\n        </div>\n    )\n}\n\nexport default IncidentesCasillas\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones.jsx",["256"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    getEleccionesAccion, createEleccionesAccion,\n    updateEleccionesAccion, deleteEleccionesAccion\n} from \"../../redux/EleccionesDucks\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MenuButtonListCpt from '../utils/MenuButtonListCpt';\n\nconst Elecciones = () => {\n    //Datos iniciales\n    const dispatch = useDispatch();\n    const elecciones = useSelector((store) => store.elecciones.array);\n    const reload = useSelector((store) => store.elecciones.reload);\n\n    //Nombre modelo\n    const modelo = \"elecciones\";\n\n    //Acciones repository    \n    const handleCreate = (eleccion) => {\n        dispatch(createEleccionesAccion(eleccion));\n    };\n\n    const handleUpdate = (eleccion) => {\n        dispatch(updateEleccionesAccion(eleccion));\n    };\n\n    const handleDelete = (eleccion) => {\n        dispatch(deleteEleccionesAccion(eleccion));\n    };\n\n    //eleccion\n    const eleccion = {\n        id: \"\",\n    };\n\n    //Carga iniciales\n    useEffect(() => {\n        dispatch(getEleccionesAccion(eleccion));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        dispatch(getEleccionesAccion(eleccion));\n    }\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"ID\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"actions\",\n            headerName: \"ACCION\",\n            width: 140,\n            disableClickEventBubbling: true,\n            renderCell: (params: CellParams) => {\n                const api: GridApi = params.api;\n                const fields = api\n                    .getAllColumns()\n                    .map((c) => c.field)\n                    .filter((c) => c !== \"__check__\" && !!c);\n                const thisRow = {};\n\n                fields.forEach((f) => {\n                    thisRow[f] = params.getValue(f);\n                });\n\n                const acciones = [\n                    // {\n                    //     id: thisRow.id,\n                    //     action: \"get\",\n                    //     title: \"ver\",\n                    //     handle: null,\n                    //     rowdata: thisRow,\n                    //     path: `/${modelo}/get/${thisRow.id}`,\n                    // },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"create\",\n                        title: \"crear\",\n                        handle: handleCreate,\n                        rowdata: thisRow,\n                        path: `${modelo}/create`\n                    },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"update\",\n                        title: \"actualizar\",\n                        handle: handleUpdate,\n                        rowdata: thisRow,\n                        path: `${modelo}/update/${thisRow.id}`\n                    },\n                    // {\n                    //     id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                    //     action: \"delete\",\n                    //     title: \"eliminar\",\n                    //     handle: handleDelete,\n                    //     rowdata: thisRow,\n                    //     path: `${modelo}`\n                    // },\n\n                ]\n                return <MenuButtonListCpt acciones={acciones} create={handleCreate} actualizar={handleUpdate} delete={handleDelete} />\n            },\n        },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 180,\n\n        },\n        {\n            field: \"pan\",\n            headerName: \"PAN\",\n            width: 180,\n\n        },\n        {\n            field: \"pri\",\n            headerName: \"PRI\",\n            width: 180,\n\n        },\n        {\n            field: \"prd\",\n            headerName: \"PRD\",\n            width: 180,\n\n        },\n        {\n            field: \"pvem\",\n            headerName: \"PVEM\",\n            width: 180,\n\n        },\n        {\n            field: \"pt\",\n            headerName: \"PT\",\n            width: 180,\n\n        },\n        {\n            field: \"movciudadano\",\n            headerName: \"MOVCIUDADANO\",\n            width: 180,\n\n        },\n        {\n            field: \"nuevaalianza\",\n            headerName: \"NUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"morena\",\n            headerName: \"MORENA\",\n            width: 180,\n\n        },\n        {\n            field: \"encuentrosocial\",\n            headerName: \"ENCUENTROSOCIAL\",\n            width: 180,\n\n        },\n        {\n            field: \"panprd\",\n            headerName: \"PANPRD\",\n            width: 180,\n\n        },\n        {\n            field: \"pripvemnuevaalianza\",\n            headerName: \"PRIPVEMNUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"pripvem\",\n            headerName: \"PRIPVEM\",\n            width: 180,\n\n        },\n        {\n            field: \"prinuevaalianza\",\n            headerName: \"PRINUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"pvemnuevaalianza\",\n            headerName: \"PVEMNUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"candidatosnoregistrados\",\n            headerName: \"CANDIDATOSNOREGISTRADOS\",\n            width: 180,\n\n        },\n        {\n            field: \"nulos\",\n            headerName: \"NULOS\",\n            width: 180,\n\n        },\n        {\n            field: \"total\",\n            headerName: \"TOTAL\",\n            width: 180,\n\n        },\n    ];\n\n\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/promovidos\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Elecciones\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={elecciones} reload={reload} />\n        </div>\n    )\n}\n\nexport default Elecciones","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/SignIn.jsx",["257","258","259","260","261","262"],"import React, { Fragment } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { getLoginAccion } from \"../../redux/LoginDucks\";\nimport { useForm } from 'react-hook-form'\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Centinela Software\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignIn() {\n    //Store y configuracion REDUX\n    const dispatch = useDispatch();\n    const loginRedux = useSelector((store) => store.login.array);\n    const reload = useSelector((store) => store.login.reload);\n\n    //Estilos\n    const classes = useStyles();\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n\n    //HandleClick\n    const onSubmit = (data) => {\n        console.log(data)\n        dispatch(getLoginAccion(data));\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Identificate\n        </Typography>\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate autoComplete=\"off\">\n                    <h6><span className=\"text-danger text-small d-block mb-2\">{errors?.usuario?.message}</span></h6>\n                    <TextField inputRef={register({ required: { value: true, message: 'Usuario requerido' } })}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"usuario\"\n                        label=\"Usuario\"\n                        name=\"usuario\"\n                        autoComplete=\"usuario\"\n                        autoFocus\n                    />\n                    <h6><span className=\"text-danger text-small d-block mb-2\">{errors?.password?.message}</span></h6>\n                    <TextField inputRef={register({ required: { value: true, message: 'Password requerido' } })}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    {/* <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    /> */}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Acceder\n          </Button>\n                    {/* <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n              </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid> */}\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos/PromovidoDetalle.jsx",["263","264","265"],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/CreateCasilla.jsx",["266"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useForm } from 'react-hook-form'\nimport { createCasillaAccion } from \"../../../redux/CasillasDucks\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n            border: \"\",\n        },\n    },\n}));\n\n//BreadCums\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\n\n\n\nconst CreateCasilla = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n\n    //Handle Create\n    const handleCreate = (casilla) => {\n        dispatch(createCasillaAccion(casilla));\n    };\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n    const onSubmit = (data, e) => {\n        handleCreate(data);\n        e.target.reset();\n    }\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link color=\"inherit\" href=\"/casillas\" >\n                    Casillas\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas/create\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Crear casilla\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Crear casilla\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.idrepresentantecasilla?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Representante obligatorio\" } })} name=\"idrepresentantecasilla\" required id=\"idrepresentantecasilla\" label=\"Representante de casilla\" defaultValue=\"\" />\n                        <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.seccionasignada?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Seccion obligatoria\" } })} name=\"seccionasignada\" required id=\"seccionasignada\" label=\"Seccion asignada\" defaultValue=\"\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"cargo\" id=\"cargo\" label=\"Cargo\" defaultValue=\"\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"apertura\" id=\"apertura\" label=\"Apertura\" defaultValue=\"\" />\n                        <TextField\n                            inputRef={register({ required: { value: false } })}\n                            name=\"horaapertura\"\n                            id=\"horaapertura\"\n                            label=\"Hora apertura\"\n                            type=\"datetime-local\"\n                            defaultValue=\"2021-01-31T10:30\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </div>\n                </div>\n\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Flujo de votantes\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"flujo1230pm\" id=\"flujo1230pm\" label=\"Flujo 12-30\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"promovidos1230pm\" id=\"promovidos1230pm\" label=\"Promovidos 12-30\" defaultValue=\"\" variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"flujo430pm\" id=\"flujo430pm\" label=\"Flujo 16-30\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"promovidos430pm\" id=\"promovidos430pm\" label=\"Promovidos 16-30\" defaultValue=\"\" variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"flujo6pm\" id=\"flujo6pm\" label=\"Flujo 18\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"promovidos6pm\" id=\"promovidos6pm\" label=\"Promovidos 18\" defaultValue=\"\" variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n                    </div>\n                </div>\n\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Cierre de casilla\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"cierre6pm\" id=\"cierre6pm\" label=\"Cierre 18\" defaultValue=\"\" variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n                        <TextField\n                            inputRef={register({ required: { value: false } })}\n                            name=\"horacierre\"\n                            id=\"horacierre\"\n                            label=\"Hora cierre\"\n                            type=\"datetime-local\"\n                            defaultValue=\"2021-01-31T10:30\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Representantes de casilla\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"rpp1\" id=\"rpp1\" label=\"Representante 1\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"rpp2\" id=\"rpp2\" label=\"Representante 2\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"rps1\" id=\"rps1\" label=\"Suplente 1\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Representantes de casilla\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"incidente\" id=\"incidente\" label=\"Incidente\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"nombre\" id=\"nombre\" label=\"Nombre\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"municipio\" id=\"municipio\" label=\"Municipio\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"localidad\" id=\"localidad\" label=\"Localidad\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"distrito\" id=\"distrito\" label=\"Distrito\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n                <button className=\"btn btn-primary\">Enviar</button>\n            </form>\n        </div >\n    );\n}\n\nexport default CreateCasilla","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/UpdateCasilla.jsx",["267","268"],"import React, { useEffect, useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useForm } from 'react-hook-form'\nimport { updateCasillaAccion, getCasillaAccion } from \"../../../redux/CasillasDucks\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n            border: \"\",\n        },\n    },\n}));\n\n\nconst UpdateCasilla = () => {\n    //Store y configuracion REDUX\n    const dispatch = useDispatch();\n    const casillas = useSelector((store) => store.casillas.array);\n    const reload = useSelector((store) => store.casillas.reload);\n\n    //Recibimos parametros\n    const { id } = useParams()\n\n    //casilla\n    const casilla = {\n        id: id,\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        casilla.id = id;\n        dispatch(getCasillaAccion(casilla));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        casilla.id = id;\n        dispatch(getCasillaAccion(casilla));\n    }\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Handle update\n    const handleupdate = (data) => {\n        dispatch(updateCasillaAccion(data));\n    };\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n    const onSubmit = (data, e) => {\n        handleupdate(data);\n        e.target.reset();\n    }\n\n    const classes = useStyles();\n\n    //Form\n    const imprimeForm = () => {\n        if (casillas.length !== 1) {\n            return (\n                <div>\n                    < h5 > Cargando... </h5 >\n                </div>\n            )\n        }\n        return (\n\n            < div >\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Link color=\"inherit\" href=\"/home\" >\n                        Home\n      \t\t\t</Link>\n                    <Link color=\"inherit\" href=\"/casillas\" >\n                        Casillas\n      \t\t\t</Link>\n                    <Link\n                        color=\"textPrimary\"\n                        href=\"/casillas/update\"\n                        onClick={handleClick}\n                        aria-current=\"page\"\n                    >\n                        Actualizar casilla\n      \t\t\t</Link>\n                </Breadcrumbs><br />\n\n                <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Actualizar casilla\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.idcasilla?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Id casilla\" } })} name=\"id\" required id=\"id\" label=\"id\" defaultValue={casillas[0].id} style={{ display: 'none' }} />\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.idrepresentantecasilla?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Representante obligatorio\" } })} name=\"idrepresentantecasilla\" required id=\"idrepresentantecasilla\" label=\"Representante de casilla\" defaultValue={casillas[0].idrepresentantecasilla} />\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.seccionasignada?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Seccion obligatoria\" } })} name=\"seccionasignada\" required id=\"seccionasignada\" label=\"Seccion asignada\" defaultValue={casillas[0].seccionasignada} />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"cargo\" id=\"cargo\" label=\"Cargo\" defaultValue={casillas[0].cargo} />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"apertura\" id=\"apertura\" label=\"Apertura\" defaultValue={casillas[0].apertura} />\n                            <TextField\n                                inputRef={register({ required: { value: false } })}\n                                name=\"horaapertura\"\n                                id=\"horaapertura\"\n                                label=\"Hora apertura\"\n                                type=\"datetime-local\"\n                                defaultValue={casillas[0].horaapertura}\n                                className={classes.textField}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Flujo de votantes\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"flujo1230pm\" id=\"flujo1230pm\" label=\"Flujo 12-30\" defaultValue={casillas[0].flujo1230pm} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"promovidos1230pm\" id=\"promovidos1230pm\" label=\"Promovidos 12-30\" defaultValue={casillas[0].promovidos1230pm} variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"flujo430pm\" id=\"flujo430pm\" label=\"Flujo 16-30\" defaultValue={casillas[0].flujo430pm} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"promovidos430pm\" id=\"promovidos430pm\" label=\"Promovidos 16-30\" defaultValue={casillas[0].promovidos430pm} variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"flujo6pm\" id=\"flujo6pm\" label=\"Flujo 18\" defaultValue={casillas[0].flujo6pm} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"promovidos6pm\" id=\"promovidos6pm\" label=\"Promovidos 18\" defaultValue={casillas[0].promovidos6pm} variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n                        </div>\n                    </div>\n\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Cierre de casilla\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"cierre6pm\" id=\"cierre6pm\" label=\"Cierre 18\" defaultValue={casillas[0].cierre6pm} variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n                            <TextField\n                                inputRef={register({ required: { value: false } })}\n                                name=\"horacierre\"\n                                id=\"horacierre\"\n                                label=\"Hora cierre\"\n                                type=\"datetime-local\"\n                                defaultValue={casillas[0].horacierre}\n                                className={classes.textField}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Representantes de casilla\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"rpp1\" id=\"rpp1\" label=\"Representante 1\" defaultValue={casillas[0].rpp1} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"rpp2\" id=\"rpp2\" label=\"Representante 2\" defaultValue={casillas[0].rpp2} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"rps1\" id=\"rps1\" label=\"Suplente 1\" defaultValue={casillas[0].rps1} variant=\"filled\" />\n                        </div>\n                    </div>\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Representantes de casilla\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"incidente\" id=\"incidente\" label=\"Incidente\" defaultValue={casillas[0].incidente} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"nombre\" id=\"nombre\" label=\"Nombre\" defaultValue={casillas[0].nombre} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"municipio\" id=\"municipio\" label=\"Municipio\" defaultValue={casillas[0].municipio} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"localidad\" id=\"localidad\" label=\"Localidad\" defaultValue={casillas[0].localidad} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"distrito\" id=\"distrito\" label=\"Distrito\" defaultValue={casillas[0].distrito} variant=\"filled\" />\n                        </div>\n                    </div>\n                    <button className=\"btn btn-primary\">Enviar</button>\n                </form>\n            </div >\n\n        )\n\n    }\n\n    return (\n        <div >\n            { imprimeForm()}\n        </div>\n    );\n}\n\nexport default UpdateCasilla","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones/CreateEleccion.jsx",["269"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useForm } from 'react-hook-form'\nimport { createEleccionesAccion } from \"../../../redux/EleccionesDucks\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n            border: \"\",\n        },\n    },\n}));\n\n//BreadCums\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\n\n\n\nconst CreateElecciones = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n\n    //Handle Create\n    const handleCreate = (eleccion) => {\n        dispatch(createEleccionesAccion(eleccion));\n    };\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n    const onSubmit = (data, e) => {\n        handleCreate(data);\n        // e.target.reset();\n    }\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link color=\"inherit\" href=\"/elecciones\" >\n                    Eleccioness\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/elecciones/create\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Crear eleccion\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Crear Eleccion\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.seccion?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Seccion obligatoria\" } })} name=\"seccion\" required id=\"seccion\" label=\"Seccion\" defaultValue=\"\" />\n                    </div>\n                </div>\n\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Partidos bloque 1\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pan\" id=\"pan\" label=\"Pan\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pri\" id=\"pri\" label=\"Pri\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"prd\" id=\"prd\" label=\"Prd\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pvem\" id=\"pvem\" label=\"Pvem\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pt\" id=\"pt\" label=\"PT\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Partidos bloque 2\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"movciudadano\" id=\"movciudadano\" label=\"Mov Ciudadano\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"nuevaalianza\" id=\"nuevaalianza\" label=\"Nueva Alianza\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"morena\" id=\"morena\" label=\"Morena\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"encuentrosocial\" id=\"encuentrosocial\" label=\"Encuentro Social\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"panprd\" id=\"panprd\" label=\"Pan-PRD\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Partidos bloque 3\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pripvemnuevaalianza\" id=\"pripvemnuevaalianza\" label=\"Pri-Pvem-Nueva Alianza\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pripvem\" id=\"pripvem\" label=\"Pri Pvem\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"prinuevaalianza\" id=\"prinuevaalianza\" label=\"Pri-Nueva Alianza\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pvemnuevaalianza\" id=\"pvemnuevaalianza\" label=\"Pvem-Nueva Alianza\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"candidatosnoregistrados\" id=\"candidatosnoregistrados\" label=\"Candidatos No Reg.\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Totales\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"nulos\" id=\"nulos\" label=\"Nulos\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"total\" id=\"total\" label=\"Total\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n                <button className=\"btn btn-primary\">Enviar</button>\n            </form>\n        </div >\n    );\n}\n\nexport default CreateElecciones","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones/UpdateEleccion.jsx",["270","271"],"import React, { useEffect, useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useForm } from 'react-hook-form'\nimport { updateEleccionesAccion, getEleccionesAccion } from \"../../../redux/EleccionesDucks\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n            border: \"\",\n        },\n    },\n}));\n\n\nconst UpdateElecciones = () => {\n    //Store y configuracion REDUX\n    const dispatch = useDispatch();\n    const elecciones = useSelector((store) => store.elecciones.array);\n    const reload = useSelector((store) => store.elecciones.reload);\n\n    //Recibimos parametros\n    const { id } = useParams()\n\n    //eleccion\n    const eleccion = {\n        id: id,\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        eleccion.id = id;\n        dispatch(getEleccionesAccion(eleccion));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        eleccion.id = id;\n        dispatch(getEleccionesAccion(eleccion));\n    }\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Handle update\n    const handleupdate = (data) => {\n        dispatch(updateEleccionesAccion(data));\n    };\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n    const onSubmit = (data, e) => {\n        handleupdate(data);\n        e.target.reset();\n    }\n\n    const classes = useStyles();\n\n    //Form\n    const imprimeForm = () => {\n        if (elecciones.length !== 1) {\n            return (\n                <div>\n                    < h5 > Cargando... </h5 >\n                </div>\n            )\n        }\n        return (\n\n            <div>\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Link color=\"inherit\" href=\"/home\" >\n                        Home\n      \t\t\t</Link>\n                    <Link color=\"inherit\" href=\"/elecciones\" >\n                        Eleccioness\n      \t\t\t</Link>\n                    <Link\n                        color=\"textPrimary\"\n                        href=\"/elecciones/create\"\n                        onClick={handleClick}\n                        aria-current=\"page\"\n                    >\n                        Actualizar eleccion\n      \t\t\t</Link>\n                </Breadcrumbs><br />\n\n                <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Actualizar Eleccion\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.id?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Id elecciones\" } })} name=\"id\" required id=\"id\" label=\"id\" defaultValue={elecciones[0].id} style={{ display: 'none' }} />\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.seccion?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Seccion obligatoria\" } })} name=\"seccion\" required id=\"seccion\" label=\"Seccion\" defaultValue={elecciones[0].seccion} />\n                        </div>\n                    </div>\n\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Partidos bloque 1\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pan\" id=\"pan\" label=\"Pan\" defaultValue={elecciones[0].pan} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pri\" id=\"pri\" label=\"Pri\" defaultValue={elecciones[0].pri} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"prd\" id=\"prd\" label=\"Prd\" defaultValue={elecciones[0].prd} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pvem\" id=\"pvem\" label=\"Pvem\" defaultValue={elecciones[0].pvem} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pt\" id=\"pt\" label=\"PT\" defaultValue={elecciones[0].pt} variant=\"filled\" />\n                        </div>\n                    </div>\n\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Partidos bloque 2\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"movciudadano\" id=\"movciudadano\" label=\"Mov Ciudadano\" defaultValue={elecciones[0].movciudadano} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"nuevaalianza\" id=\"nuevaalianza\" label=\"Nueva Alianza\" defaultValue={elecciones[0].nuevaalianza} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"morena\" id=\"morena\" label=\"Morena\" defaultValue={elecciones[0].morena} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"encuentrosocial\" id=\"encuentrosocial\" label=\"Encuentro Social\" defaultValue={elecciones[0].encuentrosocial} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"panprd\" id=\"panprd\" label=\"Pan-PRD\" defaultValue={elecciones[0].panprd} variant=\"filled\" />\n                        </div>\n                    </div>\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Partidos bloque 3\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pripvemnuevaalianza\" id=\"pripvemnuevaalianza\" label=\"Pri-Pvem-Nueva Alianza\" defaultValue={elecciones[0].pripvemnuevaalianza} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pripvem\" id=\"pripvem\" label=\"Pri Pvem\" defaultValue={elecciones[0].pripvem} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"prinuevaalianza\" id=\"prinuevaalianza\" label=\"Pri-Nueva Alianza\" defaultValue={elecciones[0].prinuevaalianza} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pvemnuevaalianza\" id=\"pvemnuevaalianza\" label=\"Pvem-Nueva Alianza\" defaultValue={elecciones[0].pvemnuevaalianza} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"candidatosnoregistrados\" id=\"candidatosnoregistrados\" label=\"Candidatos No Reg.\" defaultValue={elecciones[0].candidatosnoregistrados} variant=\"filled\" />\n                        </div>\n                    </div>\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Totales\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"nulos\" id=\"nulos\" label=\"Nulos\" defaultValue={elecciones[0].nulos} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"total\" id=\"total\" label=\"Total\" defaultValue={elecciones[0].total} variant=\"filled\" />\n                        </div>\n                    </div>\n                    <button className=\"btn btn-primary\">Enviar</button>\n                </form>\n            </div >\n\n        )\n\n    }\n\n    return (\n        <div >\n            { imprimeForm()}\n        </div>\n    );\n}\n\nexport default UpdateElecciones","/home/node/aplicacion/mdc-softare-frontend/src/components/ListIcons.jsx",["272","273","274"],"/home/node/aplicacion/mdc-softare-frontend/src/components/charts/PieChart.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MenuButtonListCpt.jsx",["275"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useHistory } from \"react-router-dom\";\n\nconst MenuButtonListCpt = (props) => {\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\tconst history = useHistory();\n\n\tconst handleClick = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleAction = (path) => {\n\t\thistory.push(path);\n\t\thandleClose();\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n\t\t\t\tMenu\n\t\t\t</Button>\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tprops.acciones.map(function (item, index) {\n\t\t\t\t\t\tif (item.action === \"get\") {\n\t\t\t\t\t\t\treturn <MenuItem key={index} onClick={() => handleAction(item.path)} > {item.title}</MenuItem>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (item.action === \"create\") {\n\t\t\t\t\t\t\treturn <MenuItem key={index} onClick={() => handleAction(item.path)} > {item.title}</MenuItem>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (item.action === \"update\") {\n\t\t\t\t\t\t\treturn <MenuItem key={index} onClick={() => handleAction(item.path)} > {item.title}</MenuItem>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (item.action === \"delete\") {\n\t\t\t\t\t\t\treturn <MenuItem key={index} onClick={() => item.handle(item.rowdata)}>{item.title}</MenuItem>;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t<MenuItem key=\"id-close\" onClick={handleClose}>cerrar</MenuItem>\n\t\t\t</Menu>\n\t\t</div >\n\t);\n}\n\nexport default MenuButtonListCpt\n","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/DataGridCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableEditableCpt.jsx",["276","277"],"import React from 'react'\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from '@material-ui/core'\n\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\n\nconst styles = makeStyles(theme => ({\n    root: {\n        width: \"100%\",\n        marginTop: theme.spacing(3),\n        overflowX: \"auto\"\n    },\n    table: {\n        width: \"100%\",\n        minWidth: 700\n    }\n\n}))\nconst MaterialTableEditableCpt = (props) => {\n    const classes = styles()\n    const { useState } = React;\n    const [data, setData] = useState(props.data);\n    return (\n\n        <div style={{ height: 400, width: '70%' }}>\n            <MaterialTable\n                title=\"Gestion de promovidos\"\n                columns={props.columns}\n                icons={tableIcons}\n                options={{\n                    sorting: true\n                }}\n                data={props.data}\n                options={{\n                    rowStyle: {\n                        fontSize: 12,\n                    },\n                }}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                props.handleCreate(newData);\n                                setData([...data, newData]);\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                props.handleUpdate(newData);\n                                setData([...dataUpdate]);\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                props.handleDelete(oldData);\n                                setData([...dataDelete]);\n                                resolve()\n                            }, 1000)\n                        }),\n                }}\n            />\n        </div>\n\n    )\n}\n\nexport default MaterialTableEditableCpt","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/PolarChart.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/charts/MultiAxisChart.jsx",["278","279"],"import React from 'react';\nimport { Chart } from 'primereact/chart';\n\nconst MultiAxis = (props) => {\n    const multiAxisData = {\n        labels: props.tags,\n        datasets: [{\n            label: props.label,\n            backgroundColor: props.colors,\n            yAxisID: 'y-axis-1',\n            data: props.data\n        }]\n    };\n\n    const getLightTheme = () => {\n        let basicOptions = {\n            legend: {\n                labels: {\n                    fontColor: '#495057'\n                }\n            },\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        fontColor: '#495057'\n                    }\n                }],\n                yAxes: [{\n                    ticks: {\n                        fontColor: '#495057'\n                    }\n                }]\n            }\n        };\n\n        let stackedOptions = {\n            tooltips: {\n                mode: 'index',\n                intersect: false\n            },\n            responsive: true,\n            scales: {\n                xAxes: [{\n                    stacked: true,\n                    ticks: {\n                        fontColor: '#495057'\n                    },\n                    gridLines: {\n                        color: '#ebedef'\n                    }\n                }],\n                yAxes: [{\n                    stacked: true,\n                    ticks: {\n                        fontColor: '#495057'\n                    },\n                    gridLines: {\n                        color: '#ebedef'\n                    }\n                }]\n            },\n            legend: {\n                labels: {\n                    fontColor: '#495057'\n                }\n            }\n        };\n\n        let multiAxisOptions = {\n            responsive: true,\n            tooltips: {\n                mode: 'index',\n                intersect: true\n            },\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        fontColor: '#495057'\n                    },\n                    gridLines: {\n                        color: '#ebedef'\n                    }\n                }],\n                yAxes: [{\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    id: 'y-axis-1',\n                    ticks: {\n                        min: 0,\n                        max: Math.max.apply(null, props.data),\n                        fontColor: '#495057'\n                    },\n                    gridLines: {\n                        color: '#ebedef'\n                    }\n                },\n                {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    id: 'y-axis-2',\n                    gridLines: {\n                        drawOnChartArea: false,\n                        color: '#ebedef'\n                    },\n                    ticks: {\n                        min: 0,\n                        max: Math.max.apply(null, props.data),\n                        fontColor: '#495057'\n                    }\n                }]\n            },\n            legend: {\n                labels: {\n                    fontColor: '#495057'\n                }\n            }\n        };\n\n        return {\n            basicOptions,\n            stackedOptions,\n            multiAxisOptions\n        }\n    }\n\n    const { basicOptions, multiAxisOptions, stackedOptions } = getLightTheme();\n\n    return (\n        <div>\n            <div className=\"card\">\n                <Chart type=\"bar\" data={multiAxisData} options={multiAxisOptions} />\n            </div>\n        </div>\n    )\n}\n\nexport default MultiAxis","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/HorizontalChart.jsx",["280","281"],"\nimport React from 'react';\nimport { Chart } from 'primereact/chart';\n\nconst BarChartDemo = (props) => {\n    const novotados = props.meta;\n    const votados = props.votados;\n\n    const basicData = {\n        labels: ['Total votos:'],\n        datasets: [\n            {\n                label: props.votados,\n                backgroundColor: \"#81C784\",\n                data: [props.votados]\n            },\n            {\n                label: [props.meta - props.votados],\n                backgroundColor: \"#ba000d\",\n                data: [props.meta - props.votados]\n            }\n        ]\n    };\n\n\n\n    const getLightTheme = () => {\n        let basicOptions = {\n            legend: {\n                labels: {\n                    fontColor: '#495057'\n                }\n            },\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        fontColor: '#495057'\n                    }\n                }],\n                yAxes: [{\n                    ticks: {\n                        fontColor: '#495057'\n                    }\n                }]\n            }\n        };\n\n        let stackedOptions = {\n            tooltips: {\n                mode: 'index',\n                intersect: false\n            },\n            responsive: true,\n            scales: {\n                xAxes: [{\n                    stacked: true,\n                    ticks: {\n                        fontColor: '#495057'\n                    },\n                    gridLines: {\n                        color: '#ebedef'\n                    }\n                }],\n                yAxes: [{\n                    stacked: true,\n                    ticks: {\n                        fontColor: '#495057'\n                    },\n                    gridLines: {\n                        color: '#ebedef'\n                    }\n                }]\n            },\n            legend: {\n                labels: {\n                    fontColor: '#495057'\n                }\n            }\n        };\n\n        let multiAxisOptions = {\n            responsive: true,\n            tooltips: {\n                mode: 'index',\n                intersect: true\n            },\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        fontColor: '#495057'\n                    },\n                    gridLines: {\n                        color: '#ebedef'\n                    }\n                }],\n                yAxes: [{\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    id: 'y-axis-1',\n                    ticks: {\n                        min: 0,\n                        max: Math.max(props.meta, props.votados),\n                        fontColor: '#495057'\n                    },\n                    gridLines: {\n                        color: '#ebedef'\n                    }\n                },\n                {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    id: 'y-axis-2',\n                    gridLines: {\n                        drawOnChartArea: false,\n                        color: '#ebedef'\n                    },\n                    ticks: {\n                        min: 0,\n                        max: Math.max(props.meta, props.votados),\n                        fontColor: '#495057'\n                    }\n                }]\n            },\n            legend: {\n                labels: {\n                    fontColor: '#495057'\n                }\n            }\n        };\n\n        return {\n            basicOptions,\n            stackedOptions,\n            multiAxisOptions\n        }\n    }\n\n    const { basicOptions } = getLightTheme();\n\n    return (\n        <div>\n            <div className=\"card\">\n                <h1>{props.tag}{props.meta}</h1>\n                <Chart type=\"horizontalBar\" data={basicData} options={basicOptions} />\n            </div>\n        </div>\n    )\n}\n\nexport default BarChartDemo","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/ComboChart.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ReportesRgs.jsx",["282"],"import React, { useEffect } from \"react\";\nimport { obtenerReportesRgsAccion } from \"../../redux/ReportesRgsDucks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nconst ReportesRgs = () => {\n    //Configuraciones iniciales\n    const dispatch = useDispatch();\n    const reportesRgs = useSelector((store) => store.reportesRgs.array);\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerReportesRgsAccion());\n    }, []);\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDREPORTESRGS\",\n            width: 180,\n        },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 180,\n        },\n        {\n            field: \"idlistanom\",\n            headerName: \"IDLISTANOM\",\n            width: 180,\n        },\n        {\n            field: \"puesto\",\n            headerName: \"PUESTO\",\n            width: 180,\n        },\n        {\n            field: \"nombre\",\n            headerName: \"NOMBRE\",\n            width: 180,\n        },\n        {\n            field: \"telefono\",\n            headerName: \"TELEFONO\",\n            width: 180,\n        },\n        {\n            field: \"claveelector\",\n            headerName: \"CLAVEELECTOR\",\n            width: 180,\n        },\n        {\n            field: \"observaciones\",\n            headerName: \"OBSERVACIONES\",\n            width: 180,\n        }\n    ];\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Reportes rgs\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <DataGridCpt columns={columns} actArray={reportesRgs} />\n        </div >\n    )\n}\n\nexport default ReportesRgs","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasPorRolDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasTotalSeccionDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasEstructuraDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Progreso.jsx",["283","284","285"],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":10,"column":8,"nodeType":"292","messageId":"293","endLine":10,"endColumn":16},{"ruleId":"290","severity":1,"message":"294","line":11,"column":8,"nodeType":"292","messageId":"293","endLine":11,"endColumn":26},{"ruleId":"290","severity":1,"message":"295","line":12,"column":8,"nodeType":"292","messageId":"293","endLine":12,"endColumn":19},{"ruleId":"290","severity":1,"message":"296","line":119,"column":9,"nodeType":"292","messageId":"293","endLine":119,"endColumn":12},{"ruleId":"290","severity":1,"message":"296","line":197,"column":9,"nodeType":"292","messageId":"293","endLine":197,"endColumn":12},{"ruleId":"290","severity":1,"message":"296","line":276,"column":9,"nodeType":"292","messageId":"293","endLine":276,"endColumn":12},{"ruleId":"290","severity":1,"message":"296","line":343,"column":9,"nodeType":"292","messageId":"293","endLine":343,"endColumn":12},{"ruleId":"297","severity":1,"message":"298","line":56,"column":23,"nodeType":"299","messageId":"300","endLine":56,"endColumn":24},{"ruleId":"301","severity":1,"message":"302","line":61,"column":104,"nodeType":"303","messageId":"304","endLine":61,"endColumn":106},{"ruleId":"290","severity":1,"message":"305","line":1,"column":28,"nodeType":"292","messageId":"293","endLine":1,"endColumn":37},{"ruleId":"290","severity":1,"message":"306","line":11,"column":10,"nodeType":"292","messageId":"293","endLine":11,"endColumn":30},{"ruleId":"290","severity":1,"message":"307","line":12,"column":10,"nodeType":"292","messageId":"293","endLine":12,"endColumn":37},{"ruleId":"290","severity":1,"message":"308","line":13,"column":10,"nodeType":"292","messageId":"293","endLine":13,"endColumn":39},{"ruleId":"290","severity":1,"message":"309","line":20,"column":8,"nodeType":"292","messageId":"293","endLine":20,"endColumn":19},{"ruleId":"290","severity":1,"message":"310","line":22,"column":8,"nodeType":"292","messageId":"293","endLine":22,"endColumn":19},{"ruleId":"311","severity":1,"message":"312","line":53,"column":8,"nodeType":"313","endLine":53,"endColumn":10,"suggestions":"314"},{"ruleId":"315","severity":1,"message":"316","line":57,"column":28,"nodeType":"317","messageId":"318","endLine":57,"endColumn":30},{"ruleId":"315","severity":1,"message":"316","line":65,"column":28,"nodeType":"317","messageId":"318","endLine":65,"endColumn":30},{"ruleId":"315","severity":1,"message":"316","line":74,"column":25,"nodeType":"317","messageId":"318","endLine":74,"endColumn":27},{"ruleId":"315","severity":1,"message":"316","line":82,"column":25,"nodeType":"317","messageId":"318","endLine":82,"endColumn":27},{"ruleId":"315","severity":1,"message":"316","line":91,"column":25,"nodeType":"317","messageId":"318","endLine":91,"endColumn":27},{"ruleId":"315","severity":1,"message":"316","line":102,"column":23,"nodeType":"317","messageId":"318","endLine":102,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":110,"column":23,"nodeType":"317","messageId":"318","endLine":110,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":119,"column":23,"nodeType":"317","messageId":"318","endLine":119,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":130,"column":26,"nodeType":"317","messageId":"318","endLine":130,"endColumn":28},{"ruleId":"315","severity":1,"message":"316","line":138,"column":26,"nodeType":"317","messageId":"318","endLine":138,"endColumn":28},{"ruleId":"315","severity":1,"message":"316","line":147,"column":26,"nodeType":"317","messageId":"318","endLine":147,"endColumn":28},{"ruleId":"311","severity":1,"message":"319","line":35,"column":5,"nodeType":"313","endLine":35,"endColumn":7,"suggestions":"320"},{"ruleId":"290","severity":1,"message":"321","line":9,"column":8,"nodeType":"292","messageId":"293","endLine":9,"endColumn":25},{"ruleId":"290","severity":1,"message":"322","line":19,"column":11,"nodeType":"292","messageId":"293","endLine":19,"endColumn":17},{"ruleId":"311","severity":1,"message":"319","line":40,"column":8,"nodeType":"313","endLine":40,"endColumn":10,"suggestions":"323"},{"ruleId":"290","severity":1,"message":"305","line":1,"column":28,"nodeType":"292","messageId":"293","endLine":1,"endColumn":37},{"ruleId":"324","severity":1,"message":"325","line":40,"column":9,"nodeType":"326","messageId":"327","endLine":43,"endColumn":19},{"ruleId":"324","severity":1,"message":"325","line":45,"column":9,"nodeType":"328","messageId":"327","endLine":50,"endColumn":19},{"ruleId":"324","severity":1,"message":"325","line":52,"column":9,"nodeType":"328","messageId":"327","endLine":52,"endColumn":47},{"ruleId":"311","severity":1,"message":"312","line":53,"column":8,"nodeType":"313","endLine":53,"endColumn":10,"suggestions":"329"},{"ruleId":"315","severity":1,"message":"316","line":58,"column":25,"nodeType":"317","messageId":"318","endLine":58,"endColumn":27},{"ruleId":"315","severity":1,"message":"316","line":66,"column":25,"nodeType":"317","messageId":"318","endLine":66,"endColumn":27},{"ruleId":"315","severity":1,"message":"316","line":75,"column":25,"nodeType":"317","messageId":"318","endLine":75,"endColumn":27},{"ruleId":"315","severity":1,"message":"316","line":86,"column":23,"nodeType":"317","messageId":"318","endLine":86,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":94,"column":23,"nodeType":"317","messageId":"318","endLine":94,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":103,"column":23,"nodeType":"317","messageId":"318","endLine":103,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":114,"column":26,"nodeType":"317","messageId":"318","endLine":114,"endColumn":28},{"ruleId":"315","severity":1,"message":"316","line":122,"column":26,"nodeType":"317","messageId":"318","endLine":122,"endColumn":28},{"ruleId":"315","severity":1,"message":"316","line":131,"column":26,"nodeType":"317","messageId":"318","endLine":131,"endColumn":28},{"ruleId":"311","severity":1,"message":"330","line":49,"column":8,"nodeType":"313","endLine":49,"endColumn":10,"suggestions":"331"},{"ruleId":"290","severity":1,"message":"332","line":1,"column":28,"nodeType":"292","messageId":"293","endLine":1,"endColumn":36},{"ruleId":"290","severity":1,"message":"333","line":4,"column":5,"nodeType":"292","messageId":"293","endLine":4,"endColumn":21},{"ruleId":"311","severity":1,"message":"319","line":53,"column":8,"nodeType":"313","endLine":53,"endColumn":10,"suggestions":"334"},{"ruleId":"311","severity":1,"message":"312","line":166,"column":8,"nodeType":"313","endLine":166,"endColumn":10,"suggestions":"335"},{"ruleId":"311","severity":1,"message":"336","line":42,"column":8,"nodeType":"313","endLine":42,"endColumn":10,"suggestions":"337"},{"ruleId":"290","severity":1,"message":"338","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"290","severity":1,"message":"339","line":7,"column":8,"nodeType":"292","messageId":"293","endLine":7,"endColumn":24},{"ruleId":"290","severity":1,"message":"340","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":16},{"ruleId":"290","severity":1,"message":"341","line":10,"column":8,"nodeType":"292","messageId":"293","endLine":10,"endColumn":12},{"ruleId":"290","severity":1,"message":"342","line":55,"column":11,"nodeType":"292","messageId":"293","endLine":55,"endColumn":21},{"ruleId":"290","severity":1,"message":"343","line":56,"column":11,"nodeType":"292","messageId":"293","endLine":56,"endColumn":17},{"ruleId":"290","severity":1,"message":"333","line":4,"column":42,"nodeType":"292","messageId":"293","endLine":4,"endColumn":58},{"ruleId":"311","severity":1,"message":"344","line":36,"column":5,"nodeType":"313","endLine":36,"endColumn":7,"suggestions":"345"},{"ruleId":"315","severity":1,"message":"316","line":42,"column":9,"nodeType":"317","messageId":"318","endLine":42,"endColumn":11},{"ruleId":"290","severity":1,"message":"346","line":3,"column":23,"nodeType":"292","messageId":"293","endLine":3,"endColumn":34},{"ruleId":"290","severity":1,"message":"332","line":1,"column":28,"nodeType":"292","messageId":"293","endLine":1,"endColumn":36},{"ruleId":"311","severity":1,"message":"347","line":41,"column":8,"nodeType":"313","endLine":41,"endColumn":10,"suggestions":"348"},{"ruleId":"290","severity":1,"message":"346","line":3,"column":23,"nodeType":"292","messageId":"293","endLine":3,"endColumn":34},{"ruleId":"290","severity":1,"message":"332","line":1,"column":28,"nodeType":"292","messageId":"293","endLine":1,"endColumn":36},{"ruleId":"311","severity":1,"message":"349","line":41,"column":8,"nodeType":"313","endLine":41,"endColumn":10,"suggestions":"350"},{"ruleId":"290","severity":1,"message":"351","line":4,"column":28,"nodeType":"292","messageId":"293","endLine":4,"endColumn":36},{"ruleId":"290","severity":1,"message":"352","line":4,"column":54,"nodeType":"292","messageId":"293","endLine":4,"endColumn":59},{"ruleId":"290","severity":1,"message":"353","line":4,"column":61,"nodeType":"292","messageId":"293","endLine":4,"endColumn":71},{"ruleId":"315","severity":1,"message":"354","line":37,"column":25,"nodeType":"355","messageId":"356","endLine":37,"endColumn":34},{"ruleId":"290","severity":1,"message":"357","line":58,"column":11,"nodeType":"292","messageId":"293","endLine":58,"endColumn":18},{"ruleId":"358","severity":1,"message":"359","line":72,"column":17,"nodeType":"360","endLine":76,"endColumn":19},{"ruleId":"290","severity":1,"message":"361","line":128,"column":13,"nodeType":"292","messageId":"293","endLine":128,"endColumn":25},{"ruleId":"290","severity":1,"message":"362","line":128,"column":45,"nodeType":"292","messageId":"293","endLine":128,"endColumn":59},{"ruleId":"290","severity":1,"message":"363","line":6,"column":11,"nodeType":"292","messageId":"293","endLine":6,"endColumn":20},{"ruleId":"290","severity":1,"message":"364","line":7,"column":11,"nodeType":"292","messageId":"293","endLine":7,"endColumn":18},{"ruleId":"311","severity":1,"message":"312","line":22,"column":8,"nodeType":"313","endLine":22,"endColumn":10,"suggestions":"365"},{"ruleId":"290","severity":1,"message":"305","line":1,"column":28,"nodeType":"292","messageId":"293","endLine":1,"endColumn":37},{"ruleId":"311","severity":1,"message":"312","line":45,"column":8,"nodeType":"313","endLine":45,"endColumn":10,"suggestions":"366"},{"ruleId":"315","severity":1,"message":"316","line":51,"column":18,"nodeType":"317","messageId":"318","endLine":51,"endColumn":20},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"no-unused-vars","'Graficas' is defined but never used.","Identifier","unusedVar","'IncidentesCasillas' is defined but never used.","'ReportesRgs' is defined but never used.","'res' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Component' is defined but never used.","'getGraficasRolAccion' is defined but never used.","'getGraficasEstructuraAccion' is defined but never used.","'getGraficasTotalSeccionAccion' is defined but never used.","'Thermometer' is defined but never used.","'DataGridCpt' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["369"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'dispatch' and 'persona'. Either include them or remove the dependency array.",["370"],"'MenuButtonListCpt' is defined but never used.","'modelo' is assigned a value but never used.",["371"],"no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","ReturnStatement",["372"],"React Hook useEffect has missing dependencies: 'casilla' and 'dispatch'. Either include them or remove the dependency array.",["373"],"'useState' is defined but never used.","'updateVotoAccion' is defined but never used.",["374"],["375"],"React Hook useEffect has missing dependencies: 'dispatch' and 'eleccion'. Either include them or remove the dependency array.",["376"],"'Fragment' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Grid' is defined but never used.","'loginRedux' is assigned a value but never used.","'reload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'persona'. Either include them or remove the dependency array.",["377"],"'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'casilla', 'dispatch', and 'id'. Either include them or remove the dependency array.",["378"],"React Hook useEffect has missing dependencies: 'dispatch', 'eleccion', and 'id'. Either include them or remove the dependency array.",["379"],"'BarChart' is defined but never used.","'Error' is defined but never used.","'FindInPage' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'classes' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'basicOptions' is assigned a value but never used.","'stackedOptions' is assigned a value but never used.","'novotados' is assigned a value but never used.","'votados' is assigned a value but never used.",["380"],["381"],"no-global-assign","no-unsafe-negation",{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"384","fix":"386"},{"desc":"382","fix":"387"},{"desc":"388","fix":"389"},{"desc":"384","fix":"390"},{"desc":"382","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"382","fix":"400"},{"desc":"382","fix":"401"},"Update the dependencies array to be: [dispatch]",{"range":"402","text":"403"},"Update the dependencies array to be: [dispatch, persona]",{"range":"404","text":"405"},{"range":"406","text":"405"},{"range":"407","text":"403"},"Update the dependencies array to be: [casilla, dispatch]",{"range":"408","text":"409"},{"range":"410","text":"405"},{"range":"411","text":"403"},"Update the dependencies array to be: [dispatch, eleccion]",{"range":"412","text":"413"},"Update the dependencies array to be: [dispatch, id, persona]",{"range":"414","text":"415"},"Update the dependencies array to be: [casilla, dispatch, id]",{"range":"416","text":"417"},"Update the dependencies array to be: [dispatch, eleccion, id]",{"range":"418","text":"419"},{"range":"420","text":"403"},{"range":"421","text":"403"},[1931,1933],"[dispatch]",[1080,1082],"[dispatch, persona]",[1495,1497],[1667,1669],[1328,1330],"[casilla, dispatch]",[1521,1523],[4054,4056],[1228,1230],"[dispatch, eleccion]",[1029,1031],"[dispatch, id, persona]",[1174,1176],"[casilla, dispatch, id]",[1198,1200],"[dispatch, eleccion, id]",[733,735],[1467,1469]]