[{"/home/node/aplicacion/mdc-softare-frontend/src/index.js":"1","/home/node/aplicacion/mdc-softare-frontend/src/App.jsx":"2","/home/node/aplicacion/mdc-softare-frontend/src/themeConfig.js":"3","/home/node/aplicacion/mdc-softare-frontend/src/redux/store.js":"4","/home/node/aplicacion/mdc-softare-frontend/src/components/Container.jsx":"5","/home/node/aplicacion/mdc-softare-frontend/src/redux/CasillasDucks.js":"6","/home/node/aplicacion/mdc-softare-frontend/src/redux/PersonaActivistaDucks.js":"7","/home/node/aplicacion/mdc-softare-frontend/src/redux/InfoAdicionalCasillasDucks.js":"8","/home/node/aplicacion/mdc-softare-frontend/src/redux/ReportesRgsDucks.js":"9","/home/node/aplicacion/mdc-softare-frontend/src/redux/EleccionesDucks.js":"10","/home/node/aplicacion/mdc-softare-frontend/src/components/DrawerCustom.jsx":"11","/home/node/aplicacion/mdc-softare-frontend/src/components/Navbar.jsx":"12","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Home.jsx":"13","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas.jsx":"14","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ReportesRgs.jsx":"15","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Graficas.jsx":"16","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/IncidentesCasillas.jsx":"17","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones.jsx":"18","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos.jsx":"19","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos/PromovidoDetalle.jsx":"20","/home/node/aplicacion/mdc-softare-frontend/src/components/ListIcons.jsx":"21","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/DataGridCpt.jsx":"22","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/ContextMenuCpt.jsx":"23","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/AccordionCpt.jsx":"24","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCpt.jsx":"25","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/PieChart.jsx":"26","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MenuButtonListCpt.jsx":"27","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCrudCpt.jsx":"28","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/CreateCasilla.jsx":"29","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/UpdateCasilla.jsx":"30","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones/CreateEleccion.jsx":"31","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones/UpdateEleccion.jsx":"32","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/ComboChart.jsx":"33","/home/node/aplicacion/mdc-softare-frontend/src/redux/VotosHoraDucks.js":"34"},{"size":217,"mtime":1611516282426,"results":"35","hashOfConfig":"36"},{"size":492,"mtime":1613872164623,"results":"37","hashOfConfig":"36"},{"size":311,"mtime":1611550280894,"results":"38","hashOfConfig":"36"},{"size":954,"mtime":1614705199293,"results":"39","hashOfConfig":"36"},{"size":3723,"mtime":1614705199293,"results":"40","hashOfConfig":"36"},{"size":7481,"mtime":1614232257265,"results":"41","hashOfConfig":"36"},{"size":3508,"mtime":1614300814100,"results":"42","hashOfConfig":"36"},{"size":3450,"mtime":1612025334489,"results":"43","hashOfConfig":"36"},{"size":2034,"mtime":1612133676311,"results":"44","hashOfConfig":"36"},{"size":8822,"mtime":1614235441483,"results":"45","hashOfConfig":"36"},{"size":997,"mtime":1612148591425,"results":"46","hashOfConfig":"36"},{"size":1473,"mtime":1615038801358,"results":"47","hashOfConfig":"36"},{"size":1598,"mtime":1614317995974,"results":"48","hashOfConfig":"36"},{"size":6767,"mtime":1615038265527,"results":"49","hashOfConfig":"36"},{"size":2266,"mtime":1614014471415,"results":"50","hashOfConfig":"36"},{"size":6085,"mtime":1614014471415,"results":"51","hashOfConfig":"36"},{"size":4658,"mtime":1614014471415,"results":"52","hashOfConfig":"36"},{"size":6461,"mtime":1615038273587,"results":"53","hashOfConfig":"36"},{"size":4236,"mtime":1614313200753,"results":"54","hashOfConfig":"36"},{"size":4006,"mtime":1614300712939,"results":"55","hashOfConfig":"36"},{"size":4659,"mtime":1614047562437,"results":"56","hashOfConfig":"36"},{"size":985,"mtime":1614014471415,"results":"57","hashOfConfig":"36"},{"size":2145,"mtime":1614308323393,"results":"58","hashOfConfig":"36"},{"size":3836,"mtime":1613891645340,"results":"59","hashOfConfig":"36"},{"size":683,"mtime":1614146911871,"results":"60","hashOfConfig":"36"},{"size":930,"mtime":1614308146758,"results":"61","hashOfConfig":"36"},{"size":1604,"mtime":1615222144806,"results":"62","hashOfConfig":"36"},{"size":1894,"mtime":1614146930379,"results":"63","hashOfConfig":"36"},{"size":8431,"mtime":1614279590230,"results":"64","hashOfConfig":"36"},{"size":10484,"mtime":1614279556081,"results":"65","hashOfConfig":"36"},{"size":6796,"mtime":1614279580161,"results":"66","hashOfConfig":"36"},{"size":8751,"mtime":1614705199293,"results":"67","hashOfConfig":"36"},{"size":1370,"mtime":1615222115510,"results":"68","hashOfConfig":"36"},{"size":1082,"mtime":1614313053594,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1wh7eu1",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/home/node/aplicacion/mdc-softare-frontend/src/index.js",[],["152","153"],"/home/node/aplicacion/mdc-softare-frontend/src/App.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/themeConfig.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/store.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/Container.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/CasillasDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/PersonaActivistaDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/InfoAdicionalCasillasDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/ReportesRgsDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/EleccionesDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/DrawerCustom.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/Navbar.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Home.jsx",["154","155","156","157","158"],"import React, { useEffect, Component } from \"react\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Link from '@material-ui/core/Link';\nimport { getVotosHoraAccion } from \"../../redux/VotosHoraDucks\";\nimport ComboChart from '../charts/ComboChart';\n\n//BreadCums\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const votoshora = useSelector((store) => store.votosHora.array);\n    const reload = useSelector((store) => store.votosHora.reload);\n\n    useEffect(() => {\n        const id = setInterval(() => {\n            dispatch(getVotosHoraAccion());\n\n        }, 30000);\n\n        return () => clearInterval(id);\n    }, []);\n\n\n    const getHoras = () => {\n        const horas = [];\n        votoshora.map(item => {\n            horas.push(item.hora)\n        });\n        return horas;\n    }\n\n    const getVotos = () => {\n        const votos = [];\n        votoshora.map(item => {\n            votos.push(item.votos)\n        });\n        return votos;\n    }\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/home\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Home\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <ComboChart horas={getHoras()} votos={getVotos()} />\n        </div>\n    )\n}\n\nexport default Home\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas.jsx",["159"],"import React, { useEffect } from \"react\";\nimport {\n    getCasillaAccion, createCasillaAccion,\n    updateCasillaAccion, deleteCasillaAccion\n} from \"../../redux/CasillasDucks\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MenuButtonListCpt from '../utils/MenuButtonListCpt';\n\nconst Casillas = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n    const casillas = useSelector((store) => store.casillas.array);\n    const reload = useSelector((store) => store.casillas.reload);\n\n    //Nombre modelo\n    const modelo = \"casillas\";\n\n    //Acciones repository    \n    const handleCreate = (casilla) => {\n        dispatch(createCasillaAccion(casilla));\n    };\n\n    const handleUpdate = (casilla) => {\n        dispatch(updateCasillaAccion(casilla));\n    };\n\n    const handleDelete = (casilla) => {\n        dispatch(deleteCasillaAccion(casilla));\n    };\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Casilla\n    const casilla = {\n        id: \"\",\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(getCasillaAccion(casilla));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        dispatch(getCasillaAccion(casilla));\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"ID\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"actions\",\n            headerName: \"ACCIONES\",\n            width: 140,\n            disableClickEventBubbling: true,\n            renderCell: (params: CellParams) => {\n                const api: GridApi = params.api;\n                const fields = api\n                    .getAllColumns()\n                    .map((c) => c.field)\n                    .filter((c) => c !== \"__check__\" && !!c);\n                const thisRow = {};\n\n                fields.forEach((f) => {\n                    thisRow[f] = params.getValue(f);\n                });\n\n                const acciones = [\n                    // {\n                    //     id: thisRow.id,\n                    //     action: \"get\",\n                    //     title: \"ver\",\n                    //     handle: null,\n                    //     rowdata: thisRow,\n                    //     path: `/${modelo}/get/${thisRow.id}`,\n                    // },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"create\",\n                        title: \"crear\",\n                        handle: handleCreate,\n                        rowdata: thisRow,\n                        path: `${modelo}/create`\n                    },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"update\",\n                        title: \"actualizar\",\n                        handle: handleUpdate,\n                        rowdata: thisRow,\n                        path: `${modelo}/update/${thisRow.id}`\n                    },\n                    // {\n                    //     id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                    //     action: \"delete\",\n                    //     title: \"eliminar\",\n                    //     handle: handleDelete,\n                    //     rowdata: thisRow,\n                    //     path: `${modelo}`\n                    // },\n\n                ]\n                return <MenuButtonListCpt acciones={acciones} create={handleCreate} actualizar={handleUpdate} delete={handleDelete} />\n            },\n        },\n        {\n            field: \"idrepresentantecasilla\",\n            headerName: \"IDREPRESENTANTECASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccionasignada\",\n            headerName: \"SECCIONASIGNADA\",\n            width: 180,\n        },\n        {\n            field: \"cargo\",\n            headerName: \"CARGO\",\n            width: 180,\n        },\n        {\n            field: \"apertura\",\n            headerName: \"APERTURA\",\n            width: 180,\n        },\n        {\n            field: \"horaapertura\",\n            headerName: \"HORAAPERTURA\",\n            width: 180,\n        },\n        {\n            field: \"flujo1230pm\",\n            headerName: \"FLUJO1230PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos1230pm\",\n            headerName: \"PROMOVIDOS1230PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo430pm\",\n            headerName: \"FLUJO430PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos430pm\",\n            headerName: \"PROMOVIDOS430PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo6pm\",\n            headerName: \"FLUJO6PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos6pm\",\n            headerName: \"PROMOVIDOS6PM\",\n            width: 180,\n        },\n        {\n            field: \"cierre6pm\",\n            headerName: \"CIERRE6PM\",\n            width: 180,\n        },\n        {\n            field: \"horacierre\",\n            headerName: \"HORACIERRE\",\n            width: 180,\n        },\n        {\n            field: \"rpp1\",\n            headerName: \"RPP1\",\n            width: 180,\n        },\n        {\n            field: \"rpp2\",\n            headerName: \"RPP2\",\n            width: 180,\n        },\n        {\n            field: \"rps1\",\n            headerName: \"RPS1\",\n            width: 180,\n        },\n        {\n            field: \"incidente\",\n            headerName: \"INCIDENTE\",\n            width: 180,\n        },\n        {\n            field: \"nombre\",\n            headerName: \"NOMBRE\",\n            width: 180,\n        },\n        {\n            field: \"municipio\",\n            headerName: \"MUNICIPIO\",\n            width: 180,\n        },\n        {\n            field: \"localidad\",\n            headerName: \"LOCALIDAD\",\n            width: 180,\n        },\n        {\n            field: \"distrito \",\n            headerName: \"DISTRITO\",\n            width: 180,\n        },\n    ];\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Casillas\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={casillas} reload={reload} />\n        </div>\n    )\n}\n\nexport default Casillas\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ReportesRgs.jsx",["160"],"import React, { useEffect } from \"react\";\nimport { obtenerReportesRgsAccion } from \"../../redux/ReportesRgsDucks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nconst ReportesRgs = () => {\n    //Configuraciones iniciales\n    const dispatch = useDispatch();\n    const reportesRgs = useSelector((store) => store.reportesRgs.array);\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerReportesRgsAccion());\n    }, []);\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDREPORTESRGS\",\n            width: 180,\n        },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 180,\n        },\n        {\n            field: \"idlistanom\",\n            headerName: \"IDLISTANOM\",\n            width: 180,\n        },\n        {\n            field: \"puesto\",\n            headerName: \"PUESTO\",\n            width: 180,\n        },\n        {\n            field: \"nombre\",\n            headerName: \"NOMBRE\",\n            width: 180,\n        },\n        {\n            field: \"telefono\",\n            headerName: \"TELEFONO\",\n            width: 180,\n        },\n        {\n            field: \"claveelector\",\n            headerName: \"CLAVEELECTOR\",\n            width: 180,\n        },\n        {\n            field: \"observaciones\",\n            headerName: \"OBSERVACIONES\",\n            width: 180,\n        }\n    ];\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Reportes rgs\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <DataGridCpt columns={columns} actArray={reportesRgs} />\n        </div >\n    )\n}\n\nexport default ReportesRgs","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Graficas.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/IncidentesCasillas.jsx",["161"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerinfoAdicionalCasillaAccion } from \"../../redux/InfoAdicionalCasillasDucks\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nconst IncidentesCasillas = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n    const infoAdicionalCasillas = useSelector((store) => store.infoAdicionalCasillas.array);\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDINFOADICIONALCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"idcasilla\",\n            headerName: \"IDCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccionasignada\",\n            headerName: \"SECCIONASIGNADA\",\n            width: 180,\n        },\n        {\n            field: \"horaapertura\",\n            headerName: \"HORAAPERTURA\",\n            width: 180,\n        },\n        {\n            field: \"horacierre\",\n            headerName: \"HORACIERRE\",\n            width: 180,\n        },\n        {\n            field: \"incidenteuno\",\n            headerName: \"INCIDENTEUNO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidenteuno\",\n            headerName: \"HORAINCIDENTEUNO\",\n            width: 180,\n        },\n        {\n            field: \"incidentedos\",\n            headerName: \"INCIDENTEDOS\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentedos\",\n            headerName: \"HORAINCIDENTEDOS\",\n            width: 180,\n        },\n        {\n            field: \"incidentetres\",\n            headerName: \"INCIDENTETRES\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentetres\",\n            headerName: \"HORAINCIDENTETRES\",\n            width: 180,\n        },\n        {\n            field: \"incidentecuatro\",\n            headerName: \"INCIDENTECUATRO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentecuatro\",\n            headerName: \"HORAINCIDENTECUATRO\",\n            width: 180,\n        },\n        {\n            field: \"incidentecinco\",\n            headerName: \"INCIDENTECINCO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentecinco\",\n            headerName: \"HORAINCIDENTECINCO\",\n            width: 180,\n        },\n        {\n            field: \"prip1\",\n            headerName: \"PRIP1\",\n            width: 180,\n        },\n        {\n            field: \"prip2\",\n            headerName: \"PRIP2\",\n            width: 180,\n        },\n        {\n            field: \"pris1\",\n            headerName: \"PRIS1\",\n            width: 180,\n        },\n        {\n            field: \"pris2\",\n            headerName: \"PRIS2\",\n            width: 180,\n        },\n        {\n            field: \"presidente\",\n            headerName: \"PRESIDENTE\",\n            width: 180,\n        },\n        {\n            field: \"sec1\",\n            headerName: \"SEC1\",\n            width: 180,\n        },\n        {\n            field: \"sec2\",\n            headerName: \"SEC2\",\n            width: 180,\n        },\n        {\n            field: \"esc1\",\n            headerName: \"ESC1\",\n            width: 180,\n        },\n        {\n            field: \"esc2\",\n            headerName: \"ESC2\",\n            width: 180,\n        },\n        {\n            field: \"esc3\",\n            headerName: \"ESC3\",\n            width: 180,\n        },\n        {\n            field: \"sup1\",\n            headerName: \"SUP1\",\n            width: 180,\n        },\n        {\n            field: \"sup2\",\n            headerName: \"SUP2\",\n            width: 180,\n        },\n        {\n            field: \"sup3\",\n            headerName: \"SUP3\",\n            width: 180,\n        },\n    ];\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerinfoAdicionalCasillaAccion());\n    }, []);\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Incidentes Casillas\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={infoAdicionalCasillas} />\n        </div>\n    )\n}\n\nexport default IncidentesCasillas\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones.jsx",["162"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    getEleccionesAccion, createEleccionesAccion,\n    updateEleccionesAccion, deleteEleccionesAccion\n} from \"../../redux/EleccionesDucks\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MenuButtonListCpt from '../utils/MenuButtonListCpt';\n\nconst Elecciones = () => {\n    //Datos iniciales\n    const dispatch = useDispatch();\n    const elecciones = useSelector((store) => store.elecciones.array);\n    const reload = useSelector((store) => store.elecciones.reload);\n\n    //Nombre modelo\n    const modelo = \"elecciones\";\n\n    //Acciones repository    \n    const handleCreate = (eleccion) => {\n        dispatch(createEleccionesAccion(eleccion));\n    };\n\n    const handleUpdate = (eleccion) => {\n        dispatch(updateEleccionesAccion(eleccion));\n    };\n\n    const handleDelete = (eleccion) => {\n        dispatch(deleteEleccionesAccion(eleccion));\n    };\n\n    //eleccion\n    const eleccion = {\n        id: \"\",\n    };\n\n    //Carga iniciales\n    useEffect(() => {\n        dispatch(getEleccionesAccion(eleccion));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        dispatch(getEleccionesAccion(eleccion));\n    }\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"ID\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"actions\",\n            headerName: \"ACCIONES\",\n            width: 140,\n            disableClickEventBubbling: true,\n            renderCell: (params: CellParams) => {\n                const api: GridApi = params.api;\n                const fields = api\n                    .getAllColumns()\n                    .map((c) => c.field)\n                    .filter((c) => c !== \"__check__\" && !!c);\n                const thisRow = {};\n\n                fields.forEach((f) => {\n                    thisRow[f] = params.getValue(f);\n                });\n\n                const acciones = [\n                    // {\n                    //     id: thisRow.id,\n                    //     action: \"get\",\n                    //     title: \"ver\",\n                    //     handle: null,\n                    //     rowdata: thisRow,\n                    //     path: `/${modelo}/get/${thisRow.id}`,\n                    // },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"create\",\n                        title: \"crear\",\n                        handle: handleCreate,\n                        rowdata: thisRow,\n                        path: `${modelo}/create`\n                    },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"update\",\n                        title: \"actualizar\",\n                        handle: handleUpdate,\n                        rowdata: thisRow,\n                        path: `${modelo}/update/${thisRow.id}`\n                    },\n                    // {\n                    //     id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                    //     action: \"delete\",\n                    //     title: \"eliminar\",\n                    //     handle: handleDelete,\n                    //     rowdata: thisRow,\n                    //     path: `${modelo}`\n                    // },\n\n                ]\n                return <MenuButtonListCpt acciones={acciones} create={handleCreate} actualizar={handleUpdate} delete={handleDelete} />\n            },\n        },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 180,\n\n        },\n        {\n            field: \"pan\",\n            headerName: \"PAN\",\n            width: 180,\n\n        },\n        {\n            field: \"pri\",\n            headerName: \"PRI\",\n            width: 180,\n\n        },\n        {\n            field: \"prd\",\n            headerName: \"PRD\",\n            width: 180,\n\n        },\n        {\n            field: \"pvem\",\n            headerName: \"PVEM\",\n            width: 180,\n\n        },\n        {\n            field: \"pt\",\n            headerName: \"PT\",\n            width: 180,\n\n        },\n        {\n            field: \"movciudadano\",\n            headerName: \"MOVCIUDADANO\",\n            width: 180,\n\n        },\n        {\n            field: \"nuevaalianza\",\n            headerName: \"NUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"morena\",\n            headerName: \"MORENA\",\n            width: 180,\n\n        },\n        {\n            field: \"encuentrosocial\",\n            headerName: \"ENCUENTROSOCIAL\",\n            width: 180,\n\n        },\n        {\n            field: \"panprd\",\n            headerName: \"PANPRD\",\n            width: 180,\n\n        },\n        {\n            field: \"pripvemnuevaalianza\",\n            headerName: \"PRIPVEMNUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"pripvem\",\n            headerName: \"PRIPVEM\",\n            width: 180,\n\n        },\n        {\n            field: \"prinuevaalianza\",\n            headerName: \"PRINUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"pvemnuevaalianza\",\n            headerName: \"PVEMNUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"candidatosnoregistrados\",\n            headerName: \"CANDIDATOSNOREGISTRADOS\",\n            width: 180,\n\n        },\n        {\n            field: \"nulos\",\n            headerName: \"NULOS\",\n            width: 180,\n\n        },\n        {\n            field: \"total\",\n            headerName: \"TOTAL\",\n            width: 180,\n\n        },\n    ];\n\n\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/promovidos\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Elecciones\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={elecciones} reload={reload} />\n        </div>\n    )\n}\n\nexport default Elecciones","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos.jsx",["163"],"import React, { useEffect } from \"react\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { obtenerPersonaActivistaAccion, actualizarPersonaActivistaVotadaAccion } from \"../../redux/PersonaActivistaDucks\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MenuButtonListCpt from '../utils/MenuButtonListCpt';\n\nconst Promovidos = () => {\n\tconst dispatch = useDispatch();\n\tconst activistas = useSelector((store) => store.personasActivistas.array);\n\tconst reload = useSelector((store) => store.personasActivistas.reload);\n\n\n\t//Nombre modelo\n\tconst modelo = \"promovidos\";\n\n\t//BreadCums\n\tfunction handleClick(event) {\n\t\tevent.preventDefault();\n\t\tconsole.info('You clicked a breadcrumb.');\n\t}\n\n\t//Persona\n\tconst persona = {\n\t\tid: \"\",\n\t\tvotado: 0,\n\t};\n\n\t//Hacemos carga inicial\n\tuseEffect(() => {\n\t\tdispatch(obtenerPersonaActivistaAccion(persona));\n\t}, []);\n\n\t//Verificamos si hubo cambios\n\tif (reload) {\n\t\tpersona.id = \"\";\n\t\tdispatch(obtenerPersonaActivistaAccion(persona));\n\t}\n\n\t//Realizamos\n\tconst performAction = (id) => {\n\t\thandleVotado(id);\n\t};\n\n\t//Handle votado\n\tconst handleVotado = (id) => {\n\t\tpersona.id = id;\n\t\tpersona.votado = 1;\n\t\tdispatch(actualizarPersonaActivistaVotadaAccion(persona));\n\t};\n\n\n\n\t// Columnas\n\tconst columns = [\n\t\t{\n\t\t\tfield: \"id\",\n\t\t\theaderName: \"ID\",\n\t\t\twidth: 180,\n\t\t\thide: true,\n\t\t},\n\t\t{\n\t\t\tfield: \"actions\",\n\t\t\theaderName: \"ACCION\",\n\t\t\twidth: 120,\n\t\t\tdisableClickEventBubbling: true,\n\t\t\trenderCell: (params: CellParams) => {\n\n\t\t\t\tconst api: GridApi = params.api;\n\t\t\t\tconst fields = api\n\t\t\t\t\t.getAllColumns()\n\t\t\t\t\t.map((c) => c.field)\n\t\t\t\t\t.filter((c) => c !== \"__check__\" && !!c);\n\t\t\t\tconst thisRow = {};\n\n\t\t\t\tfields.forEach((f) => {\n\t\t\t\t\tthisRow[f] = params.getValue(f);\n\t\t\t\t});\n\n\t\t\t\tconst acciones = [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: thisRow.id,\n\t\t\t\t\t\taction: \"get\",\n\t\t\t\t\t\ttitle: \"ver\",\n\t\t\t\t\t\thandle: null,\n\t\t\t\t\t\trowdata: thisRow,\n\t\t\t\t\t\tpath: `/${modelo}/get/${thisRow.id}`,\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t\treturn <MenuButtonListCpt acciones={acciones} />\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tfield: \"votado\",\n\t\t\theaderName: \"VOTADO\",\n\t\t\twidth: 120,\n\t\t\trenderCell: (params: CellParams) => {\n\t\t\t\tif (params.value === 1) {\n\t\t\t\t\treturn <DoneAllIcon\n\t\t\t\t\t\tstyle={{ color: '#03a9f4' }}\n\t\t\t\t\t/>;\n\t\t\t\t} else {\n\t\t\t\t\tconst onClick = () => {\n\t\t\t\t\t\tconst api: GridApi = params.api;\n\t\t\t\t\t\tconst fields = api\n\t\t\t\t\t\t\t.getAllColumns()\n\t\t\t\t\t\t\t.map((c) => c.field)\n\t\t\t\t\t\t\t.filter((c) => c !== \"__check__\" && !!c);\n\t\t\t\t\t\tconst thisRow = {};\n\n\t\t\t\t\t\tfields.forEach((f) => {\n\t\t\t\t\t\t\tthisRow[f] = params.getValue(f);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tperformAction(thisRow.id);\n\t\t\t\t\t};\n\t\t\t\t\treturn <RadioButtonUncheckedIcon\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t/>;\n\t\t\t\t}\n\n\t\t\t},\n\t\t},\n\n\t\t{\n\t\t\tfield: \"idpuesto\",\n\t\t\theaderName: \"IDPUESTO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"idrol\",\n\t\t\theaderName: \"IDROL\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"idjefe\",\n\t\t\theaderName: \"IDJEFE\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"zona\",\n\t\t\theaderName: \"ZONA\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"puesto\",\n\t\t\theaderName: \"PUESTO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"nombre\",\n\t\t\theaderName: \"NOMBRE\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"telefono\",\n\t\t\theaderName: \"TELEFONO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"domicilio\",\n\t\t\theaderName: \"DOMICILIO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"claveelector\",\n\t\t\theaderName: \"CLAVEELECTOR\",\n\t\t\twidth: 180,\n\t\t},\n\n\t\t{\n\t\t\tfield: \"municipio\",\n\t\t\theaderName: \"MUNICIPIO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"localidad\",\n\t\t\theaderName: \"LOCALIDAD\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"distrito\",\n\t\t\theaderName: \"DISTRITO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"horavoto\",\n\t\t\theaderName: \"HORAVOTO\",\n\t\t\twidth: 180,\n\t\t},\n\n\t];\n\n\treturn (\n\t\t<div>\n\t\t\t<Breadcrumbs aria-label=\"breadcrumb\">\n\t\t\t\t<Link color=\"inherit\" href=\"/home\" >\n\t\t\t\t\tHome\n      \t\t\t</Link>\n\t\t\t\t<Link\n\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\thref=\"/promovidos\"\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\taria-current=\"page\"\n\t\t\t\t>\n\t\t\t\t\tPromovidos\n      \t\t\t</Link>\n\t\t\t</Breadcrumbs><br />\n\t\t\t<DataGridCpt columns={columns} actArray={activistas} reload={reload} />\n\t\t</div>\n\t);\n};\n\nexport default Promovidos;\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos/PromovidoDetalle.jsx",["164","165"],"import React, { useEffect } from \"react\";\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerPersonaActivistaAccion } from \"../../../redux/PersonaActivistaDucks\";\nimport MaterialTableCpt from '../../utils/MaterialTableCpt';\nimport PieChart from '../../charts/PieChart';\nimport { ResizableBox } from 'react-resizable';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\n\nconst PromovidoDetalle = () => {\n\t//Store y configuracion REDUX\n\tconst dispatch = useDispatch();\n\tconst activistas = useSelector((store) => store.personasActivistas.array);\n\n\t//BreadCums\n\tfunction handleClick(event) {\n\t\tevent.preventDefault();\n\t\tconsole.info('You clicked a breadcrumb.');\n\t}\n\n\t//Recibimos parametros\n\tconst { id } = useParams()\n\n\t//Persona\n\tconst persona = {\n\t\tid: id,\n\t\tvotado: 0,\n\t};\n\n\t//Hacemos carga inicial\n\tuseEffect(() => {\n\t\tpersona.id = id;\n\t\tdispatch(obtenerPersonaActivistaAccion(persona));\n\t}, []);\n\n\t//Reasignamos datos id para mapear tipo arbol\n\tconst preparaDatos = () => {\n\t\t//reasignamos id\n\t\tactivistas.map(\n\t\t\titem => {\n\t\t\t\titem.id = item.idpuesto\n\t\t\t}\n\t\t)\n\t}\n\n\tconst imprimeDatosActivista = () => {\n\t\tif (activistas[0] === undefined) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t< h5 > Cargando... </h5 >\n\t\t\t\t</div>\n\t\t\t)\n\t\t} return (\n\t\t\t<div>\n\t\t\t\t< h5 > Nombre: {activistas[0].nombre}</h5 >\n\t\t\t\t< h5 > Telefono: {activistas[0].telefono}</h5 >\n\t\t\t\t< h5 > Domicilio: {activistas[0].domicilio}</h5 >\n\t\t\t</div>\n\t\t)\n\n\t}\n\n\tconst suma = () => {\n\t\tlet suma = 0;\n\t\tactivistas.forEach(item =>\n\t\t\tsuma = suma + item.votado,\n\t\t);\n\t\treturn suma;\n\t}\n\t//Columnas\n\tconst columns = [\n\t\t{ title: 'VOTADO', field: 'votado', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'IDPUESTO', field: 'idpuesto', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'IDROL', field: 'idrol', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'IDJEFE', field: 'idjefe', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'ZONA', field: 'zona', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'PUESTO', field: 'puesto', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t\t{ title: 'NOMBRE', field: 'nombre', headerStyle: { minWidth: 380 }, cellStyle: { minWidth: 380 }, },\n\t\t{ title: 'TELEFONO', field: 'telefono', headerStyle: { minWidth: 140 }, cellStyle: { minWidth: 140 }, },\n\t\t{ title: 'DOMICILIO', field: 'domicilio', headerStyle: { minWidth: 280 }, cellStyle: { minWidth: 280 }, },\n\t\t{ title: 'CLAVEELECTOR', field: 'claveelector', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t\t{ title: 'MUNICIPIO', field: 'municipio', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t\t{ title: 'LOCALIDAD', field: 'localidad', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t\t{ title: 'DISTRITO', field: 'distrito', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t\t{ title: 'HORAVOTO', field: 'horavoto', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t];\n\n\treturn (\n\n\n\n\t\t<div >\n\t\t\t<Breadcrumbs aria-label=\"breadcrumb\">\n\t\t\t\t<Link color=\"inherit\" href=\"/home\" >\n\t\t\t\t\tHome\n      \t\t\t</Link>\n\t\t\t\t<Link color=\"inherit\" href=\"/promovidos\" >\n\t\t\t\t\tPromovidos\n      \t\t\t</Link>\n\t\t\t\t<Link\n\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\thref=\"/promovidos/promovidosdetalle/\"\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\taria-current=\"page\"\n\t\t\t\t>\n\t\t\t\t\tDetalle\n      \t\t\t</Link>\n\n\t\t\t</Breadcrumbs><br />\n\t\t\t{preparaDatos()}\n\t\t\t{imprimeDatosActivista()}\n\t\t\t<ResizableBox width={600} height={400}\n\t\t\t\tminConstraints={[100, 100]} maxConstraints={[600, 400]}>\n\t\t\t\t<PieChart data={[suma(), (activistas.length - suma())]} />\n\t\t\t</ResizableBox>\n\n\t\t\t<MaterialTableCpt title={\"Detalles promovido\"} columns={columns} data={activistas} parentChildData={(row, rows) => rows.find(a => a.id === row.idjefe)} />\n\n\t\t</div>\n\n\t)\n}\n\nexport default PromovidoDetalle\n\n","/home/node/aplicacion/mdc-softare-frontend/src/components/ListIcons.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/DataGridCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/ContextMenuCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/AccordionCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/charts/PieChart.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MenuButtonListCpt.jsx",["166"],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCrudCpt.jsx",["167","168"],"import React, { Fragment } from 'react'\nimport MaterialTable from \"material-table\";\n\n\nconst MaterialTableCrudCpt = (props) => {\n    const { useState } = React;\n\n    const [columns, setColumns] = useState(props.columns);\n\n    const [data, setData] = useState(props.data);\n\n    return (\n        <MaterialTable\n            title=\"Editable Preview\"\n            options={{\n                rowStyle: {\n                    fontSize: 12,\n                },\n            }}\n            columns={columns}\n            data={data}\n\n            editable={{\n                onRowAdd: newData =>\n                    new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            setData([...data, newData]);\n\n                            resolve(alert(\"add\"));\n\n                        }, 1000)\n                    }),\n                onRowUpdate: (newData, oldData) =>\n                    new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            const dataUpdate = [...data];\n                            const index = oldData.tableData.id;\n                            dataUpdate[index] = newData;\n                            setData([...dataUpdate]);\n\n                            resolve(alert(\"update\"));\n                        }, 1000)\n                    }),\n                onRowDelete: oldData =>\n                    new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            const dataDelete = [...data];\n                            const index = oldData.tableData.id;\n                            dataDelete.splice(index, 1);\n                            setData([...dataDelete]);\n\n                            resolve(alert(\"add\"));\n                        }, 1000)\n                    }),\n            }}\n        />\n    )\n}\n\n\nexport default MaterialTableCrudCpt\n\n\n\n",["169","170"],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/CreateCasilla.jsx",["171"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useForm } from 'react-hook-form'\nimport { createCasillaAccion } from \"../../../redux/CasillasDucks\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n            border: \"\",\n        },\n    },\n}));\n\n//BreadCums\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\n\n\n\nconst CreateCasilla = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n\n    //Handle Create\n    const handleCreate = (casilla) => {\n        dispatch(createCasillaAccion(casilla));\n    };\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n    const onSubmit = (data, e) => {\n        handleCreate(data);\n        e.target.reset();\n    }\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link color=\"inherit\" href=\"/casillas\" >\n                    Casillas\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas/create\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Crear casilla\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Crear casilla\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.idrepresentantecasilla?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Representante obligatorio\" } })} name=\"idrepresentantecasilla\" required id=\"idrepresentantecasilla\" label=\"Representante de casilla\" defaultValue=\"\" />\n                        <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.seccionasignada?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Seccion obligatoria\" } })} name=\"seccionasignada\" required id=\"seccionasignada\" label=\"Seccion asignada\" defaultValue=\"\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"cargo\" id=\"cargo\" label=\"Cargo\" defaultValue=\"\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"apertura\" id=\"apertura\" label=\"Apertura\" defaultValue=\"\" />\n                        <TextField\n                            inputRef={register({ required: { value: false } })}\n                            name=\"horaapertura\"\n                            id=\"horaapertura\"\n                            label=\"Hora apertura\"\n                            type=\"datetime-local\"\n                            defaultValue=\"2021-01-31T10:30\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </div>\n                </div>\n\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Flujo de votantes\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"flujo1230pm\" id=\"flujo1230pm\" label=\"Flujo 12-30\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"promovidos1230pm\" id=\"promovidos1230pm\" label=\"Promovidos 12-30\" defaultValue=\"\" variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"flujo430pm\" id=\"flujo430pm\" label=\"Flujo 16-30\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"promovidos430pm\" id=\"promovidos430pm\" label=\"Promovidos 16-30\" defaultValue=\"\" variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"flujo6pm\" id=\"flujo6pm\" label=\"Flujo 18\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"promovidos6pm\" id=\"promovidos6pm\" label=\"Promovidos 18\" defaultValue=\"\" variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n                    </div>\n                </div>\n\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Cierre de casilla\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"cierre6pm\" id=\"cierre6pm\" label=\"Cierre 18\" defaultValue=\"\" variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n                        <TextField\n                            inputRef={register({ required: { value: false } })}\n                            name=\"horacierre\"\n                            id=\"horacierre\"\n                            label=\"Hora cierre\"\n                            type=\"datetime-local\"\n                            defaultValue=\"2021-01-31T10:30\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Representantes de casilla\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"rpp1\" id=\"rpp1\" label=\"Representante 1\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"rpp2\" id=\"rpp2\" label=\"Representante 2\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"rps1\" id=\"rps1\" label=\"Suplente 1\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Representantes de casilla\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"incidente\" id=\"incidente\" label=\"Incidente\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"nombre\" id=\"nombre\" label=\"Nombre\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"municipio\" id=\"municipio\" label=\"Municipio\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"localidad\" id=\"localidad\" label=\"Localidad\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"distrito\" id=\"distrito\" label=\"Distrito\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n                <button className=\"btn btn-primary\">Enviar</button>\n            </form>\n        </div >\n    );\n}\n\nexport default CreateCasilla","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/UpdateCasilla.jsx",["172","173"],"import React, { useEffect, useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useForm } from 'react-hook-form'\nimport { updateCasillaAccion, getCasillaAccion } from \"../../../redux/CasillasDucks\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n            border: \"\",\n        },\n    },\n}));\n\n\nconst UpdateCasilla = () => {\n    //Store y configuracion REDUX\n    const dispatch = useDispatch();\n    const casillas = useSelector((store) => store.casillas.array);\n    const reload = useSelector((store) => store.casillas.reload);\n\n    //Recibimos parametros\n    const { id } = useParams()\n\n    //casilla\n    const casilla = {\n        id: id,\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        casilla.id = id;\n        dispatch(getCasillaAccion(casilla));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        casilla.id = id;\n        dispatch(getCasillaAccion(casilla));\n    }\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Handle update\n    const handleupdate = (data) => {\n        dispatch(updateCasillaAccion(data));\n    };\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n    const onSubmit = (data, e) => {\n        handleupdate(data);\n        e.target.reset();\n    }\n\n    const classes = useStyles();\n\n    //Form\n    const imprimeForm = () => {\n        if (casillas.length !== 1) {\n            return (\n                <div>\n                    < h5 > Cargando... </h5 >\n                </div>\n            )\n        }\n        return (\n\n            < div >\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Link color=\"inherit\" href=\"/home\" >\n                        Home\n      \t\t\t</Link>\n                    <Link color=\"inherit\" href=\"/casillas\" >\n                        Casillas\n      \t\t\t</Link>\n                    <Link\n                        color=\"textPrimary\"\n                        href=\"/casillas/update\"\n                        onClick={handleClick}\n                        aria-current=\"page\"\n                    >\n                        Actualizar casilla\n      \t\t\t</Link>\n                </Breadcrumbs><br />\n\n                <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Actualizar casilla\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.idcasilla?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Id casilla\" } })} name=\"id\" required id=\"id\" label=\"id\" defaultValue={casillas[0].id} style={{ display: 'none' }} />\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.idrepresentantecasilla?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Representante obligatorio\" } })} name=\"idrepresentantecasilla\" required id=\"idrepresentantecasilla\" label=\"Representante de casilla\" defaultValue={casillas[0].idrepresentantecasilla} />\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.seccionasignada?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Seccion obligatoria\" } })} name=\"seccionasignada\" required id=\"seccionasignada\" label=\"Seccion asignada\" defaultValue={casillas[0].seccionasignada} />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"cargo\" id=\"cargo\" label=\"Cargo\" defaultValue={casillas[0].cargo} />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"apertura\" id=\"apertura\" label=\"Apertura\" defaultValue={casillas[0].apertura} />\n                            <TextField\n                                inputRef={register({ required: { value: false } })}\n                                name=\"horaapertura\"\n                                id=\"horaapertura\"\n                                label=\"Hora apertura\"\n                                type=\"datetime-local\"\n                                defaultValue={casillas[0].horaapertura}\n                                className={classes.textField}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Flujo de votantes\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"flujo1230pm\" id=\"flujo1230pm\" label=\"Flujo 12-30\" defaultValue={casillas[0].flujo1230pm} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"promovidos1230pm\" id=\"promovidos1230pm\" label=\"Promovidos 12-30\" defaultValue={casillas[0].promovidos1230pm} variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"flujo430pm\" id=\"flujo430pm\" label=\"Flujo 16-30\" defaultValue={casillas[0].flujo430pm} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"promovidos430pm\" id=\"promovidos430pm\" label=\"Promovidos 16-30\" defaultValue={casillas[0].promovidos430pm} variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"flujo6pm\" id=\"flujo6pm\" label=\"Flujo 18\" defaultValue={casillas[0].flujo6pm} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"promovidos6pm\" id=\"promovidos6pm\" label=\"Promovidos 18\" defaultValue={casillas[0].promovidos6pm} variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n                        </div>\n                    </div>\n\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Cierre de casilla\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"cierre6pm\" id=\"cierre6pm\" label=\"Cierre 18\" defaultValue={casillas[0].cierre6pm} variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n                            <TextField\n                                inputRef={register({ required: { value: false } })}\n                                name=\"horacierre\"\n                                id=\"horacierre\"\n                                label=\"Hora cierre\"\n                                type=\"datetime-local\"\n                                defaultValue={casillas[0].horacierre}\n                                className={classes.textField}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Representantes de casilla\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"rpp1\" id=\"rpp1\" label=\"Representante 1\" defaultValue={casillas[0].rpp1} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"rpp2\" id=\"rpp2\" label=\"Representante 2\" defaultValue={casillas[0].rpp2} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"rps1\" id=\"rps1\" label=\"Suplente 1\" defaultValue={casillas[0].rps1} variant=\"filled\" />\n                        </div>\n                    </div>\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Representantes de casilla\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"incidente\" id=\"incidente\" label=\"Incidente\" defaultValue={casillas[0].incidente} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"nombre\" id=\"nombre\" label=\"Nombre\" defaultValue={casillas[0].nombre} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"municipio\" id=\"municipio\" label=\"Municipio\" defaultValue={casillas[0].municipio} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"localidad\" id=\"localidad\" label=\"Localidad\" defaultValue={casillas[0].localidad} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"distrito\" id=\"distrito\" label=\"Distrito\" defaultValue={casillas[0].distrito} variant=\"filled\" />\n                        </div>\n                    </div>\n                    <button className=\"btn btn-primary\">Enviar</button>\n                </form>\n            </div >\n\n        )\n\n    }\n\n    return (\n        <div >\n            { imprimeForm()}\n        </div>\n    );\n}\n\nexport default UpdateCasilla","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones/CreateEleccion.jsx",["174"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useForm } from 'react-hook-form'\nimport { createEleccionesAccion } from \"../../../redux/EleccionesDucks\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n            border: \"\",\n        },\n    },\n}));\n\n//BreadCums\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\n\n\n\nconst CreateElecciones = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n\n    //Handle Create\n    const handleCreate = (eleccion) => {\n        dispatch(createEleccionesAccion(eleccion));\n    };\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n    const onSubmit = (data, e) => {\n        handleCreate(data);\n        // e.target.reset();\n    }\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link color=\"inherit\" href=\"/elecciones\" >\n                    Eleccioness\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/elecciones/create\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Crear eleccion\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Crear Eleccion\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.seccion?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Seccion obligatoria\" } })} name=\"seccion\" required id=\"seccion\" label=\"Seccion\" defaultValue=\"\" />\n                    </div>\n                </div>\n\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Partidos bloque 1\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pan\" id=\"pan\" label=\"Pan\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pri\" id=\"pri\" label=\"Pri\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"prd\" id=\"prd\" label=\"Prd\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pvem\" id=\"pvem\" label=\"Pvem\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pt\" id=\"pt\" label=\"PT\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Partidos bloque 2\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"movciudadano\" id=\"movciudadano\" label=\"Mov Ciudadano\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"nuevaalianza\" id=\"nuevaalianza\" label=\"Nueva Alianza\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"morena\" id=\"morena\" label=\"Morena\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"encuentrosocial\" id=\"encuentrosocial\" label=\"Encuentro Social\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"panprd\" id=\"panprd\" label=\"Pan-PRD\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Partidos bloque 3\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pripvemnuevaalianza\" id=\"pripvemnuevaalianza\" label=\"Pri-Pvem-Nueva Alianza\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pripvem\" id=\"pripvem\" label=\"Pri Pvem\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"prinuevaalianza\" id=\"prinuevaalianza\" label=\"Pri-Nueva Alianza\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pvemnuevaalianza\" id=\"pvemnuevaalianza\" label=\"Pvem-Nueva Alianza\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"candidatosnoregistrados\" id=\"candidatosnoregistrados\" label=\"Candidatos No Reg.\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Totales\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"nulos\" id=\"nulos\" label=\"Nulos\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"total\" id=\"total\" label=\"Total\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n                <button className=\"btn btn-primary\">Enviar</button>\n            </form>\n        </div >\n    );\n}\n\nexport default CreateElecciones","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones/UpdateEleccion.jsx",["175","176"],"import React, { useEffect, useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useForm } from 'react-hook-form'\nimport { updateEleccionesAccion, getEleccionesAccion } from \"../../../redux/EleccionesDucks\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n            border: \"\",\n        },\n    },\n}));\n\n\nconst UpdateElecciones = () => {\n    //Store y configuracion REDUX\n    const dispatch = useDispatch();\n    const elecciones = useSelector((store) => store.elecciones.array);\n    const reload = useSelector((store) => store.elecciones.reload);\n\n    //Recibimos parametros\n    const { id } = useParams()\n\n    //eleccion\n    const eleccion = {\n        id: id,\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        eleccion.id = id;\n        dispatch(getEleccionesAccion(eleccion));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        eleccion.id = id;\n        dispatch(getEleccionesAccion(eleccion));\n    }\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Handle update\n    const handleupdate = (data) => {\n        dispatch(updateEleccionesAccion(data));\n    };\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n    const onSubmit = (data, e) => {\n        handleupdate(data);\n        e.target.reset();\n    }\n\n    const classes = useStyles();\n\n    //Form\n    const imprimeForm = () => {\n        if (elecciones.length !== 1) {\n            return (\n                <div>\n                    < h5 > Cargando... </h5 >\n                </div>\n            )\n        }\n        return (\n\n            <div>\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Link color=\"inherit\" href=\"/home\" >\n                        Home\n      \t\t\t</Link>\n                    <Link color=\"inherit\" href=\"/elecciones\" >\n                        Eleccioness\n      \t\t\t</Link>\n                    <Link\n                        color=\"textPrimary\"\n                        href=\"/elecciones/create\"\n                        onClick={handleClick}\n                        aria-current=\"page\"\n                    >\n                        Actualizar eleccion\n      \t\t\t</Link>\n                </Breadcrumbs><br />\n\n                <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Actualizar Eleccion\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.id?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Id elecciones\" } })} name=\"id\" required id=\"id\" label=\"id\" defaultValue={elecciones[0].id} style={{ display: 'none' }} />\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.seccion?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Seccion obligatoria\" } })} name=\"seccion\" required id=\"seccion\" label=\"Seccion\" defaultValue={elecciones[0].seccion} />\n                        </div>\n                    </div>\n\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Partidos bloque 1\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pan\" id=\"pan\" label=\"Pan\" defaultValue={elecciones[0].pan} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pri\" id=\"pri\" label=\"Pri\" defaultValue={elecciones[0].pri} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"prd\" id=\"prd\" label=\"Prd\" defaultValue={elecciones[0].prd} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pvem\" id=\"pvem\" label=\"Pvem\" defaultValue={elecciones[0].pvem} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pt\" id=\"pt\" label=\"PT\" defaultValue={elecciones[0].pt} variant=\"filled\" />\n                        </div>\n                    </div>\n\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Partidos bloque 2\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"movciudadano\" id=\"movciudadano\" label=\"Mov Ciudadano\" defaultValue={elecciones[0].movciudadano} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"nuevaalianza\" id=\"nuevaalianza\" label=\"Nueva Alianza\" defaultValue={elecciones[0].nuevaalianza} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"morena\" id=\"morena\" label=\"Morena\" defaultValue={elecciones[0].morena} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"encuentrosocial\" id=\"encuentrosocial\" label=\"Encuentro Social\" defaultValue={elecciones[0].encuentrosocial} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"panprd\" id=\"panprd\" label=\"Pan-PRD\" defaultValue={elecciones[0].panprd} variant=\"filled\" />\n                        </div>\n                    </div>\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Partidos bloque 3\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pripvemnuevaalianza\" id=\"pripvemnuevaalianza\" label=\"Pri-Pvem-Nueva Alianza\" defaultValue={elecciones[0].pripvemnuevaalianza} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pripvem\" id=\"pripvem\" label=\"Pri Pvem\" defaultValue={elecciones[0].pripvem} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"prinuevaalianza\" id=\"prinuevaalianza\" label=\"Pri-Nueva Alianza\" defaultValue={elecciones[0].prinuevaalianza} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pvemnuevaalianza\" id=\"pvemnuevaalianza\" label=\"Pvem-Nueva Alianza\" defaultValue={elecciones[0].pvemnuevaalianza} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"candidatosnoregistrados\" id=\"candidatosnoregistrados\" label=\"Candidatos No Reg.\" defaultValue={elecciones[0].candidatosnoregistrados} variant=\"filled\" />\n                        </div>\n                    </div>\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Totales\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"nulos\" id=\"nulos\" label=\"Nulos\" defaultValue={elecciones[0].nulos} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"total\" id=\"total\" label=\"Total\" defaultValue={elecciones[0].total} variant=\"filled\" />\n                        </div>\n                    </div>\n                    <button className=\"btn btn-primary\">Enviar</button>\n                </form>\n            </div >\n\n        )\n\n    }\n\n    return (\n        <div >\n            { imprimeForm()}\n        </div>\n    );\n}\n\nexport default UpdateElecciones","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/ComboChart.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/VotosHoraDucks.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":37},{"ruleId":"181","severity":1,"message":"185","line":17,"column":11,"nodeType":"183","messageId":"184","endLine":17,"endColumn":17},{"ruleId":"186","severity":1,"message":"187","line":26,"column":8,"nodeType":"188","endLine":26,"endColumn":10,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":31,"column":28,"nodeType":"192","messageId":"193","endLine":31,"endColumn":30},{"ruleId":"190","severity":1,"message":"191","line":39,"column":28,"nodeType":"192","messageId":"193","endLine":39,"endColumn":30},{"ruleId":"186","severity":1,"message":"194","line":49,"column":8,"nodeType":"188","endLine":49,"endColumn":10,"suggestions":"195"},{"ruleId":"186","severity":1,"message":"187","line":22,"column":8,"nodeType":"188","endLine":22,"endColumn":10,"suggestions":"196"},{"ruleId":"186","severity":1,"message":"187","line":166,"column":8,"nodeType":"188","endLine":166,"endColumn":10,"suggestions":"197"},{"ruleId":"186","severity":1,"message":"198","line":42,"column":8,"nodeType":"188","endLine":42,"endColumn":10,"suggestions":"199"},{"ruleId":"186","severity":1,"message":"200","line":35,"column":5,"nodeType":"188","endLine":35,"endColumn":7,"suggestions":"201"},{"ruleId":"186","severity":1,"message":"202","line":36,"column":5,"nodeType":"188","endLine":36,"endColumn":7,"suggestions":"203"},{"ruleId":"190","severity":1,"message":"191","line":42,"column":9,"nodeType":"192","messageId":"193","endLine":42,"endColumn":11},{"ruleId":"190","severity":1,"message":"204","line":37,"column":25,"nodeType":"205","messageId":"206","endLine":37,"endColumn":34},{"ruleId":"181","severity":1,"message":"207","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"208","line":8,"column":21,"nodeType":"183","messageId":"184","endLine":8,"endColumn":31},{"ruleId":"177","replacedBy":"209"},{"ruleId":"179","replacedBy":"210"},{"ruleId":"181","severity":1,"message":"211","line":3,"column":23,"nodeType":"183","messageId":"184","endLine":3,"endColumn":34},{"ruleId":"181","severity":1,"message":"212","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"213","line":41,"column":8,"nodeType":"188","endLine":41,"endColumn":10,"suggestions":"214"},{"ruleId":"181","severity":1,"message":"211","line":3,"column":23,"nodeType":"183","messageId":"184","endLine":3,"endColumn":34},{"ruleId":"181","severity":1,"message":"212","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"215","line":41,"column":8,"nodeType":"188","endLine":41,"endColumn":10,"suggestions":"216"},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'reload' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["219"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'casilla' and 'dispatch'. Either include them or remove the dependency array.",["220"],["221"],["222"],"React Hook useEffect has missing dependencies: 'dispatch' and 'eleccion'. Either include them or remove the dependency array.",["223"],"React Hook useEffect has missing dependencies: 'dispatch' and 'persona'. Either include them or remove the dependency array.",["224"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'persona'. Either include them or remove the dependency array.",["225"],"Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'Fragment' is defined but never used.","'setColumns' is assigned a value but never used.",["217"],["218"],"'useSelector' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'casilla', 'dispatch', and 'id'. Either include them or remove the dependency array.",["226"],"React Hook useEffect has missing dependencies: 'dispatch', 'eleccion', and 'id'. Either include them or remove the dependency array.",["227"],"no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"228","fix":"232"},{"desc":"228","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [dispatch]",{"range":"244","text":"245"},"Update the dependencies array to be: [casilla, dispatch]",{"range":"246","text":"247"},{"range":"248","text":"245"},{"range":"249","text":"245"},"Update the dependencies array to be: [dispatch, eleccion]",{"range":"250","text":"251"},"Update the dependencies array to be: [dispatch, persona]",{"range":"252","text":"253"},"Update the dependencies array to be: [dispatch, id, persona]",{"range":"254","text":"255"},"Update the dependencies array to be: [casilla, dispatch, id]",{"range":"256","text":"257"},"Update the dependencies array to be: [dispatch, eleccion, id]",{"range":"258","text":"259"},[809,811],"[dispatch]",[1328,1330],"[casilla, dispatch]",[733,735],[4054,4056],[1228,1230],"[dispatch, eleccion]",[1100,1102],"[dispatch, persona]",[1009,1011],"[dispatch, id, persona]",[1174,1176],"[casilla, dispatch, id]",[1198,1200],"[dispatch, eleccion, id]"]