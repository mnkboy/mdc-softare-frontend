[{"/home/node/aplicacion/mdc-softare-frontend/src/index.js":"1","/home/node/aplicacion/mdc-softare-frontend/src/App.jsx":"2","/home/node/aplicacion/mdc-softare-frontend/src/themeConfig.js":"3","/home/node/aplicacion/mdc-softare-frontend/src/redux/store.js":"4","/home/node/aplicacion/mdc-softare-frontend/src/components/Container.jsx":"5","/home/node/aplicacion/mdc-softare-frontend/src/redux/PersonaActivistaDucks.js":"6","/home/node/aplicacion/mdc-softare-frontend/src/redux/InfoAdicionalCasillasDucks.js":"7","/home/node/aplicacion/mdc-softare-frontend/src/redux/CasillasDucks.js":"8","/home/node/aplicacion/mdc-softare-frontend/src/redux/ReportesRgsDucks.js":"9","/home/node/aplicacion/mdc-softare-frontend/src/redux/VotosHoraDucks.js":"10","/home/node/aplicacion/mdc-softare-frontend/src/redux/LoginDucks.js":"11","/home/node/aplicacion/mdc-softare-frontend/src/redux/EleccionesDucks.js":"12","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasGeneroDucks.js":"13","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasEdadDucks.js":"14","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasSeccionDucks.js":"15","/home/node/aplicacion/mdc-softare-frontend/src/components/Navbar.jsx":"16","/home/node/aplicacion/mdc-softare-frontend/src/components/DrawerCustom.jsx":"17","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Home.jsx":"18","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos.jsx":"19","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/CapturaDeVotos.jsx":"20","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Graficas.jsx":"21","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas.jsx":"22","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/GestionarPromovidos.jsx":"23","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/IncidentesCasillas.jsx":"24","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones.jsx":"25","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/SignIn.jsx":"26","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos/PromovidoDetalle.jsx":"27","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/CreateCasilla.jsx":"28","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/UpdateCasilla.jsx":"29","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones/CreateEleccion.jsx":"30","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones/UpdateEleccion.jsx":"31","/home/node/aplicacion/mdc-softare-frontend/src/components/ListIcons.jsx":"32","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/PieChart.jsx":"33","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCpt.jsx":"34","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MenuButtonListCpt.jsx":"35","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/DataGridCpt.jsx":"36","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableEditableCpt.jsx":"37","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/PolarChart.jsx":"38","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/MultiAxisChart.jsx":"39","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/HorizontalChart.jsx":"40","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/ComboChart.jsx":"41","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ReportesRgs.jsx":"42","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasPorRolDucks.js":"43","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasTotalSeccionDucks.js":"44","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasEstructuraDucks.js":"45","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Progreso.jsx":"46","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasProgresoLocalidadDucks.js":"47","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasProgresoSeccionDucks.js":"48","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasProgresoEdadDucks.js":"49","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasTotalLocalidadDucks.js":"50","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ConsultaPromovidos.jsx":"51","/home/node/aplicacion/mdc-softare-frontend/src/redux/ApoyoDePromovidosDucks.js":"52","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ApoyoDePromovidos.jsx":"53","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/AvanceEstructura.jsx":"54","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/AvanceEstructuraDetallado.jsx":"55"},{"size":217,"mtime":1611516282426,"results":"56","hashOfConfig":"57"},{"size":492,"mtime":1617556044541,"results":"58","hashOfConfig":"57"},{"size":311,"mtime":1611550280894,"results":"59","hashOfConfig":"57"},{"size":2327,"mtime":1620474957382,"results":"60","hashOfConfig":"57"},{"size":5062,"mtime":1620612773726,"results":"61","hashOfConfig":"57"},{"size":8746,"mtime":1618772163355,"results":"62","hashOfConfig":"57"},{"size":3696,"mtime":1616986183627,"results":"63","hashOfConfig":"57"},{"size":7841,"mtime":1616036055787,"results":"64","hashOfConfig":"57"},{"size":2157,"mtime":1616036055787,"results":"65","hashOfConfig":"57"},{"size":1172,"mtime":1616987286645,"results":"66","hashOfConfig":"57"},{"size":2732,"mtime":1619693478418,"results":"67","hashOfConfig":"57"},{"size":9314,"mtime":1616036055787,"results":"68","hashOfConfig":"57"},{"size":1566,"mtime":1616988059437,"results":"69","hashOfConfig":"57"},{"size":1550,"mtime":1616988328252,"results":"70","hashOfConfig":"57"},{"size":1574,"mtime":1616988333316,"results":"71","hashOfConfig":"57"},{"size":2966,"mtime":1620597092406,"results":"72","hashOfConfig":"57"},{"size":997,"mtime":1615522578225,"results":"73","hashOfConfig":"57"},{"size":11501,"mtime":1620475573125,"results":"74","hashOfConfig":"57"},{"size":4885,"mtime":1620618636330,"results":"75","hashOfConfig":"57"},{"size":5625,"mtime":1620615966712,"results":"76","hashOfConfig":"57"},{"size":4851,"mtime":1616996497629,"results":"77","hashOfConfig":"57"},{"size":6765,"mtime":1618167716344,"results":"78","hashOfConfig":"57"},{"size":4277,"mtime":1618169277612,"results":"79","hashOfConfig":"57"},{"size":4658,"mtime":1614014471415,"results":"80","hashOfConfig":"57"},{"size":6459,"mtime":1616978283757,"results":"81","hashOfConfig":"57"},{"size":6389,"mtime":1620608186938,"results":"82","hashOfConfig":"57"},{"size":5281,"mtime":1618769959552,"results":"83","hashOfConfig":"57"},{"size":8431,"mtime":1615521914127,"results":"84","hashOfConfig":"57"},{"size":10484,"mtime":1615521914127,"results":"85","hashOfConfig":"57"},{"size":6796,"mtime":1615521914127,"results":"86","hashOfConfig":"57"},{"size":8751,"mtime":1615996898472,"results":"87","hashOfConfig":"57"},{"size":12785,"mtime":1620614630392,"results":"88","hashOfConfig":"57"},{"size":680,"mtime":1616992543224,"results":"89","hashOfConfig":"57"},{"size":2887,"mtime":1618166474978,"results":"90","hashOfConfig":"57"},{"size":1598,"mtime":1616086085665,"results":"91","hashOfConfig":"57"},{"size":1108,"mtime":1618773840843,"results":"92","hashOfConfig":"57"},{"size":4770,"mtime":1618168706124,"results":"93","hashOfConfig":"57"},{"size":716,"mtime":1616996078943,"results":"94","hashOfConfig":"57"},{"size":3714,"mtime":1616995647345,"results":"95","hashOfConfig":"57"},{"size":4004,"mtime":1620614249971,"results":"96","hashOfConfig":"57"},{"size":1311,"mtime":1616996994871,"results":"97","hashOfConfig":"57"},{"size":2266,"mtime":1618164765034,"results":"98","hashOfConfig":"57"},{"size":1767,"mtime":1620604422065,"results":"99","hashOfConfig":"57"},{"size":1674,"mtime":1618381801615,"results":"100","hashOfConfig":"57"},{"size":1675,"mtime":1618772704551,"results":"101","hashOfConfig":"57"},{"size":10274,"mtime":1620599868550,"results":"102","hashOfConfig":"57"},{"size":1570,"mtime":1619004282992,"results":"103","hashOfConfig":"57"},{"size":1550,"mtime":1619004837343,"results":"104","hashOfConfig":"57"},{"size":1520,"mtime":1619005727958,"results":"105","hashOfConfig":"57"},{"size":1672,"mtime":1619091230480,"results":"106","hashOfConfig":"57"},{"size":6831,"mtime":1620183812223,"results":"107","hashOfConfig":"57"},{"size":3496,"mtime":1620474957382,"results":"108","hashOfConfig":"57"},{"size":9655,"mtime":1620618462695,"results":"109","hashOfConfig":"57"},{"size":7856,"mtime":1620615428553,"results":"110","hashOfConfig":"57"},{"size":3489,"mtime":1620615467438,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1wh7eu1",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"114"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"114"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"114"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/node/aplicacion/mdc-softare-frontend/src/index.js",[],["243","244"],"/home/node/aplicacion/mdc-softare-frontend/src/App.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/themeConfig.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/store.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/Container.jsx",["245","246","247"],"/home/node/aplicacion/mdc-softare-frontend/src/redux/PersonaActivistaDucks.js",["248","249","250","251"],"//Bilbiotecas\nimport axios from 'axios'\n\n//Variables\nconst dataInicial = {\n\tarray: [],\n\treload: false\n}\n\n//Constantes acciones\nconst RETRIEVE_PERSONA_ACTIVISTA = 'RETRIEVE_PERSONA_ACTIVISTA';\nconst CREATE_PERSONA_ACTIVISTA = 'CREATE_PERSONA_ACTIVISTA';\nconst UPDATE_PERSONA_ACTIVISTA = 'UPDATE_PERSONA_ACTIVISTA';\nconst DELETE_PERSONA_ACTIVISTA = 'DELETE_PERSONA_ACTIVISTA';\nconst UPDATE_VOTO = 'UPDATE_VOTO';\n\n//Reducer\nexport default function modelNameReducer(state = dataInicial, action) {\n\tswitch (action.type) {\n\t\tcase RETRIEVE_PERSONA_ACTIVISTA:\n\t\t\treturn { ...state, array: action.payload, reload: action.reload }\n\t\tcase CREATE_PERSONA_ACTIVISTA:\n\t\t\treturn { ...state, array: action.payload, reload: action.reload }\n\t\tcase UPDATE_PERSONA_ACTIVISTA:\n\t\t\treturn { ...state, array: action.payload, reload: action.reload }\n\t\tcase DELETE_PERSONA_ACTIVISTA:\n\t\t\treturn { ...state, array: action.payload, reload: action.reload }\n\t\tcase UPDATE_VOTO:\n\t\t\treturn { ...state, array: action.payload, reload: action.reload }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n//============= Acciones =============\n\n//RETRIEVE\nexport const retrievePersonaActivistaAccion = (model) => async (dispatch, getState) => {\n\t//Definimos query\n\tconst query = `\n        query{\n            findPersonasActivistas(id: \"${model.id}\"){\n                ...PersonaActivista\n                subactivistas{\n                    ...PersonaActivista\n                        subactivistas{\n                            ...PersonaActivista\n                    }        \n                }        \n            }\n        }\n        \n        fragment PersonaActivista on PersonaActivista {\n\t\t\t\tid:idpersonaactivista\n\t\t\t\tidpuesto\n\t\t\t\tidrol\n\t\t\t\tidjefe\n\t\t\t\tpuesto\n\t\t\t\tnombre\n\t\t\t\tapellidopaterno\n\t\t\t\tapellidomaterno\n\t\t\t\talias\n\t\t\t\ttelefono\n\t\t\t\tnumero\n\t\t\t\tcalle\n\t\t\t\tcruzamientouno\n\t\t\t\tcruzamientodos\n\t\t\t\tcolonia\n\t\t\t\tmanzana\n\t\t\t\tseccion\n\t\t\t\tocupacion\n\t\t\t\tedad\n\t\t\t\tgenero\n\t\t\t\tclaveelector\n\t\t\t\tlocalidad\n\t\t\t\tmunicipio\n\t\t\t\tvotado\n\t\t\t\thoravoto\n            }`;\n\n\t//Intentamos accion\n\ttry {\n\t\tconst res = await axios.post(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n\t\t\tquery,\n\t\t},\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': localStorage.getItem(`${process.env.REACT_APP_TOKEN_NAME}`),\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t}\n\t\t\t})\n\t\tdispatch({\n\t\t\ttype: RETRIEVE_PERSONA_ACTIVISTA,\n\t\t\tpayload: res.data.data.findPersonasActivistas,\n\t\t\treload: false,\n\t\t})\n\n\n\t}//Procesamos error si existe\n\tcatch (error) {\n\t\tconsole.log(error)\n\t}\n}\n\n//UPDATE VOTO\nexport const updateVotoAccion = (model) => async (dispatch, getState) => {\n\t//Definimos query\n\tconst query = `\n        mutation {  \n            updatePersonaActivista(input: \n            {\n                idpersonaactivista: \"${model.id}\", votado: ${model.votado}\n              })\n          }`;\n\n\tconst { array } = getState().personasActivistas;\n\n\t//Intentamos accion\n\ttry {\n\t\tconst res = await axios.post(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n\t\t\tquery,\n\t\t},\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': localStorage.getItem(`${process.env.REACT_APP_TOKEN_NAME}`),\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t}\n\t\t\t})\n\t\tdispatch({\n\t\t\ttype: UPDATE_VOTO,\n\t\t\tpayload: array,\n\t\t\treload: true\n\t\t})\n\n\t}//Procesamos error si existe\n\tcatch (error) {\n\t\tconsole.log(error)\n\t}\n}\n\n//CREATE\nexport const createPersonaActivistaAccion = (model) => async (dispatch, getState) => {\n\t//Definimos query\n\tconst query = `mutation createPersonaActivistaMutation{\n\t\tcreatePersonaActivistaMutation(input: {                \n\t\t\tidpuesto: ${model.idpuesto === \"\" ? null : `\"${model.idpuesto}\"`}\n\t\t\tidrol: ${model.idrol === \"\" ? null : `\"${model.idrol}\"`}\n\t\t\tpuesto: ${model.puesto === \"\" ? null : `\"${model.puesto}\"`}\n\t\t\tnombre: ${model.nombre === \"\" ? null : `\"${model.nombre}\"`}\n\t\t\tapellidos: ${model.apellidos === \"\" ? null : `\"${model.apellidos}\"`}\n\t\t\ttelefono: ${model.telefono === \"\" ? null : `\"${model.telefono}\"`}\n\t\t\tdomicilio: ${model.domicilio === \"\" ? null : `\"${model.domicilio}\"`}\n\t\t\tseccion: ${model.seccion === \"\" ? null : `\"${model.seccion}\"`}\n\t\t\tocupacion: ${model.ocupacion === \"\" ? null : `\"${model.ocupacion}\"`}\n\t\t\tedad: ${model.edad === undefined ? 18 : model.edad}\t\t\t\n\t\t\tgenero: ${model.genero === \"\" ? null : `\"${model.genero}\"`}\n\t\t\tclaveelector: ${model.claveelector === \"\" ? null : `\"${model.claveelector}\"`}\n\t\t\tlocalidad: ${model.localidad === \"\" ? null : `\"${model.localidad}\"`}\n\t\t\tmunicipio: ${model.municipio === \"\" ? \"\" : `\"${model.municipio}\"`}\n\t\t\t}){\n\t\t\t...PersonaActivista        \n\t\t}\n\t}\n\t\n\tfragment PersonaActivista on PersonaActivista {\n\t\t\t\tid:idpersonaactivista\n\t\t\t\tidpuesto\n\t\t\t\tidrol\n\t\t\t\tidjefe\n\t\t\t\tpuesto\n\t\t\t\tnombre\n\t\t\t\tapellidopaterno\n\t\t\t\tapellidomaterno\n\t\t\t\talias\n\t\t\t\ttelefono\n\t\t\t\tnumero\n\t\t\t\tcalle\n\t\t\t\tcruzamientouno\n\t\t\t\tcruzamientodos\n\t\t\t\tcolonia\n\t\t\t\tmanzana\n\t\t\t\tseccion\n\t\t\t\tocupacion\n\t\t\t\tedad\n\t\t\t\tgenero\n\t\t\t\tclaveelector\n\t\t\t\tlocalidad\n\t\t\t\tmunicipio\n\t\t\t\tvotado\n\t\t\t\thoravoto    \n\t\t}`;\n\n\n\tconst { array } = getState().personasActivistas;\n\n\t//Intentamos accion\n\ttry {\n\t\tconst res = await axios.post(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n\t\t\tquery,\n\t\t},\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': localStorage.getItem(`${process.env.REACT_APP_TOKEN_NAME}`),\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t}\n\t\t\t})\n\t\tdispatch({\n\t\t\ttype: CREATE_PERSONA_ACTIVISTA,\n\t\t\tpayload: array,\n\t\t\treload: true\n\t\t})\n\n\t}//Procesamos error si existe\n\tcatch (error) {\n\t\tconsole.log(error)\n\t}\n}\n\n//UPDATE\nexport const updatePersonaActivistaAccion = (model) => async (dispatch, getState) => {\n\t//Definimos query\n\tconst query = `mutation updatePersonaActivistaMutation{\n\t\tupdatePersonaActivistaMutation(input: {                \n\t\t\t\tidpersonaactivista:\"${model.id}\"\n\t\t\t\tidpuesto: ${model.idpuesto === \"\" ? null : `\"${model.idpuesto}\"`}\n\t\t\t\tidrol: ${model.idrol === \"\" ? null : `\"${model.idrol}\"`}\n\t\t\t\tpuesto: ${model.puesto === \"\" ? null : `\"${model.puesto}\"`}\n\t\t\t\tnombre: ${model.nombre === \"\" ? null : `\"${model.nombre}\"`}\n\t\t\t\tapellidos: ${model.apellidos === \"\" ? null : `\"${model.apellidos}\"`}\n\t\t\t\ttelefono: ${model.telefono === \"\" ? null : `\"${model.telefono}\"`}\n\t\t\t\tdomicilio: ${model.domicilio === \"\" ? null : `\"${model.domicilio}\"`}\n\t\t\t\tseccion: ${model.seccion === \"\" ? null : `\"${model.seccion}\"`}\n\t\t\t\tocupacion: ${model.ocupacion === \"\" ? null : `\"${model.ocupacion}\"`}\n\t\t\t\tedad: ${model.edad === undefined ? 18 : model.edad}\t\t\t\n\t\t\t\tgenero: ${model.genero === \"\" ? null : `\"${model.genero}\"`}\n\t\t\t\tclaveelector: ${model.claveelector === \"\" ? null : `\"${model.claveelector}\"`}\n\t\t\t\tlocalidad: ${model.localidad === \"\" ? null : `\"${model.localidad}\"`}\n\t\t\t\tmunicipio: ${model.municipio === \"\" ? \"\" : `\"${model.municipio}\"`}\n\t\t\t}){\n\t\t\t...PersonaActivista        \n\t\t}\n\t}\n\t\n\tfragment PersonaActivista on PersonaActivista {\n\t\t\t\tid:idpersonaactivista\n\t\t\t\tidpuesto\n\t\t\t\tidrol\n\t\t\t\tidjefe\n\t\t\t\tpuesto\n\t\t\t\tnombre\n\t\t\t\tapellidopaterno\n\t\t\t\tapellidomaterno\n\t\t\t\talias\n\t\t\t\ttelefono\n\t\t\t\tnumero\n\t\t\t\tcalle\n\t\t\t\tcruzamientouno\n\t\t\t\tcruzamientodos\n\t\t\t\tcolonia\n\t\t\t\tmanzana\n\t\t\t\tseccion\n\t\t\t\tocupacion\n\t\t\t\tedad\n\t\t\t\tgenero\n\t\t\t\tclaveelector\n\t\t\t\tlocalidad\n\t\t\t\tmunicipio\n\t\t\t\tvotado\n\t\t\t\thoravoto   \n\t\t}`;\n\n\n\tconst { array } = getState().personasActivistas;\n\n\t//Intentamos accion\n\ttry {\n\t\tconst res = await axios.post(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n\t\t\tquery,\n\t\t},\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': localStorage.getItem(`${process.env.REACT_APP_TOKEN_NAME}`),\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t}\n\t\t\t})\n\t\tdispatch({\n\t\t\ttype: UPDATE_PERSONA_ACTIVISTA,\n\t\t\tpayload: array,\n\t\t\treload: true\n\t\t})\n\n\t}//Procesamos error si existe\n\tcatch (error) {\n\t\tconsole.log(error)\n\t}\n}\n\n//DELETE\nexport const deletePersonaActivistaAccion = (model) => async (dispatch, getState) => {\n\t//Definimos query\n\tconst query = `mutation deletePersonaActivistaMutation{\n\t\tdeletePersonaActivistaMutation(input: {                \n\t\t\tidpersonaactivista:\"${model.id}\"\n\t\t\t}){\n\t\t\t...PersonaActivista        \n\t\t}\n\t}\n\t\n\tfragment PersonaActivista on PersonaActivista {\n\t\t\t\tid:idpersonaactivista\n\t\t\t\tidpuesto\n\t\t\t\tidrol\n\t\t\t\tidjefe\n\t\t\t\tpuesto\n\t\t\t\tnombre\n\t\t\t\tapellidopaterno\n\t\t\t\tapellidomaterno\n\t\t\t\talias\n\t\t\t\ttelefono\n\t\t\t\tnumero\n\t\t\t\tcalle\n\t\t\t\tcruzamientouno\n\t\t\t\tcruzamientodos\n\t\t\t\tcolonia\n\t\t\t\tmanzana\n\t\t\t\tseccion\n\t\t\t\tocupacion\n\t\t\t\tedad\n\t\t\t\tgenero\n\t\t\t\tclaveelector\n\t\t\t\tlocalidad\n\t\t\t\tmunicipio\n\t\t\t\tvotado\n\t\t\t\thoravoto    \n\t\t}\n\t\n\t`;\n\n\n\tconst { array } = getState().personasActivistas;\n\n\t//Intentamos accion\n\ttry {\n\t\tconst res = await axios.post(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n\t\t\tquery,\n\t\t},\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': localStorage.getItem(`${process.env.REACT_APP_TOKEN_NAME}`),\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t}\n\t\t\t})\n\t\tdispatch({\n\t\t\ttype: DELETE_PERSONA_ACTIVISTA,\n\t\t\tpayload: array,\n\t\t\treload: true\n\t\t})\n\n\t}//Procesamos error si existe\n\tcatch (error) {\n\t\tconsole.log(error)\n\t}\n}","/home/node/aplicacion/mdc-softare-frontend/src/redux/InfoAdicionalCasillasDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/CasillasDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/ReportesRgsDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/VotosHoraDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/LoginDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/EleccionesDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasGeneroDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasEdadDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasSeccionDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/Navbar.jsx",["252"],"import React from 'react'\nimport { AppBar, IconButton, makeStyles, Toolbar, Typography, Button } from '@material-ui/core'\nimport { Menu } from '@material-ui/icons';\nimport { useHistory } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst styles = makeStyles(theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    title: {\n        flexGrow: 1\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            margiLeft: drawerWidth\n        }\n    }\n\n}))\n\nconst Navbar = (props) => {\n\n    const classes = styles()\n\n    const history = useHistory();\n\n    //Login\n    const handleLogin = (path) => {\n        history.push(\"/\");\n    };\n\n    //Logout\n    const handleLogout = (path) => {\n        localStorage.removeItem(`${process.env.REACT_APP_TOKEN_NAME}`);\n        history.push(\"/\");\n        window.location.reload();\n    };\n\n    const imprimeLoginLogout = () => {\n        if (localStorage.getItem(\"token-centinela\") === null) {\n            return (\n                <div>\n                    <Button color='inherit' onClick={handleLogin}>Entrar</Button>\n                </div>\n            )\n        }\n        return (\n            <div>\n                <Button color='inherit' onClick={handleLogout}>Salir</Button>\n            </div>\n        )\n    }\n\n    const imprimeNombreBienvenido = () => {\n        if (localStorage.getItem(\"token-centinela\") != null && localStorage.getItem(\"token-centinela\") != \"undefined\") {\n            const token = localStorage.getItem(`${process.env.REACT_APP_TOKEN_NAME}`);\n            const base64Url = token.split('.')[1];\n            const decodedValue = JSON.parse(window.atob(base64Url));\n\n            return (\n                <div>\n                    <Typography variant='h6' className={classes.title}>\n                        {decodedValue.name.toLowerCase()}\n                    </Typography>\n                </div>\n            )\n        }\n    }\n\n\n    return (\n        <div>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        className={classes.menuButton}\n                        color='inherit'\n                        onClick={() => props.openAction()}\n                    >\n                        <Menu />\n                    </IconButton>\n                    <img src={\"https://res.cloudinary.com/dti7elyha/image/upload/v1617369536/simbolo-centinela_tx0rms.png\"} alt=\"centinel logo\" width=\"35\" height=\"35\" />\n                    <Typography variant='h6' className={classes.title}>\n                        CENTINELA {`${process.env.REACT_APP_CLIENT_NAME}`}\n                    </Typography>\n                    {imprimeNombreBienvenido()}\n                    {imprimeLoginLogout()}\n                </Toolbar>\n\n            </AppBar>\n        </div >\n    )\n}\n\nexport default Navbar\n","/home/node/aplicacion/mdc-softare-frontend/src/components/DrawerCustom.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Home.jsx",["253","254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"import React, { useEffect, Component } from \"react\";\nimport { Divider } from '@material-ui/core'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Link from '@material-ui/core/Link';\nimport { getVotosHoraAccion } from \"../../redux/VotosHoraDucks\";\nimport { getGraficasGeneroAccion, } from \"../../redux/GraficasGeneroDucks\";\nimport { getGraficasEdadAccion, } from \"../../redux/GraficasEdadDucks\";\nimport { getGraficasSeccionAccion, } from \"../../redux/GraficasSeccionDucks\";\n\nimport { getGraficasRolAccion } from \"../../redux/GraficasPorRolDucks\";\nimport { getGraficasEstructuraAccion, } from \"../../redux/GraficasEstructuraDucks\";\nimport { getGraficasTotalSeccionAccion, } from \"../../redux/GraficasTotalSeccionDucks\";\nimport { getGraficasTotalLocalidadAccion, } from \"../../redux/GraficasTotalLocalidadDucks\";\n\n\nimport ComboChart from '../charts/ComboChart';\nimport PieChart from '../charts/PieChart';\nimport MultiAxisChart from '../charts/MultiAxisChart';\nimport PolarChart from '../charts/PolarChart';\nimport Thermometer from 'react-thermometer-chart';\n\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport MaterialTableCpt from '../utils/MaterialTableCpt';\n\n//BreadCums\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const votoshora = useSelector((store) => store.votosHora.array);\n    const reload = useSelector((store) => store.votosHora.reload);\n    const genero = useSelector((store) => store.graficasGenero.array);\n    const edad = useSelector((store) => store.graficasEdad.array);\n    const seccion = useSelector((store) => store.graficasSeccion.array);\n\n\n    const totalrol = useSelector((store) => store.graficasPorRol.array);\n    const totalestructura = useSelector((store) => store.graficasEstructura.array);\n    const totalseccion = useSelector((store) => store.graficasTotalSeccion.array);\n    const totallocalidad = useSelector((store) => store.graficasTotalLocalidad.array);\n\n    useEffect(() => {\n        //Llamamos al store de redux\n        dispatch(getGraficasGeneroAccion());\n        dispatch(getGraficasEdadAccion());\n        dispatch(getGraficasSeccionAccion());\n        dispatch(getVotosHoraAccion());\n\n        dispatch(getGraficasRolAccion());\n        dispatch(getGraficasEstructuraAccion());\n        dispatch(getGraficasTotalSeccionAccion());\n        dispatch(getGraficasTotalLocalidadAccion());\n\n        const id = setInterval(() => {\n            dispatch(getVotosHoraAccion());\n\n        }, 30000);\n\n        return () => clearInterval(id);\n    }, []);\n\n    //Reasignamos datos id para mapear tipo arbol\n    const preparaDatos = () => {\n        //reasignamos id\n        totalrol.map(\n            item => {\n                item.id = item.idpuesto\n            }\n        )\n    }\n\n\n    const getHoras = () => {\n        const horas = [];\n        votoshora.map(item => {\n            horas.push(item.hora)\n        });\n        return horas;\n    }\n\n    const getVotos = () => {\n        const votos = [];\n        votoshora.map(item => {\n            votos.push(item.votos)\n        });\n        return votos;\n    }\n\n    //============== GENERO ==============\n    const getTagsGenero = () => {\n        const tagsGenero = [];\n        genero.map(item => {\n            tagsGenero.push(item.genero === 'F' ? 'Mujeres' : 'Hombres')\n        });\n        return tagsGenero;\n    }\n\n    const getVotosGenero = () => {\n        const votos = [];\n        genero.map(item => {\n            votos.push(item.votos)\n        });\n        return votos;\n    }\n\n    const getColoresGenero = () => {\n        const colores = [];\n        let color = '';\n        genero.map(item => {\n            color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n            colores.push(color)\n        });\n        return colores;\n    }\n    //============== GENERO ==============\n\n    //============== EDAD ==============\n    const getTagsEdad = () => {\n        const tagsEdad = [];\n        edad.map(item => {\n            tagsEdad.push(item.edad)\n        });\n        return tagsEdad;\n    }\n\n    const getVotosEdad = () => {\n        const votos = [];\n        edad.map(item => {\n            votos.push(item.votos)\n        });\n        return votos;\n    }\n\n    const getColoresEdad = () => {\n        const colores = [];\n        let color = '';\n        edad.map(item => {\n            color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n            colores.push(color)\n        });\n        return colores;\n    }\n    //============== EDAD ==============\n\n    //============== SECCION ==============\n    const getTagsSeccion = () => {\n        const tagsSeccion = [];\n        seccion.map(item => {\n            tagsSeccion.push(item.seccion)\n        });\n        return tagsSeccion;\n    }\n\n    const getVotosSeccion = () => {\n        const votos = [];\n        seccion.map(item => {\n            votos.push(item.votos)\n        });\n        return votos;\n    }\n\n    const getColoresSeccion = () => {\n        const colores = [];\n        let color = '';\n        seccion.map(item => {\n            color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n            colores.push(color)\n        });\n        return colores;\n    }\n    //============== SECCION ==============\n\n\n    //============== TABLAS ==============\n    // VOTOS ROL\n    const columns = [\n        {\n            field: \"id\",\n            title: \"ID\",\n            headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 },\n            hidden: true,\n        },\n        {\n            field: \"nombre\",\n            title: \"NOMBRE\",\n            headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 },\n        },\n        {\n            field: \"idrol\",\n            title: \"IDROL\",\n            headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 },\n            hidden: true,\n        },\n        {\n            field: \"idpuesto\",\n            title: \"IDPUESTO\",\n            headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 },\n            hidden: true,\n        },\n        {\n            field: \"idjefe\",\n            title: \"IDJEFE\",\n            headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 },\n            hidden: true,\n        },\n        {\n            field: \"votados\",\n            title: \"VOTADOS\",\n            headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 },\n        },\n        {\n            field: \"novotados\",\n            title: \"SIN VOTAR\",\n            headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 },\n        },\n        {\n            field: \"total\",\n            title: \"TOTAL\",\n            headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 },\n        },\n        {\n            field: \"porcentaje\",\n            title: \"PORCENTAJE AVANCE\",\n            headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 },\n        },\n    ];\n\n    const columnsestructura = [\n        {\n            field: \"id\",\n            headerName: \"Coordinadores\",\n            width: 180,\n        },\n        {\n            field: \"activista\",\n            headerName: \"Activistas\",\n            width: 180,\n        },\n        {\n            field: \"promovido\",\n            headerName: \"Promovidos\",\n            width: 180,\n        },\n        {\n            field: \"total\",\n            headerName: \"Total de personas\",\n            width: 180,\n        },\n\n    ];\n\n    const columnstotalseccion = [\n        {\n            field: \"id\",\n            headerName: \"Seccion\",\n            width: 180,\n        },\n        {\n            field: \"votados\",\n            headerName: \"Votados\",\n            width: 180,\n        },\n        {\n            field: \"novotados\",\n            headerName: \"No votados\",\n            width: 180,\n        },\n        {\n            field: \"total\",\n            headerName: \"Total\",\n            width: 180,\n        },\n\n\n    ];\n\n    const columnstotallocalidad = [\n        {\n            field: \"localidad\",\n            headerName: \"Localidad\",\n            width: 180,\n        },\n        {\n            field: \"id\",\n            headerName: \"id\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"votados\",\n            headerName: \"Votados\",\n            width: 180,\n        },\n        {\n            field: \"novotados\",\n            headerName: \"No votados\",\n            width: 180,\n        },\n        {\n            field: \"total\",\n            headerName: \"Total\",\n            width: 180,\n        },\n\n\n    ];\n    //============== TABLAS ==============\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/home\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Home\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            {preparaDatos()}\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Votos / Horas: </h1>\n                <ComboChart horas={getHoras()} votos={getVotos()} />\n            </div>\n\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Hombres / Mujeres: </h1>\n                <PieChart data={getVotosGenero()} tags={getTagsGenero()} colors={getColoresGenero()} />\n            </div>\n            <Divider />\n\n            <Divider />\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Votos / Edades: </h1>\n                <MultiAxisChart data={getVotosEdad()} tags={getTagsEdad()} colors={getColoresEdad()} label={\"Votos por edad\"} />\n            </div>\n            <Divider />\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Votos / Sección: </h1>\n                <PolarChart data={getVotosSeccion()} tags={getTagsSeccion()} colors={getColoresSeccion()} label={\"Votos por seccion\"} />\n            </div>\n\n\n            <Divider />\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Tabla totales / Estructura: </h1>\n                <DataGridCpt columns={columnsestructura} actArray={totalestructura} reload={reload} />\n            </div>\n\n            <Divider />\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Tabla totales / Seccion: </h1>\n                <DataGridCpt columns={columnstotalseccion} actArray={totalseccion} reload={reload} />\n            </div>\n            <Divider />\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Tabla totales / Localidad: </h1>\n                <DataGridCpt columns={columnstotallocalidad} actArray={totallocalidad} reload={reload} />\n            </div>\n\n            <Divider />\n\n            <MaterialTableCpt title={\"Votos Responsable\"} columns={columns} data={totalrol} parentChildData={(row, rows) => rows.find(a => a.id === row.idjefe)} />\n\n            {/* <Divider />\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Total de votos: </h1>\n                <Thermometer width=\"10%\" height=\"10%\" steps={5} minValue={0} maxValue={100} currentValue={15} />\n            </div> */}\n        </div>\n    )\n}\n\nexport default Home\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos.jsx",["268"],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/CapturaDeVotos.jsx",["269","270","271"],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Graficas.jsx",["272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"import React, { useEffect, Component } from \"react\";\nimport { Divider } from '@material-ui/core'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGraficasGeneroAccion, } from \"../../redux/GraficasGeneroDucks\";\nimport { getGraficasEdadAccion, } from \"../../redux/GraficasEdadDucks\";\nimport { getGraficasSeccionAccion, } from \"../../redux/GraficasSeccionDucks\";\nimport PieChart from '../charts/PieChart';\nimport MultiAxisChart from '../charts/MultiAxisChart';\nimport PolarChart from '../charts/PolarChart';\n\n//BreadCums\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\nconst Graficas = () => {\n    const dispatch = useDispatch();\n    const genero = useSelector((store) => store.graficasGenero.array);\n    const edad = useSelector((store) => store.graficasEdad.array);\n    const seccion = useSelector((store) => store.graficasSeccion.array);\n\n\n\n    useEffect(() => {\n        dispatch(getGraficasGeneroAccion());\n        dispatch(getGraficasEdadAccion());\n        dispatch(getGraficasSeccionAccion());\n\n\n        const idgenero = setInterval(() => {\n            dispatch(getGraficasGeneroAccion());\n\n        }, 30000);\n\n        return () => clearInterval(idgenero);\n\n        const idedad = setInterval(() => {\n            dispatch(getGraficasEdadAccion());\n\n        }, 30000);\n\n        return () => clearInterval(idedad);\n\n        const idseccion = setInterval(() => {\n            dispatch(getGraficasSeccionAccion());\n\n        }, 30000);\n\n        return () => clearInterval(idseccion);\n    }, []);\n\n    //============== GENERO ==============\n    const getTagsGenero = () => {\n        const tagsGenero = [];\n        genero.map(item => {\n            tagsGenero.push(item.genero === 'F' ? 'Mujeres' : 'Hombres')\n        });\n        return tagsGenero;\n    }\n\n    const getVotosGenero = () => {\n        const votos = [];\n        genero.map(item => {\n            votos.push(item.votos)\n        });\n        return votos;\n    }\n\n    const getColoresGenero = () => {\n        const colores = [];\n        let color = '';\n        genero.map(item => {\n            color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n            colores.push(color)\n        });\n        return colores;\n    }\n    //============== GENERO ==============\n\n    //============== EDAD ==============\n    const getTagsEdad = () => {\n        const tagsEdad = [];\n        edad.map(item => {\n            tagsEdad.push(item.edad)\n        });\n        return tagsEdad;\n    }\n\n    const getVotosEdad = () => {\n        const votos = [];\n        edad.map(item => {\n            votos.push(item.votos)\n        });\n        return votos;\n    }\n\n    const getColoresEdad = () => {\n        const colores = [];\n        let color = '';\n        edad.map(item => {\n            color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n            colores.push(color)\n        });\n        return colores;\n    }\n    //============== EDAD ==============\n\n    //============== SECCION ==============\n    const getTagsSeccion = () => {\n        const tagsSeccion = [];\n        seccion.map(item => {\n            tagsSeccion.push(item.seccion)\n        });\n        return tagsSeccion;\n    }\n\n    const getVotosSeccion = () => {\n        const votos = [];\n        seccion.map(item => {\n            votos.push(item.votos)\n        });\n        return votos;\n    }\n\n    const getColoresSeccion = () => {\n        const colores = [];\n        let color = '';\n        seccion.map(item => {\n            color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n            colores.push(color)\n        });\n        return colores;\n    }\n    //============== SECCION ==============\n\n\n\n\n    return (\n        <div >\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/promovidos\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Graficas\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            Hombres / Mujeres\n            <PieChart data={getVotosGenero()} tags={getTagsGenero()} colors={getColoresGenero()} />\n            <Divider />\n            Votos / Edades\n            <Divider />\n            <MultiAxisChart data={getVotosEdad()} tags={getTagsEdad()} colors={getColoresEdad()} label={\"Votos por edad\"} />\n            <Divider />\n                Votos / Seccion\n            <PolarChart data={getVotosSeccion()} tags={getTagsSeccion()} colors={getColoresSeccion()} label={\"Votos por seccion\"} />\n            <Divider />\n\n        </div>\n    )\n}\n\nexport default Graficas\n\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas.jsx",["286"],"import React, { useEffect } from \"react\";\nimport {\n    getCasillaAccion, createCasillaAccion,\n    updateCasillaAccion, deleteCasillaAccion\n} from \"../../redux/CasillasDucks\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MenuButtonListCpt from '../utils/MenuButtonListCpt';\n\nconst Casillas = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n    const casillas = useSelector((store) => store.casillas.array);\n    const reload = useSelector((store) => store.casillas.reload);\n\n    //Nombre modelo\n    const modelo = \"casillas\";\n\n    //Acciones repository    \n    const handleCreate = (casilla) => {\n        dispatch(createCasillaAccion(casilla));\n    };\n\n    const handleUpdate = (casilla) => {\n        dispatch(updateCasillaAccion(casilla));\n    };\n\n    const handleDelete = (casilla) => {\n        dispatch(deleteCasillaAccion(casilla));\n    };\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Casilla\n    const casilla = {\n        id: \"\",\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(getCasillaAccion(casilla));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        dispatch(getCasillaAccion(casilla));\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"ID\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"actions\",\n            headerName: \"ACCION\",\n            width: 140,\n            disableClickEventBubbling: true,\n            renderCell: (params: CellParams) => {\n                const api: GridApi = params.api;\n                const fields = api\n                    .getAllColumns()\n                    .map((c) => c.field)\n                    .filter((c) => c !== \"__check__\" && !!c);\n                const thisRow = {};\n\n                fields.forEach((f) => {\n                    thisRow[f] = params.getValue(f);\n                });\n\n                const acciones = [\n                    // {\n                    //     id: thisRow.id,\n                    //     action: \"get\",\n                    //     title: \"ver\",\n                    //     handle: null,\n                    //     rowdata: thisRow,\n                    //     path: `/${modelo}/get/${thisRow.id}`,\n                    // },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"create\",\n                        title: \"crear\",\n                        handle: handleCreate,\n                        rowdata: thisRow,\n                        path: `${modelo}/create`\n                    },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"update\",\n                        title: \"actualizar\",\n                        handle: handleUpdate,\n                        rowdata: thisRow,\n                        path: `${modelo}/update/${thisRow.id}`\n                    },\n                    // {\n                    //     id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                    //     action: \"delete\",\n                    //     title: \"eliminar\",\n                    //     handle: handleDelete,\n                    //     rowdata: thisRow,\n                    //     path: `${modelo}`\n                    // },\n\n                ]\n                return <MenuButtonListCpt acciones={acciones} create={handleCreate} actualizar={handleUpdate} delete={handleDelete} />\n            },\n        },\n        {\n            field: \"idrepresentantecasilla\",\n            headerName: \"IDREPRESENTANTECASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccionasignada\",\n            headerName: \"SECCIONASIGNADA\",\n            width: 180,\n        },\n        {\n            field: \"cargo\",\n            headerName: \"CARGO\",\n            width: 180,\n        },\n        {\n            field: \"apertura\",\n            headerName: \"APERTURA\",\n            width: 180,\n        },\n        {\n            field: \"horaapertura\",\n            headerName: \"HORAAPERTURA\",\n            width: 180,\n        },\n        {\n            field: \"flujo1230pm\",\n            headerName: \"FLUJO1230PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos1230pm\",\n            headerName: \"PROMOVIDOS1230PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo430pm\",\n            headerName: \"FLUJO430PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos430pm\",\n            headerName: \"PROMOVIDOS430PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo6pm\",\n            headerName: \"FLUJO6PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos6pm\",\n            headerName: \"PROMOVIDOS6PM\",\n            width: 180,\n        },\n        {\n            field: \"cierre6pm\",\n            headerName: \"CIERRE6PM\",\n            width: 180,\n        },\n        {\n            field: \"horacierre\",\n            headerName: \"HORACIERRE\",\n            width: 180,\n        },\n        {\n            field: \"rpp1\",\n            headerName: \"RPP1\",\n            width: 180,\n        },\n        {\n            field: \"rpp2\",\n            headerName: \"RPP2\",\n            width: 180,\n        },\n        {\n            field: \"rps1\",\n            headerName: \"RPS1\",\n            width: 180,\n        },\n        {\n            field: \"incidente\",\n            headerName: \"INCIDENTE\",\n            width: 180,\n        },\n        {\n            field: \"nombre\",\n            headerName: \"NOMBRE\",\n            width: 180,\n        },\n        {\n            field: \"municipio\",\n            headerName: \"MUNICIPIO\",\n            width: 180,\n        },\n        {\n            field: \"localidad\",\n            headerName: \"LOCALIDAD\",\n            width: 180,\n        },\n        {\n            field: \"distrito \",\n            headerName: \"DISTRITO\",\n            width: 180,\n        },\n    ];\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Casillas\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={casillas} reload={reload} />\n        </div>\n    )\n}\n\nexport default Casillas\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/GestionarPromovidos.jsx",["287","288","289"],"import React, { useEffect, useState } from \"react\";\nimport {\n    retrievePersonaActivistaAccion,\n    updateVotoAccion,\n    createPersonaActivistaAccion,\n    updatePersonaActivistaAccion,\n    deletePersonaActivistaAccion\n} from \"../../redux/PersonaActivistaDucks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MaterialTableEditableCpt from '../utils/MaterialTableEditableCpt';\n\n\nconst GestionarPromovidos = () => {\n    const dispatch = useDispatch();\n    const activistas = useSelector((store) => store.personasActivistas.array);\n    const reload = useSelector((store) => store.personasActivistas.reload);\n\n\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Create\n    const handleCreate = (data) => {\n        console.log(\"handleCreate\" + data)\n        dispatch(createPersonaActivistaAccion(data));\n    }\n    //Update\n    const handleUpdate = (data) => {\n        console.log(\"handleUpdate\" + data)\n        dispatch(updatePersonaActivistaAccion(data));\n    }\n    //Delete\n    const handleDelete = (data) => {\n        console.log(\"handleDelete\" + data)\n        dispatch(deletePersonaActivistaAccion(data));\n    }\n\n    //Persona\n    const persona = {\n        id: \"\",\n        votado: 0,\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(retrievePersonaActivistaAccion(persona));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        dispatch(retrievePersonaActivistaAccion(persona));\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"idpuesto\",\n            title: \"IDPUESTO\",\n            width: 120,\n        },\n        {\n            field: \"idrol\",\n            title: \"IDROL\",\n            width: 100,\n        },\n        {\n            field: \"idjefe\",\n            title: \"IDJEFE\",\n            width: 100,\n        },\n        {\n            field: \"puesto\",\n            title: \"PUESTO\",\n            lookup: { 'COORDINADOR': 'COORDINADOR', 'ACTIVISTA': 'ACTIVISTA', 'PROMOVIDO': 'PROMOVIDO' },\n\n        },\n        {\n            field: \"nombre\",\n            title: \"NOMBRE\",\n            width: 200,\n        },\n        {\n            field: \"apellidos\",\n            title: \"APELLIDOS\",\n            width: 200,\n        },\n        {\n            field: \"telefono\",\n            title: \"TELEFONO\",\n            width: 180,\n        },\n        {\n            field: \"domicilio\",\n            title: \"DOMICILIO\",\n            width: 100,\n        },\n        {\n            field: \"seccion\",\n            title: \"SECCION\",\n            width: 100,\n        },\n        {\n            field: \"ocupacion\",\n            title: \"OCUPACION\",\n            width: 200,\n        },\n        {\n            field: \"edad\",\n            title: \"EDAD\",\n            width: 100,\n        },\n        {\n            field: \"genero\",\n            title: \"GENERO\",\n            width: 100,\n            lookup: { F: 'F', M: 'M' },\n        },\n        {\n            field: \"claveelector\",\n            title: \"CLAVEELECTOR\",\n            width: 180,\n        },\n        {\n            field: \"localidad\",\n            title: \"LOCALIDAD\",\n            width: 180,\n        },\n        {\n            field: \"municipio\",\n            title: \"MUNICIPIO\",\n            width: 180,\n        },\n    ];\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Gestionar promovidos\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <MaterialTableEditableCpt\n                columns={columns}\n                data={activistas}\n                handleCreate={handleCreate}\n                handleUpdate={handleUpdate}\n                handleDelete={handleDelete}\n            >\n            </MaterialTableEditableCpt>\n            {/* <AlertMessagesCpt></AlertMessagesCpt> */}\n        </div >\n    )\n}\n\nexport default GestionarPromovidos","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/IncidentesCasillas.jsx",["290"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerinfoAdicionalCasillaAccion } from \"../../redux/InfoAdicionalCasillasDucks\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nconst IncidentesCasillas = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n    const infoAdicionalCasillas = useSelector((store) => store.infoAdicionalCasillas.array);\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDINFOADICIONALCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"idcasilla\",\n            headerName: \"IDCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccionasignada\",\n            headerName: \"SECCIONASIGNADA\",\n            width: 180,\n        },\n        {\n            field: \"horaapertura\",\n            headerName: \"HORAAPERTURA\",\n            width: 180,\n        },\n        {\n            field: \"horacierre\",\n            headerName: \"HORACIERRE\",\n            width: 180,\n        },\n        {\n            field: \"incidenteuno\",\n            headerName: \"INCIDENTEUNO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidenteuno\",\n            headerName: \"HORAINCIDENTEUNO\",\n            width: 180,\n        },\n        {\n            field: \"incidentedos\",\n            headerName: \"INCIDENTEDOS\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentedos\",\n            headerName: \"HORAINCIDENTEDOS\",\n            width: 180,\n        },\n        {\n            field: \"incidentetres\",\n            headerName: \"INCIDENTETRES\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentetres\",\n            headerName: \"HORAINCIDENTETRES\",\n            width: 180,\n        },\n        {\n            field: \"incidentecuatro\",\n            headerName: \"INCIDENTECUATRO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentecuatro\",\n            headerName: \"HORAINCIDENTECUATRO\",\n            width: 180,\n        },\n        {\n            field: \"incidentecinco\",\n            headerName: \"INCIDENTECINCO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentecinco\",\n            headerName: \"HORAINCIDENTECINCO\",\n            width: 180,\n        },\n        {\n            field: \"prip1\",\n            headerName: \"PRIP1\",\n            width: 180,\n        },\n        {\n            field: \"prip2\",\n            headerName: \"PRIP2\",\n            width: 180,\n        },\n        {\n            field: \"pris1\",\n            headerName: \"PRIS1\",\n            width: 180,\n        },\n        {\n            field: \"pris2\",\n            headerName: \"PRIS2\",\n            width: 180,\n        },\n        {\n            field: \"presidente\",\n            headerName: \"PRESIDENTE\",\n            width: 180,\n        },\n        {\n            field: \"sec1\",\n            headerName: \"SEC1\",\n            width: 180,\n        },\n        {\n            field: \"sec2\",\n            headerName: \"SEC2\",\n            width: 180,\n        },\n        {\n            field: \"esc1\",\n            headerName: \"ESC1\",\n            width: 180,\n        },\n        {\n            field: \"esc2\",\n            headerName: \"ESC2\",\n            width: 180,\n        },\n        {\n            field: \"esc3\",\n            headerName: \"ESC3\",\n            width: 180,\n        },\n        {\n            field: \"sup1\",\n            headerName: \"SUP1\",\n            width: 180,\n        },\n        {\n            field: \"sup2\",\n            headerName: \"SUP2\",\n            width: 180,\n        },\n        {\n            field: \"sup3\",\n            headerName: \"SUP3\",\n            width: 180,\n        },\n    ];\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerinfoAdicionalCasillaAccion());\n    }, []);\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Incidentes Casillas\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={infoAdicionalCasillas} />\n        </div>\n    )\n}\n\nexport default IncidentesCasillas\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones.jsx",["291"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    getEleccionesAccion, createEleccionesAccion,\n    updateEleccionesAccion, deleteEleccionesAccion\n} from \"../../redux/EleccionesDucks\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MenuButtonListCpt from '../utils/MenuButtonListCpt';\n\nconst Elecciones = () => {\n    //Datos iniciales\n    const dispatch = useDispatch();\n    const elecciones = useSelector((store) => store.elecciones.array);\n    const reload = useSelector((store) => store.elecciones.reload);\n\n    //Nombre modelo\n    const modelo = \"elecciones\";\n\n    //Acciones repository    \n    const handleCreate = (eleccion) => {\n        dispatch(createEleccionesAccion(eleccion));\n    };\n\n    const handleUpdate = (eleccion) => {\n        dispatch(updateEleccionesAccion(eleccion));\n    };\n\n    const handleDelete = (eleccion) => {\n        dispatch(deleteEleccionesAccion(eleccion));\n    };\n\n    //eleccion\n    const eleccion = {\n        id: \"\",\n    };\n\n    //Carga iniciales\n    useEffect(() => {\n        dispatch(getEleccionesAccion(eleccion));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        dispatch(getEleccionesAccion(eleccion));\n    }\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"ID\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"actions\",\n            headerName: \"ACCION\",\n            width: 140,\n            disableClickEventBubbling: true,\n            renderCell: (params: CellParams) => {\n                const api: GridApi = params.api;\n                const fields = api\n                    .getAllColumns()\n                    .map((c) => c.field)\n                    .filter((c) => c !== \"__check__\" && !!c);\n                const thisRow = {};\n\n                fields.forEach((f) => {\n                    thisRow[f] = params.getValue(f);\n                });\n\n                const acciones = [\n                    // {\n                    //     id: thisRow.id,\n                    //     action: \"get\",\n                    //     title: \"ver\",\n                    //     handle: null,\n                    //     rowdata: thisRow,\n                    //     path: `/${modelo}/get/${thisRow.id}`,\n                    // },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"create\",\n                        title: \"crear\",\n                        handle: handleCreate,\n                        rowdata: thisRow,\n                        path: `${modelo}/create`\n                    },\n                    {\n                        id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                        action: \"update\",\n                        title: \"actualizar\",\n                        handle: handleUpdate,\n                        rowdata: thisRow,\n                        path: `${modelo}/update/${thisRow.id}`\n                    },\n                    // {\n                    //     id: \"00e64e87-ac11-4465-9556-5a5a28fbc7b5\",\n                    //     action: \"delete\",\n                    //     title: \"eliminar\",\n                    //     handle: handleDelete,\n                    //     rowdata: thisRow,\n                    //     path: `${modelo}`\n                    // },\n\n                ]\n                return <MenuButtonListCpt acciones={acciones} create={handleCreate} actualizar={handleUpdate} delete={handleDelete} />\n            },\n        },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 180,\n\n        },\n        {\n            field: \"pan\",\n            headerName: \"PAN\",\n            width: 180,\n\n        },\n        {\n            field: \"pri\",\n            headerName: \"PRI\",\n            width: 180,\n\n        },\n        {\n            field: \"prd\",\n            headerName: \"PRD\",\n            width: 180,\n\n        },\n        {\n            field: \"pvem\",\n            headerName: \"PVEM\",\n            width: 180,\n\n        },\n        {\n            field: \"pt\",\n            headerName: \"PT\",\n            width: 180,\n\n        },\n        {\n            field: \"movciudadano\",\n            headerName: \"MOVCIUDADANO\",\n            width: 180,\n\n        },\n        {\n            field: \"nuevaalianza\",\n            headerName: \"NUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"morena\",\n            headerName: \"MORENA\",\n            width: 180,\n\n        },\n        {\n            field: \"encuentrosocial\",\n            headerName: \"ENCUENTROSOCIAL\",\n            width: 180,\n\n        },\n        {\n            field: \"panprd\",\n            headerName: \"PANPRD\",\n            width: 180,\n\n        },\n        {\n            field: \"pripvemnuevaalianza\",\n            headerName: \"PRIPVEMNUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"pripvem\",\n            headerName: \"PRIPVEM\",\n            width: 180,\n\n        },\n        {\n            field: \"prinuevaalianza\",\n            headerName: \"PRINUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"pvemnuevaalianza\",\n            headerName: \"PVEMNUEVAALIANZA\",\n            width: 180,\n\n        },\n        {\n            field: \"candidatosnoregistrados\",\n            headerName: \"CANDIDATOSNOREGISTRADOS\",\n            width: 180,\n\n        },\n        {\n            field: \"nulos\",\n            headerName: \"NULOS\",\n            width: 180,\n\n        },\n        {\n            field: \"total\",\n            headerName: \"TOTAL\",\n            width: 180,\n\n        },\n    ];\n\n\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/promovidos\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Elecciones\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={elecciones} reload={reload} />\n        </div>\n    )\n}\n\nexport default Elecciones","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/SignIn.jsx",["292","293","294","295","296","297"],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos/PromovidoDetalle.jsx",["298","299","300"],"import React, { useEffect } from \"react\";\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { retrievePersonaActivistaAccion, updateVotoAccion } from \"../../../redux/PersonaActivistaDucks\";\nimport MaterialTableCpt from '../../utils/MaterialTableCpt';\nimport PieChart from '../../charts/PieChart';\nimport { ResizableBox } from 'react-resizable';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\n\nconst PromovidoDetalle = () => {\n\t//Store y configuracion REDUX\n\tconst dispatch = useDispatch();\n\tconst activistas = useSelector((store) => store.personasActivistas.array);\n\n\t//BreadCums\n\tfunction handleClick(event) {\n\t\tevent.preventDefault();\n\t\tconsole.info('You clicked a breadcrumb.');\n\t}\n\n\t//Recibimos parametros\n\tconst { id } = useParams()\n\n\t//Persona\n\tconst persona = {\n\t\tid: id,\n\t\tvotado: 0,\n\t};\n\n\t//Hacemos carga inicial\n\tuseEffect(() => {\n\t\tpersona.id = id;\n\t\tdispatch(retrievePersonaActivistaAccion(persona));\n\t}, []);\n\n\t//Reasignamos datos id para mapear tipo arbol\n\tconst preparaDatos = () => {\n\t\t//reasignamos id\n\t\tactivistas.map(\n\t\t\titem => {\n\t\t\t\titem.id = item.idpuesto\n\t\t\t}\n\t\t)\n\t}\n\n\tconst imprimeDatosActivista = () => {\n\t\tif (activistas[0] === undefined) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t< h5 > Cargando... </h5 >\n\t\t\t\t</div>\n\t\t\t)\n\t\t} return (\n\t\t\t<div>\n\t\t\t\t< h5 > Nombre: {activistas[0].nombre}</h5 >\n\t\t\t\t< h5 > Telefono: {activistas[0].telefono}</h5 >\n\t\t\t\t< h5 > Domicilio: {activistas[0].domicilio}</h5 >\n\t\t\t</div>\n\t\t)\n\n\t}\n\n\tconst suma = () => {\n\t\tlet suma = 0;\n\t\tactivistas.forEach(item =>\n\t\t\tsuma = suma + item.votado,\n\t\t);\n\t\treturn suma;\n\t}\n\n\tconst getColores = () => {\n\t\tconst colores = [];\n\t\tlet color1 = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n\t\tlet color2 = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n\t\tcolores.push(color1)\n\t\tcolores.push(color2)\n\n\t\treturn colores;\n\t}\n\t//Columnas\n\tconst columns = [\n\t\t{ title: 'VOTADO', field: 'votado', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'IDPUESTO', field: 'idpuesto', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'IDROL', field: 'idrol', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'IDJEFE', field: 'idjefe', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'PUESTO', field: 'puesto', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t\t{ title: 'NOMBRE', field: 'nombre', headerStyle: { minWidth: 200 }, cellStyle: { minWidth: 200 }, },\n\t\t{ title: \"APELLIDO P\", field: \"apellidopaterno\", headerStyle: { minWidth: 200 }, cellStyle: { minWidth: 200 }, },\n\t\t{ title: \"APELLIDO M\", field: \"apellidomaterno\", headerStyle: { minWidth: 200 }, cellStyle: { minWidth: 200 }, },\n\t\t{ title: \"alias\", field: \"alias\", headerStyle: { minWidth: 200 }, cellStyle: { minWidth: 200 }, },\n\t\t{ title: 'TELEFONO', field: 'telefono', headerStyle: { minWidth: 140 }, cellStyle: { minWidth: 140 }, },\n\t\t{ title: 'DOMICILIO', field: 'domicilio', headerStyle: { minWidth: 280 }, cellStyle: { minWidth: 280 }, },\n\n\t\t{ title: \"NUMERO\", field: \"numero\", width: 180, },\n\t\t{ title: \"CALLE\", field: \"calle\", width: 180, },\n\t\t{ title: \"CRUZAMIENTOUNO\", field: \"cruzamientouno\", width: 180, },\n\t\t{ title: \"CRUZAMIENTODOS\", field: \"cruzamientodos\", width: 180, },\n\t\t{ title: \"COLONIA\", field: \"colonia\", width: 180, },\n\t\t{ title: \"MANZANA\", field: \"manzana\", width: 180, },\n\n\t\t{ title: 'SECCION', field: 'seccion', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'OCUPACION', field: 'ocupacion', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t\t{ title: 'EDAD', field: 'edad', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'GENERO', field: 'genero', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n\t\t{ title: 'CLAVEELECTOR', field: 'claveelector', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t\t{ title: 'LOCALIDAD', field: 'localidad', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t\t{ title: 'MUNICIPIO', field: 'municipio', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t\t{ title: 'HORAVOTO', field: 'horavoto', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n\t];\n\n\treturn (\n\n\n\n\t\t<div >\n\t\t\t<Breadcrumbs aria-label=\"breadcrumb\">\n\t\t\t\t<Link color=\"inherit\" href=\"/home\" >\n\t\t\t\t\tHome\n      \t\t\t</Link>\n\t\t\t\t<Link color=\"inherit\" href=\"/promovidos\" >\n\t\t\t\t\tPromovidos\n      \t\t\t</Link>\n\t\t\t\t<Link\n\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\thref=\"/promovidos/promovidosdetalle/\"\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\taria-current=\"page\"\n\t\t\t\t>\n\t\t\t\t\tDetalle\n      \t\t\t</Link>\n\n\t\t\t</Breadcrumbs><br />\n\t\t\t{preparaDatos()}\n\t\t\t{imprimeDatosActivista()}\n\t\t\t<ResizableBox width={600} height={400}\n\t\t\t\tminConstraints={[100, 100]} maxConstraints={[600, 400]}>\n\t\t\t\t<h4>Meta: {activistas.length}</h4>\n\t\t\t\t<PieChart data={[suma(), (activistas.length - suma())]} tags={[\"Votados\", \"No Votados\"]} colors={getColores()} />\n\t\t\t</ResizableBox>\n\n\t\t\t<MaterialTableCpt title={\"Detalles promovido\"} columns={columns} data={activistas} parentChildData={(row, rows) => rows.find(a => a.id === row.idjefe)} />\n\n\t\t</div>\n\n\t)\n}\n\nexport default PromovidoDetalle\n\n\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/CreateCasilla.jsx",["301"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useForm } from 'react-hook-form'\nimport { createCasillaAccion } from \"../../../redux/CasillasDucks\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n            border: \"\",\n        },\n    },\n}));\n\n//BreadCums\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\n\n\n\nconst CreateCasilla = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n\n    //Handle Create\n    const handleCreate = (casilla) => {\n        dispatch(createCasillaAccion(casilla));\n    };\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n    const onSubmit = (data, e) => {\n        handleCreate(data);\n        e.target.reset();\n    }\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link color=\"inherit\" href=\"/casillas\" >\n                    Casillas\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas/create\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Crear casilla\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Crear casilla\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.idrepresentantecasilla?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Representante obligatorio\" } })} name=\"idrepresentantecasilla\" required id=\"idrepresentantecasilla\" label=\"Representante de casilla\" defaultValue=\"\" />\n                        <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.seccionasignada?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Seccion obligatoria\" } })} name=\"seccionasignada\" required id=\"seccionasignada\" label=\"Seccion asignada\" defaultValue=\"\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"cargo\" id=\"cargo\" label=\"Cargo\" defaultValue=\"\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"apertura\" id=\"apertura\" label=\"Apertura\" defaultValue=\"\" />\n                        <TextField\n                            inputRef={register({ required: { value: false } })}\n                            name=\"horaapertura\"\n                            id=\"horaapertura\"\n                            label=\"Hora apertura\"\n                            type=\"datetime-local\"\n                            defaultValue=\"2021-01-31T10:30\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </div>\n                </div>\n\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Flujo de votantes\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"flujo1230pm\" id=\"flujo1230pm\" label=\"Flujo 12-30\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"promovidos1230pm\" id=\"promovidos1230pm\" label=\"Promovidos 12-30\" defaultValue=\"\" variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"flujo430pm\" id=\"flujo430pm\" label=\"Flujo 16-30\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"promovidos430pm\" id=\"promovidos430pm\" label=\"Promovidos 16-30\" defaultValue=\"\" variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"flujo6pm\" id=\"flujo6pm\" label=\"Flujo 18\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"promovidos6pm\" id=\"promovidos6pm\" label=\"Promovidos 18\" defaultValue=\"\" variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n                    </div>\n                </div>\n\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Cierre de casilla\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"cierre6pm\" id=\"cierre6pm\" label=\"Cierre 18\" defaultValue=\"\" variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n                        <TextField\n                            inputRef={register({ required: { value: false } })}\n                            name=\"horacierre\"\n                            id=\"horacierre\"\n                            label=\"Hora cierre\"\n                            type=\"datetime-local\"\n                            defaultValue=\"2021-01-31T10:30\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Representantes de casilla\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"rpp1\" id=\"rpp1\" label=\"Representante 1\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"rpp2\" id=\"rpp2\" label=\"Representante 2\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"rps1\" id=\"rps1\" label=\"Suplente 1\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Representantes de casilla\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"incidente\" id=\"incidente\" label=\"Incidente\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"nombre\" id=\"nombre\" label=\"Nombre\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"municipio\" id=\"municipio\" label=\"Municipio\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"localidad\" id=\"localidad\" label=\"Localidad\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"distrito\" id=\"distrito\" label=\"Distrito\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n                <button className=\"btn btn-primary\">Enviar</button>\n            </form>\n        </div >\n    );\n}\n\nexport default CreateCasilla","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas/UpdateCasilla.jsx",["302","303"],"import React, { useEffect, useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useForm } from 'react-hook-form'\nimport { updateCasillaAccion, getCasillaAccion } from \"../../../redux/CasillasDucks\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n            border: \"\",\n        },\n    },\n}));\n\n\nconst UpdateCasilla = () => {\n    //Store y configuracion REDUX\n    const dispatch = useDispatch();\n    const casillas = useSelector((store) => store.casillas.array);\n    const reload = useSelector((store) => store.casillas.reload);\n\n    //Recibimos parametros\n    const { id } = useParams()\n\n    //casilla\n    const casilla = {\n        id: id,\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        casilla.id = id;\n        dispatch(getCasillaAccion(casilla));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        casilla.id = id;\n        dispatch(getCasillaAccion(casilla));\n    }\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Handle update\n    const handleupdate = (data) => {\n        dispatch(updateCasillaAccion(data));\n    };\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n    const onSubmit = (data, e) => {\n        handleupdate(data);\n        e.target.reset();\n    }\n\n    const classes = useStyles();\n\n    //Form\n    const imprimeForm = () => {\n        if (casillas.length !== 1) {\n            return (\n                <div>\n                    < h5 > Cargando... </h5 >\n                </div>\n            )\n        }\n        return (\n\n            < div >\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Link color=\"inherit\" href=\"/home\" >\n                        Home\n      \t\t\t</Link>\n                    <Link color=\"inherit\" href=\"/casillas\" >\n                        Casillas\n      \t\t\t</Link>\n                    <Link\n                        color=\"textPrimary\"\n                        href=\"/casillas/update\"\n                        onClick={handleClick}\n                        aria-current=\"page\"\n                    >\n                        Actualizar casilla\n      \t\t\t</Link>\n                </Breadcrumbs><br />\n\n                <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Actualizar casilla\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.idcasilla?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Id casilla\" } })} name=\"id\" required id=\"id\" label=\"id\" defaultValue={casillas[0].id} style={{ display: 'none' }} />\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.idrepresentantecasilla?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Representante obligatorio\" } })} name=\"idrepresentantecasilla\" required id=\"idrepresentantecasilla\" label=\"Representante de casilla\" defaultValue={casillas[0].idrepresentantecasilla} />\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.seccionasignada?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Seccion obligatoria\" } })} name=\"seccionasignada\" required id=\"seccionasignada\" label=\"Seccion asignada\" defaultValue={casillas[0].seccionasignada} />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"cargo\" id=\"cargo\" label=\"Cargo\" defaultValue={casillas[0].cargo} />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"apertura\" id=\"apertura\" label=\"Apertura\" defaultValue={casillas[0].apertura} />\n                            <TextField\n                                inputRef={register({ required: { value: false } })}\n                                name=\"horaapertura\"\n                                id=\"horaapertura\"\n                                label=\"Hora apertura\"\n                                type=\"datetime-local\"\n                                defaultValue={casillas[0].horaapertura}\n                                className={classes.textField}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Flujo de votantes\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"flujo1230pm\" id=\"flujo1230pm\" label=\"Flujo 12-30\" defaultValue={casillas[0].flujo1230pm} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"promovidos1230pm\" id=\"promovidos1230pm\" label=\"Promovidos 12-30\" defaultValue={casillas[0].promovidos1230pm} variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"flujo430pm\" id=\"flujo430pm\" label=\"Flujo 16-30\" defaultValue={casillas[0].flujo430pm} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"promovidos430pm\" id=\"promovidos430pm\" label=\"Promovidos 16-30\" defaultValue={casillas[0].promovidos430pm} variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"flujo6pm\" id=\"flujo6pm\" label=\"Flujo 18\" defaultValue={casillas[0].flujo6pm} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"promovidos6pm\" id=\"promovidos6pm\" label=\"Promovidos 18\" defaultValue={casillas[0].promovidos6pm} variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n                        </div>\n                    </div>\n\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Cierre de casilla\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"cierre6pm\" id=\"cierre6pm\" label=\"Cierre 18\" defaultValue={casillas[0].cierre6pm} variant=\"outlined\" type=\"number\" pattern=\"[0-9]\\d*\" />\n                            <TextField\n                                inputRef={register({ required: { value: false } })}\n                                name=\"horacierre\"\n                                id=\"horacierre\"\n                                label=\"Hora cierre\"\n                                type=\"datetime-local\"\n                                defaultValue={casillas[0].horacierre}\n                                className={classes.textField}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Representantes de casilla\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"rpp1\" id=\"rpp1\" label=\"Representante 1\" defaultValue={casillas[0].rpp1} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"rpp2\" id=\"rpp2\" label=\"Representante 2\" defaultValue={casillas[0].rpp2} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"rps1\" id=\"rps1\" label=\"Suplente 1\" defaultValue={casillas[0].rps1} variant=\"filled\" />\n                        </div>\n                    </div>\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Representantes de casilla\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"incidente\" id=\"incidente\" label=\"Incidente\" defaultValue={casillas[0].incidente} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"nombre\" id=\"nombre\" label=\"Nombre\" defaultValue={casillas[0].nombre} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"municipio\" id=\"municipio\" label=\"Municipio\" defaultValue={casillas[0].municipio} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"localidad\" id=\"localidad\" label=\"Localidad\" defaultValue={casillas[0].localidad} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"distrito\" id=\"distrito\" label=\"Distrito\" defaultValue={casillas[0].distrito} variant=\"filled\" />\n                        </div>\n                    </div>\n                    <button className=\"btn btn-primary\">Enviar</button>\n                </form>\n            </div >\n\n        )\n\n    }\n\n    return (\n        <div >\n            { imprimeForm()}\n        </div>\n    );\n}\n\nexport default UpdateCasilla","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones/CreateEleccion.jsx",["304"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useForm } from 'react-hook-form'\nimport { createEleccionesAccion } from \"../../../redux/EleccionesDucks\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n            border: \"\",\n        },\n    },\n}));\n\n//BreadCums\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\n\n\n\nconst CreateElecciones = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n\n    //Handle Create\n    const handleCreate = (eleccion) => {\n        dispatch(createEleccionesAccion(eleccion));\n    };\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n    const onSubmit = (data, e) => {\n        handleCreate(data);\n        // e.target.reset();\n    }\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link color=\"inherit\" href=\"/elecciones\" >\n                    Eleccioness\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/elecciones/create\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Crear eleccion\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Crear Eleccion\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.seccion?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Seccion obligatoria\" } })} name=\"seccion\" required id=\"seccion\" label=\"Seccion\" defaultValue=\"\" />\n                    </div>\n                </div>\n\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Partidos bloque 1\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pan\" id=\"pan\" label=\"Pan\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pri\" id=\"pri\" label=\"Pri\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"prd\" id=\"prd\" label=\"Prd\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pvem\" id=\"pvem\" label=\"Pvem\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pt\" id=\"pt\" label=\"PT\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Partidos bloque 2\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"movciudadano\" id=\"movciudadano\" label=\"Mov Ciudadano\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"nuevaalianza\" id=\"nuevaalianza\" label=\"Nueva Alianza\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"morena\" id=\"morena\" label=\"Morena\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"encuentrosocial\" id=\"encuentrosocial\" label=\"Encuentro Social\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"panprd\" id=\"panprd\" label=\"Pan-PRD\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Partidos bloque 3\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12 \">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pripvemnuevaalianza\" id=\"pripvemnuevaalianza\" label=\"Pri-Pvem-Nueva Alianza\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pripvem\" id=\"pripvem\" label=\"Pri Pvem\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"prinuevaalianza\" id=\"prinuevaalianza\" label=\"Pri-Nueva Alianza\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"pvemnuevaalianza\" id=\"pvemnuevaalianza\" label=\"Pvem-Nueva Alianza\" defaultValue=\"\" variant=\"filled\" />\n\n                        <TextField inputRef={register({ required: { value: false } })} name=\"candidatosnoregistrados\" id=\"candidatosnoregistrados\" label=\"Candidatos No Reg.\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n\n                <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                    <h3><div className=\"card-header \">\n                        Totales\n                    </div></h3>\n\n                    <div className=\"card-body col-lg-12\">\n                        <TextField inputRef={register({ required: { value: false } })} name=\"nulos\" id=\"nulos\" label=\"Nulos\" defaultValue=\"\" variant=\"filled\" />\n                        <TextField inputRef={register({ required: { value: false } })} name=\"total\" id=\"total\" label=\"Total\" defaultValue=\"\" variant=\"filled\" />\n                    </div>\n                </div>\n                <button className=\"btn btn-primary\">Enviar</button>\n            </form>\n        </div >\n    );\n}\n\nexport default CreateElecciones","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones/UpdateEleccion.jsx",["305","306"],"import React, { useEffect, useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { useForm } from 'react-hook-form'\nimport { updateEleccionesAccion, getEleccionesAccion } from \"../../../redux/EleccionesDucks\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n            border: \"\",\n        },\n    },\n}));\n\n\nconst UpdateElecciones = () => {\n    //Store y configuracion REDUX\n    const dispatch = useDispatch();\n    const elecciones = useSelector((store) => store.elecciones.array);\n    const reload = useSelector((store) => store.elecciones.reload);\n\n    //Recibimos parametros\n    const { id } = useParams()\n\n    //eleccion\n    const eleccion = {\n        id: id,\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        eleccion.id = id;\n        dispatch(getEleccionesAccion(eleccion));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        eleccion.id = id;\n        dispatch(getEleccionesAccion(eleccion));\n    }\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Handle update\n    const handleupdate = (data) => {\n        dispatch(updateEleccionesAccion(data));\n    };\n\n    //react-hook-forms\n    const { register, errors, handleSubmit } = useForm();\n    const onSubmit = (data, e) => {\n        handleupdate(data);\n        e.target.reset();\n    }\n\n    const classes = useStyles();\n\n    //Form\n    const imprimeForm = () => {\n        if (elecciones.length !== 1) {\n            return (\n                <div>\n                    < h5 > Cargando... </h5 >\n                </div>\n            )\n        }\n        return (\n\n            <div>\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    <Link color=\"inherit\" href=\"/home\" >\n                        Home\n      \t\t\t</Link>\n                    <Link color=\"inherit\" href=\"/elecciones\" >\n                        Eleccioness\n      \t\t\t</Link>\n                    <Link\n                        color=\"textPrimary\"\n                        href=\"/elecciones/create\"\n                        onClick={handleClick}\n                        aria-current=\"page\"\n                    >\n                        Actualizar eleccion\n      \t\t\t</Link>\n                </Breadcrumbs><br />\n\n                <form onSubmit={handleSubmit(onSubmit)} className={classes.root} noValidate autoComplete=\"off\">\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Actualizar Eleccion\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.id?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Id elecciones\" } })} name=\"id\" required id=\"id\" label=\"id\" defaultValue={elecciones[0].id} style={{ display: 'none' }} />\n                            <h4><span className=\"text-danger text-small d-block mb-2\">{errors?.seccion?.message}</span></h4><TextField inputRef={register({ required: { value: true, message: \"Seccion obligatoria\" } })} name=\"seccion\" required id=\"seccion\" label=\"Seccion\" defaultValue={elecciones[0].seccion} />\n                        </div>\n                    </div>\n\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Partidos bloque 1\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pan\" id=\"pan\" label=\"Pan\" defaultValue={elecciones[0].pan} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pri\" id=\"pri\" label=\"Pri\" defaultValue={elecciones[0].pri} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"prd\" id=\"prd\" label=\"Prd\" defaultValue={elecciones[0].prd} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pvem\" id=\"pvem\" label=\"Pvem\" defaultValue={elecciones[0].pvem} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pt\" id=\"pt\" label=\"PT\" defaultValue={elecciones[0].pt} variant=\"filled\" />\n                        </div>\n                    </div>\n\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Partidos bloque 2\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"movciudadano\" id=\"movciudadano\" label=\"Mov Ciudadano\" defaultValue={elecciones[0].movciudadano} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"nuevaalianza\" id=\"nuevaalianza\" label=\"Nueva Alianza\" defaultValue={elecciones[0].nuevaalianza} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"morena\" id=\"morena\" label=\"Morena\" defaultValue={elecciones[0].morena} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"encuentrosocial\" id=\"encuentrosocial\" label=\"Encuentro Social\" defaultValue={elecciones[0].encuentrosocial} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"panprd\" id=\"panprd\" label=\"Pan-PRD\" defaultValue={elecciones[0].panprd} variant=\"filled\" />\n                        </div>\n                    </div>\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Partidos bloque 3\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12 \">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pripvemnuevaalianza\" id=\"pripvemnuevaalianza\" label=\"Pri-Pvem-Nueva Alianza\" defaultValue={elecciones[0].pripvemnuevaalianza} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pripvem\" id=\"pripvem\" label=\"Pri Pvem\" defaultValue={elecciones[0].pripvem} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"prinuevaalianza\" id=\"prinuevaalianza\" label=\"Pri-Nueva Alianza\" defaultValue={elecciones[0].prinuevaalianza} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"pvemnuevaalianza\" id=\"pvemnuevaalianza\" label=\"Pvem-Nueva Alianza\" defaultValue={elecciones[0].pvemnuevaalianza} variant=\"filled\" />\n\n                            <TextField inputRef={register({ required: { value: false } })} name=\"candidatosnoregistrados\" id=\"candidatosnoregistrados\" label=\"Candidatos No Reg.\" defaultValue={elecciones[0].candidatosnoregistrados} variant=\"filled\" />\n                        </div>\n                    </div>\n\n                    <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\" >\n                        <h3><div className=\"card-header \">\n                            Totales\n                    </div></h3>\n\n                        <div className=\"card-body col-lg-12\">\n                            <TextField inputRef={register({ required: { value: false } })} name=\"nulos\" id=\"nulos\" label=\"Nulos\" defaultValue={elecciones[0].nulos} variant=\"filled\" />\n                            <TextField inputRef={register({ required: { value: false } })} name=\"total\" id=\"total\" label=\"Total\" defaultValue={elecciones[0].total} variant=\"filled\" />\n                        </div>\n                    </div>\n                    <button className=\"btn btn-primary\">Enviar</button>\n                </form>\n            </div >\n\n        )\n\n    }\n\n    return (\n        <div >\n            { imprimeForm()}\n        </div>\n    );\n}\n\nexport default UpdateElecciones","/home/node/aplicacion/mdc-softare-frontend/src/components/ListIcons.jsx",["307","308","309"],"/home/node/aplicacion/mdc-softare-frontend/src/components/charts/PieChart.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MenuButtonListCpt.jsx",["310"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useHistory } from \"react-router-dom\";\n\nconst MenuButtonListCpt = (props) => {\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\tconst history = useHistory();\n\n\tconst handleClick = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleAction = (path) => {\n\t\thistory.push(path);\n\t\thandleClose();\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n\t\t\t\tMenu\n\t\t\t</Button>\n\t\t\t<Menu\n\t\t\t\tid=\"simple-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tprops.acciones.map(function (item, index) {\n\t\t\t\t\t\tif (item.action === \"get\") {\n\t\t\t\t\t\t\treturn <MenuItem key={index} onClick={() => handleAction(item.path)} > {item.title}</MenuItem>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (item.action === \"create\") {\n\t\t\t\t\t\t\treturn <MenuItem key={index} onClick={() => handleAction(item.path)} > {item.title}</MenuItem>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (item.action === \"update\") {\n\t\t\t\t\t\t\treturn <MenuItem key={index} onClick={() => handleAction(item.path)} > {item.title}</MenuItem>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (item.action === \"delete\") {\n\t\t\t\t\t\t\treturn <MenuItem key={index} onClick={() => item.handle(item.rowdata)}>{item.title}</MenuItem>;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t<MenuItem key=\"id-close\" onClick={handleClose}>cerrar</MenuItem>\n\t\t\t</Menu>\n\t\t</div >\n\t);\n}\n\nexport default MenuButtonListCpt\n","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/DataGridCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableEditableCpt.jsx",["311","312"],"import React from 'react'\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from '@material-ui/core'\n\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\n\nconst styles = makeStyles(theme => ({\n    root: {\n        width: \"100%\",\n        marginTop: theme.spacing(3),\n        overflowX: \"auto\"\n    },\n    table: {\n        width: \"100%\",\n        minWidth: 700\n    }\n\n}))\nconst MaterialTableEditableCpt = (props) => {\n    const classes = styles()\n    const { useState } = React;\n    const [data, setData] = useState(props.data);\n    return (\n\n        <div style={{ height: 400, width: '70%' }}>\n            <MaterialTable\n                title=\"Gestion de promovidos\"\n                columns={props.columns}\n                icons={tableIcons}\n                options={{\n                    sorting: true\n                }}\n                data={props.data}\n                options={{\n                    rowStyle: {\n                        fontSize: 12,\n                    },\n                }}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                props.handleCreate(newData);\n                                setData([...data, newData]);\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataUpdate = [...data];\n                                const index = oldData.tableData.id;\n                                dataUpdate[index] = newData;\n                                props.handleUpdate(newData);\n                                setData([...dataUpdate]);\n                                resolve();\n                            }, 1000)\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                                const dataDelete = [...data];\n                                const index = oldData.tableData.id;\n                                dataDelete.splice(index, 1);\n                                props.handleDelete(oldData);\n                                setData([...dataDelete]);\n                                resolve()\n                            }, 1000)\n                        }),\n                }}\n            />\n        </div>\n\n    )\n}\n\nexport default MaterialTableEditableCpt","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/PolarChart.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/charts/MultiAxisChart.jsx",["313","314"],"import React from 'react';\nimport { Chart } from 'primereact/chart';\n\nconst MultiAxis = (props) => {\n    const multiAxisData = {\n        labels: props.tags,\n        datasets: [{\n            label: props.label,\n            backgroundColor: props.colors,\n            yAxisID: 'y-axis-1',\n            data: props.data\n        }]\n    };\n\n    const getLightTheme = () => {\n        let basicOptions = {\n            legend: {\n                labels: {\n                    fontColor: '#495057'\n                }\n            },\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        fontColor: '#495057'\n                    }\n                }],\n                yAxes: [{\n                    ticks: {\n                        fontColor: '#495057'\n                    }\n                }]\n            }\n        };\n\n        let stackedOptions = {\n            tooltips: {\n                mode: 'index',\n                intersect: false\n            },\n            responsive: true,\n            scales: {\n                xAxes: [{\n                    stacked: true,\n                    ticks: {\n                        fontColor: '#495057'\n                    },\n                    gridLines: {\n                        color: '#ebedef'\n                    }\n                }],\n                yAxes: [{\n                    stacked: true,\n                    ticks: {\n                        fontColor: '#495057'\n                    },\n                    gridLines: {\n                        color: '#ebedef'\n                    }\n                }]\n            },\n            legend: {\n                labels: {\n                    fontColor: '#495057'\n                }\n            }\n        };\n\n        let multiAxisOptions = {\n            responsive: true,\n            tooltips: {\n                mode: 'index',\n                intersect: true\n            },\n            scales: {\n                xAxes: [{\n                    ticks: {\n                        fontColor: '#495057'\n                    },\n                    gridLines: {\n                        color: '#ebedef'\n                    }\n                }],\n                yAxes: [{\n                    type: 'linear',\n                    display: true,\n                    position: 'left',\n                    id: 'y-axis-1',\n                    ticks: {\n                        min: 0,\n                        max: Math.max.apply(null, props.data),\n                        fontColor: '#495057'\n                    },\n                    gridLines: {\n                        color: '#ebedef'\n                    }\n                },\n                {\n                    type: 'linear',\n                    display: true,\n                    position: 'right',\n                    id: 'y-axis-2',\n                    gridLines: {\n                        drawOnChartArea: false,\n                        color: '#ebedef'\n                    },\n                    ticks: {\n                        min: 0,\n                        max: Math.max.apply(null, props.data),\n                        fontColor: '#495057'\n                    }\n                }]\n            },\n            legend: {\n                labels: {\n                    fontColor: '#495057'\n                }\n            }\n        };\n\n        return {\n            basicOptions,\n            stackedOptions,\n            multiAxisOptions\n        }\n    }\n\n    const { basicOptions, multiAxisOptions, stackedOptions } = getLightTheme();\n\n    return (\n        <div>\n            <div className=\"card\">\n                <Chart type=\"bar\" data={multiAxisData} options={multiAxisOptions} />\n            </div>\n        </div>\n    )\n}\n\nexport default MultiAxis","/home/node/aplicacion/mdc-softare-frontend/src/components/charts/HorizontalChart.jsx",["315","316"],"/home/node/aplicacion/mdc-softare-frontend/src/components/charts/ComboChart.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ReportesRgs.jsx",["317"],"import React, { useEffect } from \"react\";\nimport { obtenerReportesRgsAccion } from \"../../redux/ReportesRgsDucks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nconst ReportesRgs = () => {\n    //Configuraciones iniciales\n    const dispatch = useDispatch();\n    const reportesRgs = useSelector((store) => store.reportesRgs.array);\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerReportesRgsAccion());\n    }, []);\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDREPORTESRGS\",\n            width: 180,\n        },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 180,\n        },\n        {\n            field: \"idlistanom\",\n            headerName: \"IDLISTANOM\",\n            width: 180,\n        },\n        {\n            field: \"puesto\",\n            headerName: \"PUESTO\",\n            width: 180,\n        },\n        {\n            field: \"nombre\",\n            headerName: \"NOMBRE\",\n            width: 180,\n        },\n        {\n            field: \"telefono\",\n            headerName: \"TELEFONO\",\n            width: 180,\n        },\n        {\n            field: \"claveelector\",\n            headerName: \"CLAVEELECTOR\",\n            width: 180,\n        },\n        {\n            field: \"observaciones\",\n            headerName: \"OBSERVACIONES\",\n            width: 180,\n        }\n    ];\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/casillas\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Reportes rgs\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            <DataGridCpt columns={columns} actArray={reportesRgs} />\n        </div >\n    )\n}\n\nexport default ReportesRgs","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasPorRolDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasTotalSeccionDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasEstructuraDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Progreso.jsx",["318","319","320","321","322","323","324","325","326","327"],"import React, { useEffect, Component } from \"react\";\nimport { Divider } from '@material-ui/core'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Link from '@material-ui/core/Link';\n\nimport { getGraficasProgresoLocalidadAccion } from \"../../redux/GraficasProgresoLocalidadDucks\";\nimport { getGraficasProgresoSeccionAccion } from \"../../redux/GraficasProgresoSeccionDucks.js\";\nimport { getGraficasProgresoEdadAccion } from \"../../redux/GraficasProgresoEdadDucks.js\";\nimport { retrievePersonaActivistaAccion } from \"../../redux/PersonaActivistaDucks\";\nimport { getGraficasEstructuraAccion, } from \"../../redux/GraficasEstructuraDucks\";\n\n\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport MaterialTableCpt from '../utils/MaterialTableCpt';\nimport MultiAxisChart from '../charts/MultiAxisChart';\nimport PolarChart from '../charts/PolarChart';\n\n//BreadCums\nfunction handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n}\n\nconst Progreso = () => {\n    const dispatch = useDispatch();\n\n    const progresolocalidad = useSelector((store) => store.graficasProgresoLocalidad.array);\n    const progresoseccion = useSelector((store) => store.graficasProgresoSeccion.array);\n    const progresoedad = useSelector((store) => store.graficasProgresoEdad.array);\n    const activistas = useSelector((store) => store.personasActivistas.array);\n    const totalestructura = useSelector((store) => store.graficasEstructura.array);\n\n    //Persona\n    const persona = {\n        id: \"\",\n        votado: 0,\n    };\n\n    useEffect(() => {\n\n\n        dispatch(getGraficasProgresoLocalidadAccion());\n        dispatch(getGraficasProgresoSeccionAccion());\n        dispatch(getGraficasProgresoEdadAccion());\n        dispatch(retrievePersonaActivistaAccion(persona));\n        dispatch(getGraficasEstructuraAccion());\n\n        const id = setInterval(() => {\n            dispatch(getGraficasProgresoLocalidadAccion());\n        }, 30000);\n\n\n\n\n        return () => clearInterval(id);\n    }, []);\n\n    //Reasignamos datos id para mapear tipo arbol\n    const preparaDatos = () => {\n        //reasignamos id\n        activistas.map(\n            item => {\n                item.id = item.idpuesto\n            }\n        )\n    }\n\n\n    //============== GRAFICAS ==============\n    //============== SECCION ==============\n    const getTagsSeccion = () => {\n        const tagsSeccion = [];\n        progresoseccion.map(item => {\n            tagsSeccion.push(\"Seccion: \" + item.seccion)\n        });\n        return tagsSeccion;\n    }\n\n    const getTotalSeccion = () => {\n        const total = [];\n        progresoseccion.map(item => {\n            total.push(item.total)\n        });\n        return total;\n    }\n\n    const getColoresSeccion = () => {\n        const colores = [];\n        let color = '';\n        progresoseccion.map(item => {\n            color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n            colores.push(color)\n        });\n        return colores;\n    }\n    //============== SECCION ==============\n\n    //============== EDAD ==============\n    const getTagsEdad = () => {\n        const tagsEdad = [];\n        progresoedad.map(item => {\n            tagsEdad.push(\"Edad: \" + item.edad)\n        });\n        return tagsEdad;\n    }\n\n    const getVotosEdad = () => {\n        const total = [];\n        progresoedad.map(item => {\n            total.push(item.total)\n        });\n        return total;\n    }\n\n    const getColoresEdad = () => {\n        const colores = [];\n        let color = '';\n        progresoedad.map(item => {\n            color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n            colores.push(color)\n        });\n        return colores;\n    }\n    //============== EDAD ==============\n    //============== GRAFICAS ==============\n\n    //============== TABLAS ==============    \n    //============== PROGRESO ============\n    //Columnas\n    const columns = [\n        { title: 'VOTADO', field: 'votado', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n        // { title: 'IDPUESTO', field: 'idpuesto', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n        // { title: 'IDROL', field: 'idrol', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n        // { title: 'IDJEFE', field: 'idjefe', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n        // { title: 'PUESTO', field: 'puesto', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n        { title: 'NOMBRE', field: 'nombre', headerStyle: { minWidth: 200 }, cellStyle: { minWidth: 50 }, },\n        { title: \"APELLIDO P\", field: \"apellidopaterno\", headerStyle: { minWidth: 200 }, cellStyle: { minWidth: 50 }, },\n        { title: \"APELLIDO M\", field: \"apellidomaterno\", headerStyle: { minWidth: 200 }, cellStyle: { minWidth: 50 }, },\n        { title: \"ALIAS\", field: \"alias\", headerStyle: { minWidth: 200 }, cellStyle: { minWidth: 50 }, },\n        { title: 'TELEFONO', field: 'telefono', headerStyle: { minWidth: 140 }, cellStyle: { minWidth: 50 }, },\n        // { title: 'DOMICILIO', field: 'domicilio', headerStyle: { minWidth: 280 }, cellStyle: { minWidth: 280 }, },\n        // { title: \"NUMERO\", field: \"numero\", width: 180, },\n        // { title: \"CALLE\", field: \"calle\", width: 180, },\n        // { title: \"CRUZAMIENTOUNO\", field: \"cruzamientouno\", width: 180, },\n        // { title: \"CRUZAMIENTODOS\", field: \"cruzamientodos\", width: 180, },\n        // { title: \"COLONIA\", field: \"colonia\", width: 180, },\n        // { title: \"MANZANA\", field: \"manzana\", width: 180, },\n        // { title: 'SECCION', field: 'seccion', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n        { title: 'OCUPACION', field: 'ocupacion', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 50 }, },\n        { title: 'EDAD', field: 'edad', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 50 }, },\n        { title: 'GENERO', field: 'genero', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 50 }, },\n        // { title: 'CLAVEELECTOR', field: 'claveelector', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n        { title: 'LOCALIDAD', field: 'localidad', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 50 }, },\n        // { title: 'MUNICIPIO', field: 'municipio', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n        // { title: 'HORAVOTO', field: 'horavoto', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n    ];\n\n    const columnsprogresolocalidad = [\n        {\n            field: \"id\",\n            headerName: \"ID\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"localidad\",\n            headerName: \"Localidad\",\n            width: 180,\n        },\n        {\n            field: \"total\",\n            headerName: \"Total\",\n            width: 180,\n        },\n    ];\n\n    const columnsprogresoseccion = [\n        {\n            field: \"id\",\n            headerName: \"ID\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"seccion\",\n            headerName: \"Seccion\",\n            width: 180,\n        },\n        {\n            field: \"total\",\n            headerName: \"Total\",\n            width: 180,\n        },\n    ];\n\n    const columnsprogresoedad = [\n        {\n            field: \"id\",\n            headerName: \"ID\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"edad\",\n            headerName: \"Edad\",\n            width: 180,\n        },\n        {\n            field: \"total\",\n            headerName: \"Total\",\n            width: 180,\n        },\n    ];\n\n    //============== TABLAS ==============\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/home\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Progreso\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n\n            {preparaDatos()}\n            <Divider />\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Progreso Localidad: </h1>\n                <DataGridCpt columns={columnsprogresolocalidad} actArray={progresolocalidad} height={300} />\n\n            </div>\n\n            <Divider />\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Progreso Seccion: </h1>\n                <DataGridCpt columns={columnsprogresoseccion} actArray={progresoseccion} height={400} />\n\n            </div>\n\n            <Divider />\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Gráficas / Sección: </h1>\n                <PolarChart data={getTotalSeccion()} tags={getTagsSeccion()} colors={getColoresSeccion()} label={\"Votos por seccion\"} />\n            </div>\n\n\n            <Divider />\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Progreso Edad: </h1>\n                <DataGridCpt columns={columnsprogresoedad} actArray={progresoedad} height={400} />\n\n            </div>\n            <Divider />\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Gráficas / Edades: </h1>\n                <MultiAxisChart data={getVotosEdad()} tags={getTagsEdad()} colors={getColoresEdad()} label={\"Progeso por edad\"} />\n            </div>\n\n\n            <Divider />\n            <MaterialTableCpt title={\"Detalles promovido\"} columns={columns} data={activistas} parentChildData={(row, rows) => rows.find(a => a.id === row.idjefe)} />\n            {/* <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\"> */}\n\n\n            {/* </div> */}\n\n            {/* <Divider />\n            <div className=\"card col-sm-10 col-md-10 col-lg-10 mb-5\">\n                <h1 className=\"centerText\">Total de votos: </h1>\n                <Thermometer width=\"10%\" height=\"10%\" steps={5} minValue={0} maxValue={100} currentValue={15} />\n            </div> */}\n        </div>\n    )\n}\n\nexport default Progreso\n","/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasProgresoLocalidadDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasProgresoSeccionDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasProgresoEdadDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/GraficasTotalLocalidadDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ConsultaPromovidos.jsx",["328"],"import React, { useEffect } from \"react\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { retrievePersonaActivistaAccion, updateVotoAccion } from \"../../redux/PersonaActivistaDucks\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport MenuButtonListCpt from '../utils/MenuButtonListCpt';\n\nconst ConsultaDePromovidos = () => {\n    const dispatch = useDispatch();\n    const activistas = useSelector((store) => store.personasActivistas.array);\n    const reload = useSelector((store) => store.personasActivistas.reload);\n\n\n    //Nombre modelo\n    const modelo = \"promovidos\";\n\n    //BreadCums\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n\n    //Persona\n    const persona = {\n        id: \"\",\n        votado: 0,\n    };\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(retrievePersonaActivistaAccion(persona));\n    }, []);\n\n    //Verificamos si hubo cambios\n    if (reload) {\n        persona.id = \"\";\n        dispatch(retrievePersonaActivistaAccion(persona));\n    }\n\n    //Realizamos\n    const performAction = (id) => {\n        handleVotado(id);\n    };\n\n    //Handle votado\n    const handleVotado = (thisRow) => {\n        persona.id = thisRow.id;\n        persona.votado = thisRow.votado === 1 ? 0 : 1;\n        dispatch(updateVotoAccion(persona));\n    };\n\n\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"ID\",\n            width: 180,\n            hide: true,\n        },\n        {\n            field: \"actions\",\n            headerName: \"ACCION\",\n            width: 120,\n            disableClickEventBubbling: true,\n            hide: true,\n            renderCell: (params: CellParams) => {\n\n                const api: GridApi = params.api;\n                const fields = api\n                    .getAllColumns()\n                    .map((c) => c.field)\n                    .filter((c) => c !== \"__check__\" && !!c);\n                const thisRow = {};\n\n                fields.forEach((f) => {\n                    thisRow[f] = params.getValue(f);\n                });\n\n                const acciones = [\n                    {\n                        id: thisRow.id,\n                        action: \"get\",\n                        title: \"ver\",\n                        handle: null,\n                        rowdata: thisRow,\n                        path: `/${modelo}/get/${thisRow.id}`,\n                    },\n                ]\n                return <MenuButtonListCpt acciones={acciones} />\n            },\n        },\n        {\n            field: \"votado\",\n            headerName: \"VOTADO\",\n            width: 120,\n            hide: true,\n            renderCell: (params: CellParams) => {\n                const onClick = () => {\n                    const api: GridApi = params.api;\n                    const fields = api\n                        .getAllColumns()\n                        .map((c) => c.field)\n                        .filter((c) => c !== \"__check__\" && !!c);\n                    const thisRow = {};\n\n                    fields.forEach((f) => {\n                        thisRow[f] = params.getValue(f);\n                    });\n\n                    performAction(thisRow);\n                };\n                if (params.value === 1) {\n                    return <DoneAllIcon\n                        style={{ color: '#03a9f4' }}\n                        onClick={onClick}\n                    />;\n                } else {\n                    return <RadioButtonUncheckedIcon\n                        onClick={onClick}\n                    />;\n                }\n\n            },\n        },\n\n        {\n            field: \"idpuesto\",\n            headerName: \"IDPUESTO\",\n            width: 120,\n        },\n        {\n            field: \"nombre\",\n            headerName: \"NOMBRE\",\n            width: 200,\n        },\n        {\n            field: \"apellidopaterno\",\n            headerName: \"APELLIDO P\",\n            width: 200,\n        },\n        {\n            field: \"apellidomaterno\",\n            headerName: \"APELLIDO M\",\n            width: 200,\n        },\n        {\n            field: \"alias\",\n            headerName: \"ALIAS\",\n            width: 200,\n        },\n        {\n            field: \"telefono\",\n            headerName: \"TELEFONO\",\n            width: 180,\n        },\n        { field: \"numero\", headerName: \"NUMERO\", width: 180, },\n        { field: \"calle\", headerName: \"CALLE\", width: 180, },\n        { field: \"cruzamientouno\", headerName: \"CRUZAMIENTOUNO\", width: 180, },\n        { field: \"cruzamientodos\", headerName: \"CRUZAMIENTODOS\", width: 180, },\n        { field: \"colonia\", headerName: \"COLONIA\", width: 180, },\n        { field: \"manzana\", headerName: \"MANZANA\", width: 180, },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 150,\n        },\n        {\n            field: \"ocupacion\",\n            headerName: \"OCUPACION\",\n            width: 200,\n        },\n        {\n            field: \"edad\",\n            headerName: \"EDAD\",\n            width: 100,\n        },\n        {\n            field: \"genero\",\n            headerName: \"GENERO\",\n            width: 120,\n        },\n        {\n            field: \"claveelector\",\n            headerName: \"CLAVEELECTOR\",\n            width: 180,\n        },\n        {\n            field: \"localidad\",\n            headerName: \"LOCALIDAD\",\n            width: 180,\n        },\n        {\n            field: \"municipio\",\n            headerName: \"MUNICIPIO\",\n            width: 180,\n        },\n        {\n            field: \"idrol\",\n            headerName: \"IDROL\",\n            width: 100,\n        },\n        {\n            field: \"idjefe\",\n            headerName: \"IDJEFE\",\n            width: 100,\n        },\n        {\n            field: \"puesto\",\n            headerName: \"PUESTO\",\n            width: 150,\n        },\n        // {\n        // \tfield: \"horavoto\",\n        // \theaderName: \"HORAVOTO\",\n        // \twidth: 180,\n        // },\n\n    ];\n\n    return (\n        <div>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/home\" >\n                    Home\n      \t\t\t</Link>\n                <Link\n                    color=\"textPrimary\"\n                    href=\"/consultapromovidos\"\n                    onClick={handleClick}\n                    aria-current=\"page\"\n                >\n                    Consulta de Promovidos\n      \t\t\t</Link>\n            </Breadcrumbs><br />\n            <DataGridCpt columns={columns} actArray={activistas} reload={reload} />\n        </div>\n    );\n};\n\nexport default ConsultaDePromovidos\n","/home/node/aplicacion/mdc-softare-frontend/src/redux/ApoyoDePromovidosDucks.js",["329"],"//Bilbiotecas\nimport axios from 'axios'\n\n//Variables\nconst dataInicial = {\n    array: [],\n    reload: false\n}\n\n//Constantes acciones\nconst RETRIEVE_APOYO_DE_PROMOVIDOS = 'RETRIEVE_APOYO_DE_PROMOVIDOS';\nconst UPDATE_APOYO_DE_PROMOVIDOS = 'UPDATE_APOYO_DE_PROMOVIDOS';\n\n//Reducer\nexport default function apoyoDePromovidosReducer(state = dataInicial, action) {\n    switch (action.type) {\n        case RETRIEVE_APOYO_DE_PROMOVIDOS:\n            return { ...state, array: action.payload, reload: action.reload }\n        case UPDATE_APOYO_DE_PROMOVIDOS:\n            return { ...state, array: action.payload, reload: action.reload }\n        default:\n            return state\n    }\n}\n//Acciones\n\n//retrieve\nexport const retrieveApoyoDePromovidosAccion = (model) => async (dispatch, getState) => {\n    //Definimos query\n    const query = `\n    query findPersonaApoyo{\n        findPersonaApoyo(input: {        \n                idpersonaapoyo: \"${model.id}\"\n            }){\n            ...PersonaApoyo        \n        }\n    }\n    \n    fragment PersonaApoyo on PersonaApoyo {\n            id:idpersonaapoyo\n            idpersonaactivista\n            nombre\n            apellidopaterno\n            apellidomaterno\n            ine\n            apoyo\n            lider\n            candidato\n            r1\n        }`;\n\n\n\n    //Intentamos accion\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n            query,\n        },\n            {\n                headers: {\n                    'Authorization': localStorage.getItem(`${process.env.REACT_APP_TOKEN_NAME}`),\n                    'Content-Type': 'application/json',\n                }\n            })\n        dispatch({\n            type: RETRIEVE_APOYO_DE_PROMOVIDOS,\n            payload: res.data.data.findPersonaApoyo,\n            reload: false,\n        })\n\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}\n\n//UPDATE\nexport const updateApoyoDePromovidosAccion = (model) => async (dispatch, getState) => {\n    //Definimos query\n    const query = `\n        mutation updatePersonaApoyoMutation{\n            updatePersonaApoyoMutation(input: {                \n                    idpersonaapoyo: \"${model.id}\"\n                    ine: ${model.ine}\n                    apoyo: ${model.apoyo}\n                    lider: ${model.lider}\n                    candidato: ${model.candidato}\n                    r1: ${model.r1}\n                }){\n                ...PersonaApoyo        \n            }\n        }\n        \n        fragment PersonaApoyo on PersonaApoyo {\n                idpersonaapoyo\n                idpersonaactivista\n                nombre\n                apellidopaterno\n                apellidomaterno\n                ine\n                apoyo\n                lider\n                candidato\n                r1\n            }`;\n\n    const { array } = getState().personasActivistas;\n\n    //Intentamos accion\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_URI_GRAPH_QL}`, {\n            query,\n        },\n            {\n                headers: {\n                    'Authorization': localStorage.getItem(`${process.env.REACT_APP_TOKEN_NAME}`),\n                    'Content-Type': 'application/json',\n                }\n            })\n        dispatch({\n            type: UPDATE_APOYO_DE_PROMOVIDOS,\n            payload: array,\n            reload: true\n        })\n\n    }//Procesamos error si existe\n    catch (error) {\n        console.log(error)\n    }\n}\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ApoyoDePromovidos.jsx",["330"],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/AvanceEstructura.jsx",["331","332","333","334","335","336"],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/AvanceEstructuraDetallado.jsx",["337","338"],{"ruleId":"339","replacedBy":"340"},{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","severity":1,"message":"344","line":10,"column":8,"nodeType":"345","messageId":"346","endLine":10,"endColumn":16},{"ruleId":"343","severity":1,"message":"347","line":11,"column":8,"nodeType":"345","messageId":"346","endLine":11,"endColumn":26},{"ruleId":"343","severity":1,"message":"348","line":12,"column":8,"nodeType":"345","messageId":"346","endLine":12,"endColumn":19},{"ruleId":"343","severity":1,"message":"349","line":119,"column":9,"nodeType":"345","messageId":"346","endLine":119,"endColumn":12},{"ruleId":"343","severity":1,"message":"349","line":197,"column":9,"nodeType":"345","messageId":"346","endLine":197,"endColumn":12},{"ruleId":"343","severity":1,"message":"349","line":276,"column":9,"nodeType":"345","messageId":"346","endLine":276,"endColumn":12},{"ruleId":"343","severity":1,"message":"349","line":343,"column":9,"nodeType":"345","messageId":"346","endLine":343,"endColumn":12},{"ruleId":"350","severity":1,"message":"351","line":61,"column":104,"nodeType":"352","messageId":"353","endLine":61,"endColumn":106},{"ruleId":"343","severity":1,"message":"354","line":1,"column":28,"nodeType":"345","messageId":"346","endLine":1,"endColumn":37},{"ruleId":"343","severity":1,"message":"355","line":21,"column":8,"nodeType":"345","messageId":"346","endLine":21,"endColumn":19},{"ruleId":"356","severity":1,"message":"357","line":64,"column":8,"nodeType":"358","endLine":64,"endColumn":10,"suggestions":"359"},{"ruleId":"360","severity":1,"message":"361","line":70,"column":18,"nodeType":"362","messageId":"363","endLine":70,"endColumn":20},{"ruleId":"360","severity":1,"message":"361","line":79,"column":28,"nodeType":"362","messageId":"363","endLine":79,"endColumn":30},{"ruleId":"360","severity":1,"message":"361","line":87,"column":28,"nodeType":"362","messageId":"363","endLine":87,"endColumn":30},{"ruleId":"360","severity":1,"message":"361","line":96,"column":25,"nodeType":"362","messageId":"363","endLine":96,"endColumn":27},{"ruleId":"360","severity":1,"message":"361","line":104,"column":25,"nodeType":"362","messageId":"363","endLine":104,"endColumn":27},{"ruleId":"360","severity":1,"message":"361","line":113,"column":25,"nodeType":"362","messageId":"363","endLine":113,"endColumn":27},{"ruleId":"360","severity":1,"message":"361","line":124,"column":23,"nodeType":"362","messageId":"363","endLine":124,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":132,"column":23,"nodeType":"362","messageId":"363","endLine":132,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":141,"column":23,"nodeType":"362","messageId":"363","endLine":141,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":152,"column":26,"nodeType":"362","messageId":"363","endLine":152,"endColumn":28},{"ruleId":"360","severity":1,"message":"361","line":160,"column":26,"nodeType":"362","messageId":"363","endLine":160,"endColumn":28},{"ruleId":"360","severity":1,"message":"361","line":169,"column":26,"nodeType":"362","messageId":"363","endLine":169,"endColumn":28},{"ruleId":"356","severity":1,"message":"364","line":35,"column":5,"nodeType":"358","endLine":35,"endColumn":7,"suggestions":"365"},{"ruleId":"343","severity":1,"message":"366","line":9,"column":8,"nodeType":"345","messageId":"346","endLine":9,"endColumn":25},{"ruleId":"343","severity":1,"message":"367","line":19,"column":11,"nodeType":"345","messageId":"346","endLine":19,"endColumn":17},{"ruleId":"356","severity":1,"message":"364","line":41,"column":8,"nodeType":"358","endLine":41,"endColumn":10,"suggestions":"368"},{"ruleId":"343","severity":1,"message":"354","line":1,"column":28,"nodeType":"345","messageId":"346","endLine":1,"endColumn":37},{"ruleId":"369","severity":1,"message":"370","line":40,"column":9,"nodeType":"371","messageId":"372","endLine":43,"endColumn":19},{"ruleId":"369","severity":1,"message":"370","line":45,"column":9,"nodeType":"373","messageId":"372","endLine":50,"endColumn":19},{"ruleId":"369","severity":1,"message":"370","line":52,"column":9,"nodeType":"373","messageId":"372","endLine":52,"endColumn":47},{"ruleId":"356","severity":1,"message":"357","line":53,"column":8,"nodeType":"358","endLine":53,"endColumn":10,"suggestions":"374"},{"ruleId":"360","severity":1,"message":"361","line":58,"column":25,"nodeType":"362","messageId":"363","endLine":58,"endColumn":27},{"ruleId":"360","severity":1,"message":"361","line":66,"column":25,"nodeType":"362","messageId":"363","endLine":66,"endColumn":27},{"ruleId":"360","severity":1,"message":"361","line":75,"column":25,"nodeType":"362","messageId":"363","endLine":75,"endColumn":27},{"ruleId":"360","severity":1,"message":"361","line":86,"column":23,"nodeType":"362","messageId":"363","endLine":86,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":94,"column":23,"nodeType":"362","messageId":"363","endLine":94,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":103,"column":23,"nodeType":"362","messageId":"363","endLine":103,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":114,"column":26,"nodeType":"362","messageId":"363","endLine":114,"endColumn":28},{"ruleId":"360","severity":1,"message":"361","line":122,"column":26,"nodeType":"362","messageId":"363","endLine":122,"endColumn":28},{"ruleId":"360","severity":1,"message":"361","line":131,"column":26,"nodeType":"362","messageId":"363","endLine":131,"endColumn":28},{"ruleId":"356","severity":1,"message":"375","line":49,"column":8,"nodeType":"358","endLine":49,"endColumn":10,"suggestions":"376"},{"ruleId":"343","severity":1,"message":"377","line":1,"column":28,"nodeType":"345","messageId":"346","endLine":1,"endColumn":36},{"ruleId":"343","severity":1,"message":"378","line":4,"column":5,"nodeType":"345","messageId":"346","endLine":4,"endColumn":21},{"ruleId":"356","severity":1,"message":"364","line":53,"column":8,"nodeType":"358","endLine":53,"endColumn":10,"suggestions":"379"},{"ruleId":"356","severity":1,"message":"357","line":166,"column":8,"nodeType":"358","endLine":166,"endColumn":10,"suggestions":"380"},{"ruleId":"356","severity":1,"message":"381","line":42,"column":8,"nodeType":"358","endLine":42,"endColumn":10,"suggestions":"382"},{"ruleId":"343","severity":1,"message":"383","line":1,"column":17,"nodeType":"345","messageId":"346","endLine":1,"endColumn":25},{"ruleId":"343","severity":1,"message":"384","line":7,"column":8,"nodeType":"345","messageId":"346","endLine":7,"endColumn":24},{"ruleId":"343","severity":1,"message":"385","line":8,"column":8,"nodeType":"345","messageId":"346","endLine":8,"endColumn":16},{"ruleId":"343","severity":1,"message":"386","line":10,"column":8,"nodeType":"345","messageId":"346","endLine":10,"endColumn":12},{"ruleId":"343","severity":1,"message":"387","line":61,"column":11,"nodeType":"345","messageId":"346","endLine":61,"endColumn":21},{"ruleId":"343","severity":1,"message":"388","line":62,"column":11,"nodeType":"345","messageId":"346","endLine":62,"endColumn":17},{"ruleId":"343","severity":1,"message":"378","line":4,"column":42,"nodeType":"345","messageId":"346","endLine":4,"endColumn":58},{"ruleId":"356","severity":1,"message":"389","line":36,"column":5,"nodeType":"358","endLine":36,"endColumn":7,"suggestions":"390"},{"ruleId":"360","severity":1,"message":"361","line":42,"column":9,"nodeType":"362","messageId":"363","endLine":42,"endColumn":11},{"ruleId":"343","severity":1,"message":"391","line":3,"column":23,"nodeType":"345","messageId":"346","endLine":3,"endColumn":34},{"ruleId":"343","severity":1,"message":"377","line":1,"column":28,"nodeType":"345","messageId":"346","endLine":1,"endColumn":36},{"ruleId":"356","severity":1,"message":"392","line":41,"column":8,"nodeType":"358","endLine":41,"endColumn":10,"suggestions":"393"},{"ruleId":"343","severity":1,"message":"391","line":3,"column":23,"nodeType":"345","messageId":"346","endLine":3,"endColumn":34},{"ruleId":"343","severity":1,"message":"377","line":1,"column":28,"nodeType":"345","messageId":"346","endLine":1,"endColumn":36},{"ruleId":"356","severity":1,"message":"394","line":41,"column":8,"nodeType":"358","endLine":41,"endColumn":10,"suggestions":"395"},{"ruleId":"343","severity":1,"message":"396","line":5,"column":23,"nodeType":"345","messageId":"346","endLine":5,"endColumn":31},{"ruleId":"343","severity":1,"message":"397","line":5,"column":49,"nodeType":"345","messageId":"346","endLine":5,"endColumn":54},{"ruleId":"343","severity":1,"message":"398","line":5,"column":56,"nodeType":"345","messageId":"346","endLine":5,"endColumn":66},{"ruleId":"360","severity":1,"message":"399","line":37,"column":25,"nodeType":"400","messageId":"401","endLine":37,"endColumn":34},{"ruleId":"343","severity":1,"message":"402","line":58,"column":11,"nodeType":"345","messageId":"346","endLine":58,"endColumn":18},{"ruleId":"403","severity":1,"message":"404","line":72,"column":17,"nodeType":"405","endLine":76,"endColumn":19},{"ruleId":"343","severity":1,"message":"406","line":128,"column":13,"nodeType":"345","messageId":"346","endLine":128,"endColumn":25},{"ruleId":"343","severity":1,"message":"407","line":128,"column":45,"nodeType":"345","messageId":"346","endLine":128,"endColumn":59},{"ruleId":"343","severity":1,"message":"408","line":6,"column":11,"nodeType":"345","messageId":"346","endLine":6,"endColumn":20},{"ruleId":"343","severity":1,"message":"409","line":7,"column":11,"nodeType":"345","messageId":"346","endLine":7,"endColumn":18},{"ruleId":"356","severity":1,"message":"357","line":22,"column":8,"nodeType":"358","endLine":22,"endColumn":10,"suggestions":"410"},{"ruleId":"343","severity":1,"message":"354","line":1,"column":28,"nodeType":"345","messageId":"346","endLine":1,"endColumn":37},{"ruleId":"343","severity":1,"message":"411","line":32,"column":11,"nodeType":"345","messageId":"346","endLine":32,"endColumn":26},{"ruleId":"356","severity":1,"message":"364","line":57,"column":8,"nodeType":"358","endLine":57,"endColumn":10,"suggestions":"412"},{"ruleId":"360","severity":1,"message":"361","line":63,"column":18,"nodeType":"362","messageId":"363","endLine":63,"endColumn":20},{"ruleId":"360","severity":1,"message":"361","line":74,"column":34,"nodeType":"362","messageId":"363","endLine":74,"endColumn":36},{"ruleId":"360","severity":1,"message":"361","line":82,"column":34,"nodeType":"362","messageId":"363","endLine":82,"endColumn":36},{"ruleId":"360","severity":1,"message":"361","line":91,"column":34,"nodeType":"362","messageId":"363","endLine":91,"endColumn":36},{"ruleId":"360","severity":1,"message":"361","line":102,"column":31,"nodeType":"362","messageId":"363","endLine":102,"endColumn":33},{"ruleId":"360","severity":1,"message":"361","line":110,"column":31,"nodeType":"362","messageId":"363","endLine":110,"endColumn":33},{"ruleId":"360","severity":1,"message":"361","line":119,"column":31,"nodeType":"362","messageId":"363","endLine":119,"endColumn":33},{"ruleId":"356","severity":1,"message":"364","line":35,"column":8,"nodeType":"358","endLine":35,"endColumn":10,"suggestions":"413"},{"ruleId":"343","severity":1,"message":"349","line":112,"column":15,"nodeType":"345","messageId":"346","endLine":112,"endColumn":18},{"ruleId":"356","severity":1,"message":"364","line":36,"column":8,"nodeType":"358","endLine":36,"endColumn":10,"suggestions":"414"},{"ruleId":"356","severity":1,"message":"364","line":45,"column":8,"nodeType":"358","endLine":45,"endColumn":10,"suggestions":"415"},{"ruleId":"360","severity":1,"message":"361","line":59,"column":18,"nodeType":"362","messageId":"363","endLine":59,"endColumn":20},{"ruleId":"350","severity":1,"message":"351","line":64,"column":33,"nodeType":"352","messageId":"353","endLine":64,"endColumn":35},{"ruleId":"350","severity":1,"message":"351","line":65,"column":39,"nodeType":"352","messageId":"353","endLine":65,"endColumn":41},{"ruleId":"360","severity":1,"message":"361","line":75,"column":18,"nodeType":"362","messageId":"363","endLine":75,"endColumn":20},{"ruleId":"343","severity":1,"message":"416","line":86,"column":11,"nodeType":"345","messageId":"346","endLine":86,"endColumn":28},{"ruleId":"356","severity":1,"message":"364","line":39,"column":8,"nodeType":"358","endLine":39,"endColumn":10,"suggestions":"417"},{"ruleId":"360","severity":1,"message":"361","line":45,"column":18,"nodeType":"362","messageId":"363","endLine":45,"endColumn":20},"no-native-reassign",["418"],"no-negated-in-lhs",["419"],"no-unused-vars","'Graficas' is defined but never used.","Identifier","unusedVar","'IncidentesCasillas' is defined but never used.","'ReportesRgs' is defined but never used.","'res' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Component' is defined but never used.","'Thermometer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["420"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'dispatch' and 'persona'. Either include them or remove the dependency array.",["421"],"'MenuButtonListCpt' is defined but never used.","'modelo' is assigned a value but never used.",["422"],"no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","ReturnStatement",["423"],"React Hook useEffect has missing dependencies: 'casilla' and 'dispatch'. Either include them or remove the dependency array.",["424"],"'useState' is defined but never used.","'updateVotoAccion' is defined but never used.",["425"],["426"],"React Hook useEffect has missing dependencies: 'dispatch' and 'eleccion'. Either include them or remove the dependency array.",["427"],"'Fragment' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Grid' is defined but never used.","'loginRedux' is assigned a value but never used.","'reload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'persona'. Either include them or remove the dependency array.",["428"],"'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'casilla', 'dispatch', and 'id'. Either include them or remove the dependency array.",["429"],"React Hook useEffect has missing dependencies: 'dispatch', 'eleccion', and 'id'. Either include them or remove the dependency array.",["430"],"'BarChart' is defined but never used.","'Error' is defined but never used.","'FindInPage' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'classes' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'basicOptions' is assigned a value but never used.","'stackedOptions' is assigned a value but never used.","'novotados' is assigned a value but never used.","'votados' is assigned a value but never used.",["431"],"'totalestructura' is assigned a value but never used.",["432"],["433"],["434"],["435"],"'activistascolumns' is assigned a value but never used.",["436"],"no-global-assign","no-unsafe-negation",{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"439","fix":"441"},{"desc":"437","fix":"442"},{"desc":"443","fix":"444"},{"desc":"439","fix":"445"},{"desc":"437","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"437","fix":"455"},{"desc":"439","fix":"456"},{"desc":"439","fix":"457"},{"desc":"439","fix":"458"},{"desc":"439","fix":"459"},{"desc":"439","fix":"460"},"Update the dependencies array to be: [dispatch]",{"range":"461","text":"462"},"Update the dependencies array to be: [dispatch, persona]",{"range":"463","text":"464"},{"range":"465","text":"464"},{"range":"466","text":"462"},"Update the dependencies array to be: [casilla, dispatch]",{"range":"467","text":"468"},{"range":"469","text":"464"},{"range":"470","text":"462"},"Update the dependencies array to be: [dispatch, eleccion]",{"range":"471","text":"472"},"Update the dependencies array to be: [dispatch, id, persona]",{"range":"473","text":"474"},"Update the dependencies array to be: [casilla, dispatch, id]",{"range":"475","text":"476"},"Update the dependencies array to be: [dispatch, eleccion, id]",{"range":"477","text":"478"},{"range":"479","text":"462"},{"range":"480","text":"464"},{"range":"481","text":"464"},{"range":"482","text":"464"},{"range":"483","text":"464"},{"range":"484","text":"464"},[2669,2671],"[dispatch]",[1080,1082],"[dispatch, persona]",[1586,1588],[1667,1669],[1328,1330],"[casilla, dispatch]",[1521,1523],[4054,4056],[1228,1230],"[dispatch, eleccion]",[1029,1031],"[dispatch, id, persona]",[1174,1176],"[casilla, dispatch, id]",[1198,1200],"[dispatch, eleccion, id]",[733,735],[2069,2071],[1162,1164],[1449,1451],[1543,1545],[1194,1196]]