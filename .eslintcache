[{"/home/node/aplicacion/mdc-softare-frontend/src/index.js":"1","/home/node/aplicacion/mdc-softare-frontend/src/App.jsx":"2","/home/node/aplicacion/mdc-softare-frontend/src/themeConfig.js":"3","/home/node/aplicacion/mdc-softare-frontend/src/redux/store.js":"4","/home/node/aplicacion/mdc-softare-frontend/src/components/Container.jsx":"5","/home/node/aplicacion/mdc-softare-frontend/src/redux/CasillasDucks.js":"6","/home/node/aplicacion/mdc-softare-frontend/src/redux/PersonaActivistaDucks.js":"7","/home/node/aplicacion/mdc-softare-frontend/src/redux/InfoAdicionalCasillasDucks.js":"8","/home/node/aplicacion/mdc-softare-frontend/src/redux/ReportesRgsDucks.js":"9","/home/node/aplicacion/mdc-softare-frontend/src/redux/EleccionesDucks.js":"10","/home/node/aplicacion/mdc-softare-frontend/src/components/DrawerCustom.jsx":"11","/home/node/aplicacion/mdc-softare-frontend/src/components/Navbar.jsx":"12","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Home.jsx":"13","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas.jsx":"14","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ReportesRgs.jsx":"15","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Graficas.jsx":"16","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/IncidentesCasillas.jsx":"17","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones.jsx":"18","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos.jsx":"19","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos/PromovidoDetalle.jsx":"20","/home/node/aplicacion/mdc-softare-frontend/src/components/ListIcons.jsx":"21","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/DataGridCpt.jsx":"22","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/ContextMenuCpt.jsx":"23","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/AccordionCpt.jsx":"24","/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCpt.jsx":"25"},{"size":217,"mtime":1611516282426,"results":"26","hashOfConfig":"27"},{"size":492,"mtime":1611711850947,"results":"28","hashOfConfig":"27"},{"size":311,"mtime":1611550280894,"results":"29","hashOfConfig":"27"},{"size":872,"mtime":1612133864541,"results":"30","hashOfConfig":"27"},{"size":2876,"mtime":1613221657731,"results":"31","hashOfConfig":"27"},{"size":3035,"mtime":1612123165064,"results":"32","hashOfConfig":"27"},{"size":3407,"mtime":1613416634952,"results":"33","hashOfConfig":"27"},{"size":3450,"mtime":1612025334489,"results":"34","hashOfConfig":"27"},{"size":2034,"mtime":1612133676311,"results":"35","hashOfConfig":"27"},{"size":2651,"mtime":1612134584281,"results":"36","hashOfConfig":"27"},{"size":997,"mtime":1612148591425,"results":"37","hashOfConfig":"27"},{"size":1369,"mtime":1612927824435,"results":"38","hashOfConfig":"27"},{"size":224,"mtime":1612148828672,"results":"39","hashOfConfig":"27"},{"size":2689,"mtime":1613420414652,"results":"40","hashOfConfig":"27"},{"size":1630,"mtime":1613420623182,"results":"41","hashOfConfig":"27"},{"size":5439,"mtime":1611731824019,"results":"42","hashOfConfig":"27"},{"size":4025,"mtime":1613420443252,"results":"43","hashOfConfig":"27"},{"size":4513,"mtime":1613420428900,"results":"44","hashOfConfig":"27"},{"size":3617,"mtime":1613420530865,"results":"45","hashOfConfig":"27"},{"size":2244,"mtime":1613453898589,"results":"46","hashOfConfig":"27"},{"size":4305,"mtime":1612122021749,"results":"47","hashOfConfig":"27"},{"size":1021,"mtime":1612146474640,"results":"48","hashOfConfig":"27"},{"size":2145,"mtime":1612148775691,"results":"49","hashOfConfig":"27"},{"size":2107,"mtime":1612504790491,"results":"50","hashOfConfig":"51"},{"size":704,"mtime":1613453939579,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wh7eu1",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"1rhg2r0",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/node/aplicacion/mdc-softare-frontend/src/index.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/App.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/themeConfig.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/store.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/Container.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/CasillasDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/PersonaActivistaDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/InfoAdicionalCasillasDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/ReportesRgsDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/redux/EleccionesDucks.js",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/DrawerCustom.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/Navbar.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Home.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Casillas.jsx",["110"],"import React, { useEffect } from \"react\";\nimport { obtenerCasillaAccion } from \"../../redux/CasillasDucks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\n\nconst Casillas = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n    const casillas = useSelector((store) => store.casillas.array);\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerCasillaAccion());\n    }, []);\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccionasignada\",\n            headerName: \"SECCIONASIGNADA\",\n            width: 180,\n        },\n        {\n            field: \"padronelectoral\",\n            headerName: \"PADRONELECTORAL\",\n            width: 180,\n        },\n        {\n            field: \"listanominal\",\n            headerName: \"LISTANOMINAL\",\n            width: 180,\n        },\n        {\n            field: \"cargo\",\n            headerName: \"CARGO\",\n            width: 180,\n        },\n        {\n            field: \"flujo10am\",\n            headerName: \"FLUJO10AM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos10am\",\n            headerName: \"PROMOVIDOS10AM\",\n            width: 180,\n        },\n        {\n            field: \"flujo12pm\",\n            headerName: \"FLUJO12PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos12pm\",\n            headerName: \"PROMOVIDOS12PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo2pm\",\n            headerName: \"FLUJO2PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos2pm\",\n            headerName: \"PROMOVIDOS2PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo4pm\",\n            headerName: \"FLUJO4PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos4pm\",\n            headerName: \"PROMOVIDOS4PM\",\n            width: 180,\n        },\n        {\n            field: \"flujo6pm\",\n            headerName: \"FLUJO6PM\",\n            width: 180,\n        },\n        {\n            field: \"promovidos6pm\",\n            headerName: \"PROMOVIDOS6PM\",\n            width: 180,\n        },\n        {\n            field: \"nombreinformatico\",\n            headerName: \"NOMBREINFORMATICO\",\n            width: 180,\n        },\n        {\n            field: \"telefono\",\n            headerName: \"TELEFONO\",\n            width: 180,\n        },\n    ];\n\n    return (\n        <div>\n            <h3>Casillas</h3>\n            <DataGridCpt columns={columns} actArray={casillas} />\n        </div>\n    )\n}\n\nexport default Casillas\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/ReportesRgs.jsx",["111"],"import React, { useEffect } from \"react\";\nimport { obtenerReportesRgsAccion } from \"../../redux/ReportesRgsDucks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\n\nconst ReportesRgs = () => {\n    //Configuraciones iniciales\n    const dispatch = useDispatch();\n    const reportesRgs = useSelector((store) => store.reportesRgs.array);\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerReportesRgsAccion());\n    }, []);\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDREPORTESRGS\",\n            width: 180,\n        },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 180,\n        },\n        {\n            field: \"idlistanom\",\n            headerName: \"IDLISTANOM\",\n            width: 180,\n        },\n        {\n            field: \"puesto\",\n            headerName: \"PUESTO\",\n            width: 180,\n        },\n        {\n            field: \"nombre\",\n            headerName: \"NOMBRE\",\n            width: 180,\n        },\n        {\n            field: \"telefono\",\n            headerName: \"TELEFONO\",\n            width: 180,\n        },\n        {\n            field: \"claveelector\",\n            headerName: \"CLAVEELECTOR\",\n            width: 180,\n        },\n        {\n            field: \"observaciones\",\n            headerName: \"OBSERVACIONES\",\n            width: 180,\n        }\n    ];\n\n    return (\n        <div>\n            <h1>ReportesRgs</h1>\n            <DataGridCpt columns={columns} actArray={reportesRgs} />\n        </div>\n    )\n}\n\nexport default ReportesRgs","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Graficas.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/pages/IncidentesCasillas.jsx",["112"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerinfoAdicionalCasillaAccion } from \"../../redux/InfoAdicionalCasillasDucks\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\n\nconst IncidentesCasillas = () => {\n    //Store y redux\n    const dispatch = useDispatch();\n    const infoAdicionalCasillas = useSelector((store) => store.infoAdicionalCasillas.array);\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDINFOADICIONALCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"idcasilla\",\n            headerName: \"IDCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccionasignada\",\n            headerName: \"SECCIONASIGNADA\",\n            width: 180,\n        },\n        {\n            field: \"horaapertura\",\n            headerName: \"HORAAPERTURA\",\n            width: 180,\n        },\n        {\n            field: \"horacierre\",\n            headerName: \"HORACIERRE\",\n            width: 180,\n        },\n        {\n            field: \"incidenteuno\",\n            headerName: \"INCIDENTEUNO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidenteuno\",\n            headerName: \"HORAINCIDENTEUNO\",\n            width: 180,\n        },\n        {\n            field: \"incidentedos\",\n            headerName: \"INCIDENTEDOS\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentedos\",\n            headerName: \"HORAINCIDENTEDOS\",\n            width: 180,\n        },\n        {\n            field: \"incidentetres\",\n            headerName: \"INCIDENTETRES\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentetres\",\n            headerName: \"HORAINCIDENTETRES\",\n            width: 180,\n        },\n        {\n            field: \"incidentecuatro\",\n            headerName: \"INCIDENTECUATRO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentecuatro\",\n            headerName: \"HORAINCIDENTECUATRO\",\n            width: 180,\n        },\n        {\n            field: \"incidentecinco\",\n            headerName: \"INCIDENTECINCO\",\n            width: 180,\n        },\n        {\n            field: \"horaincidentecinco\",\n            headerName: \"HORAINCIDENTECINCO\",\n            width: 180,\n        },\n        {\n            field: \"prip1\",\n            headerName: \"PRIP1\",\n            width: 180,\n        },\n        {\n            field: \"prip2\",\n            headerName: \"PRIP2\",\n            width: 180,\n        },\n        {\n            field: \"pris1\",\n            headerName: \"PRIS1\",\n            width: 180,\n        },\n        {\n            field: \"pris2\",\n            headerName: \"PRIS2\",\n            width: 180,\n        },\n        {\n            field: \"presidente\",\n            headerName: \"PRESIDENTE\",\n            width: 180,\n        },\n        {\n            field: \"sec1\",\n            headerName: \"SEC1\",\n            width: 180,\n        },\n        {\n            field: \"sec2\",\n            headerName: \"SEC2\",\n            width: 180,\n        },\n        {\n            field: \"esc1\",\n            headerName: \"ESC1\",\n            width: 180,\n        },\n        {\n            field: \"esc2\",\n            headerName: \"ESC2\",\n            width: 180,\n        },\n        {\n            field: \"esc3\",\n            headerName: \"ESC3\",\n            width: 180,\n        },\n        {\n            field: \"sup1\",\n            headerName: \"SUP1\",\n            width: 180,\n        },\n        {\n            field: \"sup2\",\n            headerName: \"SUP2\",\n            width: 180,\n        },\n        {\n            field: \"sup3\",\n            headerName: \"SUP3\",\n            width: 180,\n        },\n    ];\n\n    //Hacemos carga inicial\n    useEffect(() => {\n        dispatch(obtenerinfoAdicionalCasillaAccion());\n    }, []);\n\n    return (\n        <div>\n            <h3>Incidentes Casillas</h3>\n            <DataGridCpt columns={columns} actArray={infoAdicionalCasillas} />\n        </div>\n    )\n}\n\nexport default IncidentesCasillas\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Elecciones.jsx",["113"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerEleccionesAccion } from \"../../redux/EleccionesDucks\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\n\nconst Elecciones = () => {\n    //Datos iniciales\n    const dispatch = useDispatch();\n    const elecciones = useSelector((store) => store.elecciones.array);\n\n    //Carga iniciales\n    useEffect(() => {\n        dispatch(obtenerEleccionesAccion());\n    }, []);\n\n    // Columnas\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"IDTABLAELECCIONES\",\n            width: 180,\n        },\n        {\n            field: \"idcasilla\",\n            headerName: \"IDCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"idrepcasilla\",\n            headerName: \"IDREPCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"seccion\",\n            headerName: \"SECCION\",\n            width: 180,\n        },\n        {\n            field: \"tipocasilla\",\n            headerName: \"TIPOCASILLA\",\n            width: 180,\n        },\n        {\n            field: \"pan\",\n            headerName: \"PAN\",\n            width: 180,\n        },\n        {\n            field: \"pri\",\n            headerName: \"PRI\",\n            width: 180,\n        },\n        {\n            field: \"prd\",\n            headerName: \"PRD\",\n            width: 180,\n        },\n        {\n            field: \"pvem\",\n            headerName: \"PVEM\",\n            width: 180,\n        },\n        {\n            field: \"pt\",\n            headerName: \"PT\",\n            width: 180,\n        },\n        {\n            field: \"movciudadano\",\n            headerName: \"MOVCIUDADANO\",\n            width: 180,\n        },\n        {\n            field: \"nuevaalianza\",\n            headerName: \"NUEVAALIANZA\",\n            width: 180,\n        },\n        {\n            field: \"morena\",\n            headerName: \"MORENA\",\n            width: 180,\n        },\n        {\n            field: \"encuentrosocial\",\n            headerName: \"ENCUENTROSOCIAL\",\n            width: 180,\n        },\n        {\n            field: \"panprdmovciudadano\",\n            headerName: \"PANPRDMOVCIUDADANO\",\n            width: 180,\n        },\n        {\n            field: \"panprd\",\n            headerName: \"PANPRD\",\n            width: 180,\n        },\n        {\n            field: \"panmovciudadano\",\n            headerName: \"PANMOVCIUDADANO\",\n            width: 180,\n        },\n        {\n            field: \"prdmovciudadano\",\n            headerName: \"PRDMOVCIUDADANO\",\n            width: 180,\n        },\n        {\n            field: \"pripvemnuevaalianza\",\n            headerName: \"PRIPVEMNUEVAALIANZA\",\n            width: 180,\n        },\n        {\n            field: \"pripvem\",\n            headerName: \"PRIPVEM\",\n            width: 180,\n        },\n        {\n            field: \"prinuevaalianza\",\n            headerName: \"PRINUEVAALIANZA\",\n            width: 180,\n        },\n        {\n            field: \"pvemnuevaalianza\",\n            headerName: \"PVEMNUEVAALIANZA\",\n            width: 180,\n        },\n        {\n            field: \"ptmorenaencuentrosocial\",\n            headerName: \"PTMORENAENCUENTROSOCIAL\",\n            width: 180,\n        },\n        {\n            field: \"ptmorena\",\n            headerName: \"PTMORENA\",\n            width: 180,\n        },\n        {\n            field: \"ptencuentrosocial\",\n            headerName: \"PTENCUENTROSOCIAL\",\n            width: 180,\n        },\n        {\n            field: \"morenaencuentrosocial\",\n            headerName: \"MORENAENCUENTROSOCIAL\",\n            width: 180,\n        },\n        {\n            field: \"candidatoindependiente\",\n            headerName: \"CANDIDATOINDEPENDIENTE\",\n            width: 180,\n        },\n        {\n            field: \"noregistrados\",\n            headerName: \"NOREGISTRADOS\",\n            width: 180,\n        },\n        {\n            field: \"candidatosnoregistrados\",\n            headerName: \"CANDIDATOSNOREGISTRADOS\",\n            width: 180,\n        },\n        {\n            field: \"nulos\",\n            headerName: \"NULOS\",\n            width: 180,\n        },\n        {\n            field: \"total\",\n            headerName: \"TOTAL\",\n            width: 180,\n        },\n        {\n            field: \"listanominal\",\n            headerName: \"LISTANOMINAL\",\n            width: 180,\n        },\n    ];\n\n\n    return (\n        <div>\n            <h1>Elecciones</h1>\n            <DataGridCpt columns={columns} actArray={elecciones} />\n        </div>\n    )\n}\n\nexport default Elecciones    ","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos.jsx",["114"],"import React, { useEffect } from \"react\";\nimport DataGridCpt from \"../utils/DataGridCpt\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IconButton } from '@material-ui/core'\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport { obtenerPersonaActivistaAccion, actualizarPersonaActivistaVotadaAccion } from \"../../redux/PersonaActivistaDucks\";\nimport { useHistory } from \"react-router-dom\";\nimport { Input } from '@material-ui/icons/'\n\nconst Promovidos = () => {\n\tconst dispatch = useDispatch();\n\tconst activistas = useSelector((store) => store.personasActivistas.array);\n\tconst reload = useSelector((store) => store.personasActivistas.reload);\n\tconst history = useHistory();\n\n\t//Persona\n\tconst persona = {\n\t\tid: \"\",\n\t\tvotado: 0,\n\t};\n\n\t//Hacemos carga inicial\n\tuseEffect(() => {\n\t\tdispatch(obtenerPersonaActivistaAccion(persona));\n\t}, []);\n\n\t//Verificamos si hubo cambios\n\tif (reload) {\n\t\tpersona.id = \"\";\n\t\tdispatch(obtenerPersonaActivistaAccion(persona));\n\t}\n\n\t//Realizamos\n\tconst performAction = (id) => {\n\t\tconsole.log(\"vota\");\n\t\thandleVotado(id);\n\t};\n\n\t//Handle votado\n\tconst handleVotado = (id) => {\n\t\tpersona.id = id;\n\t\tpersona.votado = 1;\n\t\tdispatch(actualizarPersonaActivistaVotadaAccion(persona));\n\t};\n\n\n\n\t// Columnas\n\tconst columns = [\n\t\t{\n\t\t\tfield: \"id\",\n\t\t\theaderName: \"ID\",\n\t\t\twidth: 180,\n\t\t\thide: true,\n\t\t},\n\t\t{\n\t\t\tfield: \"acciones\",\n\t\t\theaderName: \"Ir\",\n\t\t\twidth: 120,\n\t\t\tdisableClickEventBubbling: true,\n\t\t\trenderCell: (params: CellParams) => {\n\t\t\t\tconst routeChange = (id) => {\n\t\t\t\t\tlet path = `/promovidos/promovidodetalle/${id}`;\n\t\t\t\t\thistory.push(path);\n\t\t\t\t}\n\n\t\t\t\tconst onClick = () => {\n\t\t\t\t\tconst api: GridApi = params.api;\n\t\t\t\t\tconst fields = api\n\t\t\t\t\t\t.getAllColumns()\n\t\t\t\t\t\t.map((c) => c.field)\n\t\t\t\t\t\t.filter((c) => c !== \"__check__\" && !!c);\n\t\t\t\t\tconst thisRow = {};\n\n\t\t\t\t\tfields.forEach((f) => {\n\t\t\t\t\t\tthisRow[f] = params.getValue(f);\n\t\t\t\t\t});\n\n\t\t\t\t\trouteChange(thisRow.id);\n\t\t\t\t};\n\t\t\t\treturn <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={onClick}>\n\t\t\t\t\t<Input />\n\t\t\t\t</IconButton>\n\n\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tfield: \"votado\",\n\t\t\theaderName: \"VOTADO\",\n\t\t\twidth: 120,\n\t\t\trenderCell: (params: CellParams) => {\n\t\t\t\tif (params.value === 1) {\n\t\t\t\t\treturn <DoneAllIcon\n\t\t\t\t\t\tstyle={{ color: '#03a9f4' }}\n\t\t\t\t\t/>;\n\t\t\t\t} else {\n\t\t\t\t\tconst onClick = () => {\n\t\t\t\t\t\tconst api: GridApi = params.api;\n\t\t\t\t\t\tconst fields = api\n\t\t\t\t\t\t\t.getAllColumns()\n\t\t\t\t\t\t\t.map((c) => c.field)\n\t\t\t\t\t\t\t.filter((c) => c !== \"__check__\" && !!c);\n\t\t\t\t\t\tconst thisRow = {};\n\n\t\t\t\t\t\tfields.forEach((f) => {\n\t\t\t\t\t\t\tthisRow[f] = params.getValue(f);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tperformAction(thisRow.id);\n\t\t\t\t\t};\n\t\t\t\t\treturn <RadioButtonUncheckedIcon\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t/>;\n\t\t\t\t}\n\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tfield: \"idpuesto\",\n\t\t\theaderName: \"IDPUESTO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"idrol\",\n\t\t\theaderName: \"IDROL\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"idjefe\",\n\t\t\theaderName: \"IDJEFE\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"zona\",\n\t\t\theaderName: \"ZONA\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"puesto\",\n\t\t\theaderName: \"PUESTO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"nombre\",\n\t\t\theaderName: \"NOMBRE\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"telefono\",\n\t\t\theaderName: \"TELEFONO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"domicilio\",\n\t\t\theaderName: \"DOMICILIO\",\n\t\t\twidth: 180,\n\t\t},\n\t\t{\n\t\t\tfield: \"claveelector\",\n\t\t\theaderName: \"CLAVEELECTOR\",\n\t\t\twidth: 180,\n\t\t},\n\n\t];\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>Lista</h3>\n\t\t\t<DataGridCpt columns={columns} actArray={activistas} reload={reload} />\n\t\t</div>\n\t);\n};\n\nexport default Promovidos;\n","/home/node/aplicacion/mdc-softare-frontend/src/components/pages/Promovidos/PromovidoDetalle.jsx",["115","116","117","118"],"import React, { useEffect, Fragment } from \"react\";\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { obtenerPersonaActivistaAccion } from \"../../../redux/PersonaActivistaDucks\";\nimport MaterialTable from \"material-table\";\nimport MaterialTableCpt from '../../utils/MaterialTableCpt';\n\nconst PromovidoDetalle = () => {\n  //Store y configuracion REDUX\n  const dispatch = useDispatch();\n  const activistas = useSelector((store) => store.personasActivistas.array);\n\n\n  //Recibimos parametros\n  const { id } = useParams()\n\n  //Persona\n  const persona = {\n    id: id,\n    votado: 0,\n  };\n\n  //Hacemos carga inicial\n  useEffect(() => {\n    persona.id = id;\n    dispatch(obtenerPersonaActivistaAccion(persona));\n  }, []);\n\n  //Columnas\n  const columns = [\n    { title: 'VOTADO', field: 'votado', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n    { title: 'IDPUESTO', field: 'idpuesto', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n    { title: 'IDROL', field: 'idrol', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n    { title: 'IDJEFE', field: 'idjefe', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n    { title: 'ZONA', field: 'zona', headerStyle: { minWidth: 100 }, cellStyle: { minWidth: 100 }, },\n    { title: 'PUESTO', field: 'puesto', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n    { title: 'NOMBRE', field: 'nombre', headerStyle: { minWidth: 380 }, cellStyle: { minWidth: 380 }, },\n    { title: 'TELEFONO', field: 'telefono', headerStyle: { minWidth: 140 }, cellStyle: { minWidth: 140 }, },\n    { title: 'DOMICILIO', field: 'domicilio', headerStyle: { minWidth: 280 }, cellStyle: { minWidth: 280 }, },\n    { title: 'CLAVEELECTOR', field: 'claveelector', headerStyle: { minWidth: 180 }, cellStyle: { minWidth: 180 }, },\n  ];\n\n  return (\n\n    //reasignamos id\n    activistas.map(\n      item => {\n        item.id = item.idpuesto\n      }\n    ),\n    <div>\n      <h3>Lista</h3>\n      <MaterialTableCpt title={\"Detalles promovido\"} columns={columns} data={activistas} parentChildData={(row, rows) => rows.find(a => a.id === row.idjefe)} />\n    </div>\n\n  )\n}\n\nexport default PromovidoDetalle\n\n","/home/node/aplicacion/mdc-softare-frontend/src/components/ListIcons.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/DataGridCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/ContextMenuCpt.jsx",[],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/AccordionCpt.jsx",[],["119","120"],"/home/node/aplicacion/mdc-softare-frontend/src/components/utils/MaterialTableCpt.jsx",[],{"ruleId":"121","severity":1,"message":"122","line":14,"column":8,"nodeType":"123","endLine":14,"endColumn":10,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"122","line":14,"column":8,"nodeType":"123","endLine":14,"endColumn":10,"suggestions":"125"},{"ruleId":"121","severity":1,"message":"122","line":158,"column":8,"nodeType":"123","endLine":158,"endColumn":10,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"122","line":14,"column":8,"nodeType":"123","endLine":14,"endColumn":10,"suggestions":"127"},{"ruleId":"121","severity":1,"message":"128","line":26,"column":5,"nodeType":"123","endLine":26,"endColumn":7,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":28,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"134","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":21},{"ruleId":"121","severity":1,"message":"135","line":27,"column":6,"nodeType":"123","endLine":27,"endColumn":8,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":47,"column":12,"nodeType":"139","messageId":"140","endLine":47,"endColumn":14},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["145"],["146"],["147"],["148"],"React Hook useEffect has missing dependencies: 'dispatch' and 'persona'. Either include them or remove the dependency array.",["149"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'MaterialTable' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'persona'. Either include them or remove the dependency array.",["150"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["151"],"no-negated-in-lhs",["152"],{"desc":"153","fix":"154"},{"desc":"153","fix":"155"},{"desc":"153","fix":"156"},{"desc":"153","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"162","text":"163"},{"range":"164","text":"163"},{"range":"165","text":"163"},{"range":"166","text":"163"},"Update the dependencies array to be: [dispatch, persona]",{"range":"167","text":"168"},"Update the dependencies array to be: [dispatch, id, persona]",{"range":"169","text":"170"},[461,463],"[dispatch]",[493,495],[3814,3816],[471,473],[941,943],"[dispatch, persona]",[769,771],"[dispatch, id, persona]"]